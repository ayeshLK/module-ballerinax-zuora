// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2024, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/http;
import ballerina/mime;

# 
# 
# # Introduction
# 
# Welcome to the REST API reference for the Zuora Billing, Payments, and Central Platform!
# 
# To learn about the common use cases of Zuora REST APIs, check out the [REST API Tutorials](https://developer.zuora.com/rest-api/api-guides/overview/).
# 
#     
# The Zuora REST API provides a broad set of operations and resources that:
# 
#   * Enable Web Storefront integration from your website.
#   * Support self-service subscriber sign-ups and account management.
#   * Process revenue schedules through custom revenue rule models.
#   * Enable manipulation of most objects in the Zuora Billing Object Model.
# 
# Want to share your opinion on how our API works for you? <a href="https://community.zuora.com/t5/Developers/API-Feedback-Form/gpm-p/21399" target="_blank">Tell us how you feel </a>about using our API and what we can do to make it better.
# 
# Some of our older APIs are no longer recommended but still available, not affecting any existing integration. To find related API documentation, see [Older API Reference](https://developer.zuora.com/api-references/older-api/overview/).
# 
# 
# # Base URL
# 
# All API requests occur in a test or production environment.  For details on Zuora’s environments, see <a href="https://knowledgecenter.zuora.com/Zuora_Environments" target="_blank">Zuora Environments</a> in the Knowledge Center. 
# Each environment uses a different base URL. Select the appropriate base URL below that you need to use:
# 
# | Environment              | Base URL    |
# |:-----------------------|:-----------------------|
# |US Developer & Central Sandbox <p>_Applicable for Test Drive and trial access_</p> | https://rest.test.zuora.com |
# |US API Sandbox | https://rest.sandbox.na.zuora.com (Cloud 1) <br /> https://rest.apisandbox.zuora.com (Cloud 2)|
# |US Production | https://rest.na.zuora.com (Cloud 1) <br /> https://rest.zuora.com (Cloud 2)|
# |EU Developer & Central Sandbox | https://rest.test.eu.zuora.com |
# |EU API Sandbox | https://rest.sandbox.eu.zuora.com |
# |EU Production | https://rest.eu.zuora.com |
# 
# If you do not have a Zuora tenant, go to <a href="https://www.zuora.com/resource/zuora-test-drive" target="_blank">https://www.zuora.com/resource/zuora-test-drive</a> and sign up for a Test Drive.
# 
# 
# # Error Handling
# 
# If a request to Zuora Billing REST API with an endpoint starting with `/v1` (except [Actions](https://developer.zuora.com/api-references/api/tag/Actions) and CRUD operations) fails, the response will contain an eight-digit error code with a corresponding error message to indicate the details of the error.
# 
# The following code snippet is a sample error response that contains an error code and message pair:
# 
# ```
#  {
#    "success": false,
#    "processId": "CBCFED6580B4E076",
#    "reasons":  [
#      {
#       "code": 53100320,
#       "message": "'termType' value should be one of: TERMED, EVERGREEN"
#      }
#     ]
#  }
# ```
# The `success` field indicates whether the API request has succeeded. The `processId` field is a Zuora internal ID that you can provide to Zuora Global Support for troubleshooting purposes.
# 
# The `reasons` field contains the actual error code and message pair. The error code begins with `5` or `6` means that you encountered a certain issue that is specific to a REST API resource in Zuora Billing, Payments, and Central Platform. For example, `53100320` indicates that an invalid value is specified for the `termType` field of the `subscription` object.
# 
# The error code beginning with `9` usually indicates that an authentication-related issue occurred, and it can also indicate other unexpected errors depending on different cases. For example, `90000011` indicates that an invalid credential is provided in the request header. 
# 
# When troubleshooting the error, you can divide the error code into two components: REST API resource code and error category code. See the following Zuora error code sample:
# 
# <a href="https://developer.zuora.com/images/ZuoraErrorCode.jpeg" target="_blank"><img src="https://developer.zuora.com/images/ZuoraErrorCode.jpeg" alt="Zuora Error Code Sample"></a>
# 
# 
# **Note:** Zuora determines resource codes based on the request payload. Therefore, if GET and DELETE requests that do not contain payloads fail, you will get `500000` as the resource code, which indicates an unknown object and an unknown field. 
# The error category code of these requests is valid and follows the rules described in the [Error Category Codes](https://developer.zuora.com/api-references/api/overview/#section/Error-Handling/Error-Category-Codes) section. 
# In such case, you can refer to the returned error message to troubleshoot.
# 
# 
# ## REST API Resource Codes
# 
# The 6-digit resource code indicates the REST API resource, typically a field of a Zuora object, on which the issue occurs. In the preceding example, `531003` refers to the `termType` field of the `subscription` object. 
# 
# The value range for all REST API resource codes is from `500000` to `679999`. See <a href="https://knowledgecenter.zuora.com/Central_Platform/API/AA_REST_API/Resource_Codes" target="_blank">Resource Codes</a> in the Knowledge Center for a full list of resource codes.
# 
# ## Error Category Codes
# 
# The 2-digit error category code identifies the type of error, for example, resource not found or missing required field. 
# 
# The following table describes all error categories and the corresponding resolution:
# 
# | Code    | Error category              | Description    | Resolution    |
# |:--------|:--------|:--------|:--------|
# | 10      | Permission or access denied | The request cannot be processed because a certain tenant or user permission is missing. | Check the missing tenant or user permission in the response message and contact <a href="https://support.zuora.com" target="_blank">Zuora Global Support</a> for enablement. |
# | 11      | Authentication failed       | Authentication fails due to invalid API authentication credentials. | Ensure that a valid API credential is specified. |
# | 20      | Invalid format or value     | The request cannot be processed due to an invalid field format or value. | Check the invalid field in the error message, and ensure that the format and value of all fields you passed in are valid. |
# | 21      | Unknown field in request    | The request cannot be processed because an unknown field exists in the request body. | Check the unknown field name in the response message, and ensure that you do not include any unknown field in the request body. |
# | 22      | Missing required field      | The request cannot be processed because a required field in the request body is missing. | Check the missing field name in the response message, and ensure that you include all required fields in the request body. |
# | 23      | Missing required parameter  | The request cannot be processed because a required query parameter is missing. | Check the missing parameter name in the response message, and ensure that you include the parameter in the query. |
# | 30      | Rule restriction            | The request cannot be processed due to the violation of a Zuora business rule. | Check the response message and ensure that the API request meets the specified business rules. |
# | 40      | Not found                   | The specified resource cannot be found. | Check the response message and ensure that the specified resource exists in your Zuora tenant. |
# | 45      | Unsupported request         | The requested endpoint does not support the specified HTTP method. | Check your request and ensure that the endpoint and method matches. |
# | 50      | Locking contention          | This request cannot be processed because the objects this request is trying to modify are being modified by another API request, UI operation, or batch job process. | <p>Resubmit the request first to have another try.</p> <p>If this error still occurs, contact <a href="https://support.zuora.com" target="_blank">Zuora Global Support</a> with the returned `Zuora-Request-Id` value in the response header for assistance.</p> |
# | 60      | Internal error              | The server encounters an internal error. | Contact <a href="https://support.zuora.com" target="_blank">Zuora Global Support</a> with the returned `Zuora-Request-Id` value in the response header for assistance. |
# | 61      | Temporary error             | A temporary error occurs during request processing, for example, a database communication error. | <p>Resubmit the request first to have another try.</p> <p>If this error still occurs, contact <a href="https://support.zuora.com" target="_blank">Zuora Global Support</a> with the returned `Zuora-Request-Id` value in the response header for assistance. </p>|
# | 70      | Request exceeded limit      | The total number of concurrent requests exceeds the limit allowed by the system. | <p>Resubmit the request after the number of seconds specified by the `Retry-After` value in the response header.</p> <p>Check [Concurrent request limits](https://developer.zuora.com/rest-api/general-concepts/rate-concurrency-limits/) for details about Zuora’s concurrent request limit policy.</p> |
# | 90      | Malformed request           | The request cannot be processed due to JSON syntax errors. | Check the syntax error in the JSON request body and ensure that the request is in the correct JSON format. |
# | 99      | Integration error           | The server encounters an error when communicating with an external system, for example, payment gateway, tax engine provider. | Check the response message and take action accordingly. |
# 
# 
# # API Versions
# 
# The Zuora REST API are version controlled. Versioning ensures that Zuora REST API changes are backward compatible. Zuora uses a major and minor version nomenclature to manage changes. By specifying a version in a REST request, you can get expected responses regardless of future changes to the API.
# 
# ## Major Version
# 
# The major version number of the REST API appears in the REST URL. In this API reference, only the **v1** major version is available. For example, `POST https://rest.zuora.com/v1/subscriptions`.
# 
# ## Minor Version
# 
# Zuora uses minor versions for the REST API to control small changes. For example, a field in a REST method is deprecated and a new field is used to replace it. 
# 
# Some fields in the REST methods are supported as of minor versions. If a field is not noted with a minor version, this field is available for all minor versions. If a field is noted with a minor version, this field is in version control. You must specify the supported minor version in the request header to process without an error. 
# 
# If a field is in version control, it is either with a minimum minor version or a maximum minor version, or both of them. You can only use this field with the minor version between the minimum and the maximum minor versions. For example, the `invoiceCollect` field in the POST Subscription method is in version control and its maximum minor version is 189.0. You can only use this field with the minor version 189.0 or earlier.
# 
# If you specify a version number in the request header that is not supported, Zuora will use the minimum minor version of the REST API. In our REST API documentation, if a field or feature requires a minor version number, we note that in the field description.
# 
# You only need to specify the version number when you use the fields require a minor version. To specify the minor version, set the `zuora-version` parameter to the minor version number in the request header for the request call. For example, the `collect` field is in 196.0 minor version. If you want to use this field for the POST Subscription method, set the  `zuora-version` parameter to `196.0` in the request header. The `zuora-version` parameter is case sensitive.
# 
# For all the REST API fields, by default, if the minor version is not specified in the request header, Zuora will use the minimum minor version of the REST API to avoid breaking your integration. 
# 
# ### Minor Version History
# 
# The supported minor versions are not consecutive. 
# You can use the following versions to override the default version (`186.0`):
#   - 187.0
#   - 188.0
#   - 189.0
#   - 196.0
#   - 206.0
#   - 207.0
#   - 211.0
#   - 214.0
#   - 215.0
#   - 216.0
#   - 223.0
#   - 224.0
#   - 230.0
#   - 239.0
#   - 256.0
#   - 257.0
#   - 309.0
#   - 314.0
#   - 315.0
#   - 329.0
#   - 330.0
#   - 336.0
#   - 337.0
#   - 338.0
#   - 341.0
# 
# If you set the `zuora-version` header to a version excluded from the preceding list, the corresponding API request is processed as you use the default version, `186.0`.
# 
# The following table lists the supported versions and the fields that have a Zuora REST API minor version.
# 
# | Fields         | Minor Version      | REST Methods    | Description |
# |:--------|:--------|:--------|:--------|
# | invoiceCollect | 189.0 and earlier  | [Create Subscription](https://developer.zuora.com/api-references/api/operation/POST_Subscription "Create Subscription"); [Update Subscription](https://developer.zuora.com/api-references/api/operation/PUT_Subscription "Update Subscription"); [Renew Subscription](https://developer.zuora.com/api-references/api/operation/PUT_RenewSubscription "Renew Subscription"); [Cancel Subscription](https://developer.zuora.com/api-references/api/operation/PUT_CancelSubscription "Cancel Subscription"); [Suspend Subscription](https://developer.zuora.com/api-references/api/operation/PUT_SuspendSubscription "Suspend Subscription"); [Resume Subscription](https://developer.zuora.com/api-references/api/operation/PUT_ResumeSubscription "Resume Subscription"); [Create Account](https://developer.zuora.com/api-references/api/operation/POST_Account "Create Account")|Generates an invoice and collects a payment for a subscription. |
# | collect        | 196.0 and later    | [Create Subscription](https://developer.zuora.com/api-references/api/operation/POST_Subscription "Create Subscription"); [Update Subscription](https://developer.zuora.com/api-references/api/operation/PUT_Subscription "Update Subscription"); [Renew Subscription](https://developer.zuora.com/api-references/api/operation/PUT_RenewSubscription "Renew Subscription"); [Cancel Subscription](https://developer.zuora.com/api-references/api/operation/PUT_CancelSubscription "Cancel Subscription"); [Suspend Subscription](https://developer.zuora.com/api-references/api/operation/PUT_SuspendSubscription "Suspend Subscription"); [Resume Subscription](https://developer.zuora.com/api-references/api/operation/PUT_ResumeSubscription "Resume Subscription"); [Create Account](https://developer.zuora.com/api-references/api/operation/POST_Account "Create Account")|Collects an automatic payment for a subscription. |
# | invoice | 196.0 and 207.0| [Create Subscription](https://developer.zuora.com/api-references/api/operation/POST_Subscription "Create Subscription"); [Update Subscription](https://developer.zuora.com/api-references/api/operation/PUT_Subscription "Update Subscription"); [Renew Subscription](https://developer.zuora.com/api-references/api/operation/PUT_RenewSubscription "Renew Subscription"); [Cancel Subscription](https://developer.zuora.com/api-references/api/operation/PUT_CancelSubscription "Cancel Subscription"); [Suspend Subscription](https://developer.zuora.com/api-references/api/operation/PUT_SuspendSubscription "Suspend Subscription"); [Resume Subscription](https://developer.zuora.com/api-references/api/operation/PUT_ResumeSubscription "Resume Subscription"); [Create Account](https://developer.zuora.com/api-references/api/operation/POST_Account "Create Account")|Generates an invoice for a subscription. |
# | invoiceTargetDate | 206.0 and earlier  | [Preview Subscription](https://developer.zuora.com/api-references/api/operation/POST_PreviewSubscription "Preview Subscription") |Date through which charges are calculated on the invoice, as `yyyy-mm-dd`. |
# | invoiceTargetDate | 207.0 and earlier  | [Create Subscription](https://developer.zuora.com/api-references/api/operation/POST_Subscription "Create Subscription"); [Update Subscription](https://developer.zuora.com/api-references/api/operation/PUT_Subscription "Update Subscription"); [Renew Subscription](https://developer.zuora.com/api-references/api/operation/PUT_RenewSubscription "Renew Subscription"); [Cancel Subscription](https://developer.zuora.com/api-references/api/operation/PUT_CancelSubscription "Cancel Subscription"); [Suspend Subscription](https://developer.zuora.com/api-references/api/operation/PUT_SuspendSubscription "Suspend Subscription"); [Resume Subscription](https://developer.zuora.com/api-references/api/operation/PUT_ResumeSubscription "Resume Subscription"); [Create Account](https://developer.zuora.com/api-references/api/operation/POST_Account "Create Account")|Date through which charges are calculated on the invoice, as `yyyy-mm-dd`. |
# | targetDate | 207.0 and later | [Preview Subscription](https://developer.zuora.com/api-references/api/operation/POST_PreviewSubscription "Preview Subscription") |Date through which charges are calculated on the invoice, as `yyyy-mm-dd`. |
# | targetDate | 211.0 and later | [Create Subscription](https://developer.zuora.com/api-references/api/operation/POST_Subscription "Create Subscription"); [Update Subscription](https://developer.zuora.com/api-references/api/operation/PUT_Subscription "Update Subscription"); [Renew Subscription](https://developer.zuora.com/api-references/api/operation/PUT_RenewSubscription "Renew Subscription"); [Cancel Subscription](https://developer.zuora.com/api-references/api/operation/PUT_CancelSubscription "Cancel Subscription"); [Suspend Subscription](https://developer.zuora.com/api-references/api/operation/PUT_SuspendSubscription "Suspend Subscription"); [Resume Subscription](https://developer.zuora.com/api-references/api/operation/PUT_ResumeSubscription "Resume Subscription"); [Create Account](https://developer.zuora.com/api-references/api/operation/POST_Account "Create Account")|Date through which charges are calculated on the invoice, as `yyyy-mm-dd`. |
# | includeExisting DraftInvoiceItems | 206.0 and earlier| [Preview Subscription](https://developer.zuora.com/api-references/api/operation/POST_PreviewSubscription "Preview Subscription"); [Update Subscription](https://developer.zuora.com/api-references/api/operation/PUT_Subscription "Update Subscription") | Specifies whether to include draft invoice items in subscription previews. Specify it to be `true` (default) to include draft invoice items in the preview result. Specify it to be `false` to excludes draft invoice items in the preview result. |
# | includeExisting DraftDocItems | 207.0 and later  | [Preview Subscription](https://developer.zuora.com/api-references/api/operation/POST_PreviewSubscription "Preview Subscription"); [Update Subscription](https://developer.zuora.com/api-references/api/operation/PUT_Subscription "Update Subscription") | Specifies whether to include draft invoice items in subscription previews. Specify it to be `true` (default) to include draft invoice items in the preview result. Specify it to be `false` to excludes draft invoice items in the preview result. |
# | previewType | 206.0 and earlier| [Preview Subscription](https://developer.zuora.com/api-references/api/operation/POST_PreviewSubscription "Preview Subscription"); [Update Subscription](https://developer.zuora.com/api-references/api/operation/PUT_Subscription "Update Subscription") | The type of preview you will receive. The possible values are `InvoiceItem`(default), `ChargeMetrics`, and `InvoiceItemChargeMetrics`. |
# | previewType | 207.0 and later  | [Preview Subscription](https://developer.zuora.com/api-references/api/operation/POST_PreviewSubscription "Preview Subscription"); [Update Subscription](https://developer.zuora.com/api-references/api/operation/PUT_Subscription "Update Subscription") | The type of preview you will receive. The possible values are `LegalDoc`(default), `ChargeMetrics`, and `LegalDocChargeMetrics`. |
# | runBilling  | 211.0 and later  | [Create Subscription](https://developer.zuora.com/api-references/api/operation/POST_Subscription "Create Subscription"); [Update Subscription](https://developer.zuora.com/api-references/api/operation/PUT_Subscription "Update Subscription"); [Renew Subscription](https://developer.zuora.com/api-references/api/operation/PUT_RenewSubscription "Renew Subscription"); [Cancel Subscription](https://developer.zuora.com/api-references/api/operation/PUT_CancelSubscription "Cancel Subscription"); [Suspend Subscription](https://developer.zuora.com/api-references/api/operation/PUT_SuspendSubscription "Suspend Subscription"); [Resume Subscription](https://developer.zuora.com/api-references/api/operation/PUT_ResumeSubscription "Resume Subscription"); [Create Account](https://developer.zuora.com/api-references/api/operation/POST_Account "Create Account")|Generates an invoice or credit memo for a subscription. **Note:** Credit memos are only available if you have the Invoice Settlement feature enabled. |
# | invoiceDate | 214.0 and earlier  | [Invoice and Collect](https://developer.zuora.com/api-references/api/operation/POST_TransactionInvoicePayment "Invoice and Collect") |Date that should appear on the invoice being generated, as `yyyy-mm-dd`. |
# | invoiceTargetDate | 214.0 and earlier  | [Invoice and Collect](https://developer.zuora.com/api-references/api/operation/POST_TransactionInvoicePayment "Invoice and Collect") |Date through which to calculate charges on this account if an invoice is generated, as `yyyy-mm-dd`. |
# | documentDate | 215.0 and later | [Invoice and Collect](https://developer.zuora.com/api-references/api/operation/POST_TransactionInvoicePayment "Invoice and Collect") |Date that should appear on the invoice and credit memo being generated, as `yyyy-mm-dd`. |
# | targetDate | 215.0 and later | [Invoice and Collect](https://developer.zuora.com/api-references/api/operation/POST_TransactionInvoicePayment "Invoice and Collect") |Date through which to calculate charges on this account if an invoice or a credit memo is generated, as `yyyy-mm-dd`. |
# | memoItemAmount | 223.0 and earlier | [Create credit memo from charge](https://developer.zuora.com/api-references/api/operation/POST_CreditMemoFromPrpc "Create credit memo from charge"); [Create debit memo from charge](https://developer.zuora.com/api-references/api/operation/POST_DebitMemoFromPrpc "Create debit memo from charge") | Amount of the memo item. |
# | amount | 224.0 and later | [Create credit memo from charge](https://developer.zuora.com/api-references/api/operation/POST_CreditMemoFromPrpc "Create credit memo from charge"); [Create debit memo from charge](https://developer.zuora.com/api-references/api/operation/POST_DebitMemoFromPrpc "Create debit memo from charge") | Amount of the memo item. |
# | subscriptionNumbers | 222.4 and earlier | [Create order](https://developer.zuora.com/api-references/api/operation/POST_Order "Create order") | Container for the subscription numbers of the subscriptions in an order. |
# | subscriptions | 223.0 and later | [Create order](https://developer.zuora.com/api-references/api/operation/POST_Order "Create order") | Container for the subscription numbers and statuses in an order. |
# | creditTaxItems | 238.0 and earlier | [Get credit memo items](https://developer.zuora.com/api-references/api/operation/GET_CreditMemoItems "Get credit memo items"); [Get credit memo item](https://developer.zuora.com/api-references/api/operation/GET_CreditMemoItem "Get credit memo item") | Container for the taxation items of the credit memo item. |
# | taxItems | 238.0 and earlier | [Get debit memo items](https://developer.zuora.com/api-references/api/operation/GET_DebitMemoItems "Get debit memo items"); [Get debit memo item](https://developer.zuora.com/api-references/api/operation/GET_DebitMemoItem "Get debit memo item") | Container for the taxation items of the debit memo item. |
# | taxationItems | 239.0 and later | [Get credit memo items](https://developer.zuora.com/api-references/api/operation/GET_CreditMemoItems "Get credit memo items"); [Get credit memo item](https://developer.zuora.com/api-references/api/operation/GET_CreditMemoItem "Get credit memo item"); [Get debit memo items](https://developer.zuora.com/api-references/api/operation/GET_DebitMemoItems "Get debit memo items"); [Get debit memo item](https://developer.zuora.com/api-references/api/operation/GET_DebitMemoItem "Get debit memo item") | Container for the taxation items of the memo item. |
# | chargeId | 256.0 and earlier | [Create credit memo from charge](https://developer.zuora.com/api-references/api/operation/POST_CreditMemoFromPrpc "Create credit memo from charge"); [Create debit memo from charge](https://developer.zuora.com/api-references/api/operation/POST_DebitMemoFromPrpc "Create debit memo from charge") | ID of the product rate plan charge that the memo is created from. |
# | productRatePlanChargeId | 257.0 and later | [Create credit memo from charge](https://developer.zuora.com/api-references/api/operation/POST_CreditMemoFromPrpc "Create credit memo from charge"); [Create debit memo from charge](https://developer.zuora.com/api-references/api/operation/POST_DebitMemoFromPrpc "Create debit memo from charge") | ID of the product rate plan charge that the memo is created from. |
# | comment | 256.0 and earlier | [Create credit memo from charge](https://developer.zuora.com/api-references/api/operation/POST_CreditMemoFromPrpc "Create credit memo from charge"); [Create debit memo from charge](https://developer.zuora.com/api-references/api/operation/POST_DebitMemoFromPrpc "Create debit memo from charge"); [Create credit memo from invoice](https://developer.zuora.com/api-references/api/operation/POST_CreditMemoFromInvoice "Create credit memo from invoice"); [Create debit memo from invoice](https://developer.zuora.com/api-references/api/operation/POST_DebitMemoFromInvoice "Create debit memo from invoice"); [Get credit memo items](https://developer.zuora.com/api-references/api/operation/GET_CreditMemoItems "Get credit memo items"); [Get credit memo item](https://developer.zuora.com/api-references/api/operation/GET_CreditMemoItem "Get credit memo item"); [Get debit memo items](https://developer.zuora.com/api-references/api/operation/GET_DebitMemoItems "Get debit memo items"); [Get debit memo item](https://developer.zuora.com/api-references/api/operation/GET_DebitMemoItem "Get debit memo item") | Comments about the product rate plan charge, invoice item, or memo item. |
# | description | 257.0 and later | [Create credit memo from charge](https://developer.zuora.com/api-references/api/operation/POST_CreditMemoFromPrpc "Create credit memo from charge"); [Create debit memo from charge](https://developer.zuora.com/api-references/api/operation/POST_DebitMemoFromPrpc "Create debit memo from charge"); [Create credit memo from invoice](https://developer.zuora.com/api-references/api/operation/POST_CreditMemoFromInvoice "Create credit memo from invoice"); [Create debit memo from invoice](https://developer.zuora.com/api-references/api/operation/POST_DebitMemoFromInvoice "Create debit memo from invoice"); [Get credit memo items](https://developer.zuora.com/api-references/api/operation/GET_CreditMemoItems "Get credit memo items"); [Get credit memo item](https://developer.zuora.com/api-references/api/operation/GET_CreditMemoItem "Get credit memo item"); [Get debit memo items](https://developer.zuora.com/api-references/api/operation/GET_DebitMemoItems "Get debit memo items"); [Get debit memo item](https://developer.zuora.com/api-references/api/operation/GET_DebitMemoItem "Get debit memo item") | Description of the the product rate plan charge, invoice item, or memo item. |
# | taxationItems | 309.0 and later | [Preview an order](https://developer.zuora.com/api-references/api/operation/POST_PreviewOrder "Preview an order") | List of taxation items for an invoice item or a credit memo item. |
# | batch | 309.0 and earlier | [Create a billing preview run](https://developer.zuora.com/api-references/api/operation/POST_BillingPreviewRun "Create a billing preview run") | The customer batches to include in the billing preview run. |      
# | batches | 314.0 and later | [Create a billing preview run](https://developer.zuora.com/api-references/api/operation/POST_BillingPreviewRun "Create a billing preview run") | The customer batches to include in the billing preview run. |
# | taxationItems | 315.0 and later | [Preview a subscription](https://developer.zuora.com/api-references/api/operation/POST_PreviewSubscription "Preview a subscription"); [Update a subscription](https://developer.zuora.com/api-references/api/operation/PUT_Subscription "Update a subscription")| List of taxation items for an invoice item or a credit memo item. |
# | billingDocument | 330.0 and later | [Create a payment schedule](https://developer.zuora.com/api-references/api/operation/POST_PaymentSchedule "Create a payment schedule"); [Create multiple payment schedules at once](https://developer.zuora.com/api-references/api/operation/POST_PaymentSchedules "Create multiple payment schedules at once")| The billing document with which the payment schedule item is associated. |
# | paymentId | 336.0 and earlier | [Add payment schedule items to a custom payment schedule](https://developer.zuora.com/api-references/api/operation/POST_AddItemsToCustomPaymentSchedule/ "Add payment schedule items to a custom payment schedule"); [Update a payment schedule](https://developer.zuora.com/api-references/api/operation/PUT_PaymentSchedule/ "Update a payment schedule"); [Update a payment schedule item](https://developer.zuora.com/api-references/api/operation/PUT_PaymentScheduleItem/ "Update a payment schedule item"); [Preview the result of payment schedule update](https://developer.zuora.com/api-references/api/operation/PUT_PaymentScheduleUpdatePreview/ "Preview the result of payment schedule update"); [Retrieve a payment schedule](https://developer.zuora.com/api-references/api/operation/GET_PaymentSchedule/ "Retrieve a payment schedule"); [Retrieve a payment schedule item](https://developer.zuora.com/api-references/api/operation/GET_PaymentScheduleItem/ "Retrieve a payment schedule item"); [List payment schedules by customer account](https://developer.zuora.com/api-references/api/operation/GET_PaymentSchedules/ "List payment schedules by customer account"); [Cancel a payment schedule](https://developer.zuora.com/api-references/api/operation/PUT_CancelPaymentSchedule/ "Cancel a payment schedule"); [Cancel a payment schedule item](https://developer.zuora.com/api-references/api/operation/PUT_CancelPaymentScheduleItem/ "Cancel a payment schedule item");[Skip a payment schedule item](https://developer.zuora.com/api-references/api/operation/PUT_SkipPaymentScheduleItem/ "Skip a payment schedule item");[Retry failed payment schedule items](https://developer.zuora.com/api-references/api/operation/POST_RetryPaymentScheduleItem/ "Retry failed payment schedule items") | ID of the payment to be linked to the payment schedule item.
# 
# 
# #### Version 207.0 and Later
# 
# The response structure of the [Preview Subscription](https://developer.zuora.com/api-references/api/operation/POST_PreviewSubscription) and [Update Subscription](https://developer.zuora.com/api-references/api/operation/PUT_Subscription "Update Subscription") methods are changed. The following invoice related response fields are moved to the invoice container:
# 
#   * amount
#   * amountWithoutTax
#   * taxAmount
#   * invoiceItems
#   * targetDate
#   * chargeMetrics
# 
# 
# # API Names for Zuora Objects
# 
# For information about the Zuora business object model, see [Zuora Business Object Model](https://developer.zuora.com/rest-api/general-concepts/object-model/).
# 
# You can use the [Describe](https://developer.zuora.com/api-references/api/operation/GET_Describe) operation to list the fields of each Zuora object that is available in your tenant. When you call the operation, you must specify the API name of the Zuora object.
# 
# The following table provides the API name of each Zuora object:
# 
# | Object                                        | API Name                                   |
# |-----------------------------------------------|--------------------------------------------|
# | Account                                       | `Account`                                  |
# | Accounting Code                               | `AccountingCode`                           |
# | Accounting Period                             | `AccountingPeriod`                         |
# | Amendment                                     | `Amendment`                                |
# | Application Group                             | `ApplicationGroup`                         |
# | Billing Run                                   | <p>`BillingRun` - API name used  in the [Describe](https://developer.zuora.com/api-references/api/operation/GET_Describe) operation, Export ZOQL queries, and Data Query.</p> <p>`BillRun` - API name used in the [Actions](https://developer.zuora.com/api-references/api/tag/Actions). See the CRUD oprations of [Bill Run](https://developer.zuora.com/api-references/api/tag/Bill-Run) for more information about the `BillRun` object. `BillingRun` and `BillRun` have different fields. |                     
# | Billing Preview Run                           | `BillingPreviewRun`                        |                     
# | Configuration Templates                       | `ConfigurationTemplates`                   |
# | Contact                                       | `Contact`                                  |
# | Contact Snapshot                              | `ContactSnapshot`                          |
# | Credit Balance Adjustment                     | `CreditBalanceAdjustment`                  |
# | Credit Memo                                   | `CreditMemo`                               |
# | Credit Memo Application                       | `CreditMemoApplication`                    |
# | Credit Memo Application Item                  | `CreditMemoApplicationItem`                |
# | Credit Memo Item                              | `CreditMemoItem`                           |
# | Credit Memo Part                              | `CreditMemoPart`                           |
# | Credit Memo Part Item                         | `CreditMemoPartItem`                       |
# | Credit Taxation Item                          | `CreditTaxationItem`                       |
# | Custom Exchange Rate                          | `FXCustomRate`                             |
# | Debit Memo                                    | `DebitMemo`                                |
# | Debit Memo Item                               | `DebitMemoItem`                            |
# | Debit Taxation Item                           | `DebitTaxationItem`                        |
# | Discount Applied Metrics                      | `DiscountAppliedMetrics`                   |
# | Entity                                        | `Tenant`                                   |
# | Fulfillment                                   | `Fulfillment`                              |
# | Feature                                       | `Feature`                                  |
# | Gateway Reconciliation Event                  | `PaymentGatewayReconciliationEventLog`     |
# | Gateway Reconciliation Job                    | `PaymentReconciliationJob`                 |
# | Gateway Reconciliation Log                    | `PaymentReconciliationLog`                 |
# | Invoice                                       | `Invoice`                                  |
# | Invoice Adjustment                            | `InvoiceAdjustment`                        |
# | Invoice Item                                  | `InvoiceItem`                              |
# | Invoice Item Adjustment                       | `InvoiceItemAdjustment`                    |
# | Invoice Payment                               | `InvoicePayment`                           |
# | Invoice Schedule                              | `InvoiceSchedule`                          |
# | Invoice Schedule Item                         | `InvoiceScheduleItem`                      |
# | Journal Entry                                 | `JournalEntry`                             |
# | Journal Entry Item                            | `JournalEntryItem`                         |
# | Journal Run                                   | `JournalRun`                               |
# | Notification History - Callout                | `CalloutHistory`                           |
# | Notification History - Email                  | `EmailHistory`                             |
# | Order                                         | `Order`                                    |
# | Order Action                                  | `OrderAction`                              |
# | Order ELP                                     | `OrderElp`                                 |
# | Order Line Items                              | `OrderLineItems`                           |    
# | Order Item                                    | `OrderItem`                                |
# | Order MRR                                     | `OrderMrr`                                 |
# | Order Quantity                                | `OrderQuantity`                            |
# | Order TCB                                     | `OrderTcb`                                 |
# | Order TCV                                     | `OrderTcv`                                 |
# | Payment                                       | `Payment`                                  |
# | Payment Application                           | `PaymentApplication`                       |
# | Payment Application Item                      | `PaymentApplicationItem`                   |
# | Payment Method                                | `PaymentMethod`                            |
# | Payment Method Snapshot                       | `PaymentMethodSnapshot`                    |
# | Payment Method Transaction Log                | `PaymentMethodTransactionLog`              |
# | Payment Method Update                        | `UpdaterDetail`                             |
# | Payment Part                                  | `PaymentPart`                              |
# | Payment Part Item                             | `PaymentPartItem`                          |
# | Payment Run                                   | `PaymentRun`                               |
# | Payment Transaction Log                       | `PaymentTransactionLog`                    |
# | Processed Usage                               | `ProcessedUsage`                           |
# | Product                                       | `Product`                                  |
# | Product Charge Definition                     | `ProductChargeDefinition`                  |    
# | Product Feature                               | `ProductFeature`                           |
# | Product Rate Plan                             | `ProductRatePlan`                          |
# | Product Rate Plan Definition                  | `ProductRatePlanDefinition`                |    
# | Product Rate Plan Charge                      | `ProductRatePlanCharge`                    |
# | Product Rate Plan Charge Tier                 | `ProductRatePlanChargeTier`                |
# | Rate Plan                                     | `RatePlan`                                 |
# | Rate Plan Charge                              | `RatePlanCharge`                           |
# | Rate Plan Charge Tier                         | `RatePlanChargeTier`                       |
# | Refund                                        | `Refund`                                   |
# | Refund Application                            | `RefundApplication`                        |
# | Refund Application Item                       | `RefundApplicationItem`                    |
# | Refund Invoice Payment                        | `RefundInvoicePayment`                     |
# | Refund Part                                   | `RefundPart`                               |
# | Refund Part Item                              | `RefundPartItem`                           |
# | Refund Transaction Log                        | `RefundTransactionLog`                     |
# | Revenue Charge Summary                        | `RevenueChargeSummary`                     |
# | Revenue Charge Summary Item                   | `RevenueChargeSummaryItem`                 |
# | Revenue Event                                 | `RevenueEvent`                             |
# | Revenue Event Credit Memo Item                | `RevenueEventCreditMemoItem`               |
# | Revenue Event Debit Memo Item                 | `RevenueEventDebitMemoItem`                |
# | Revenue Event Invoice Item                    | `RevenueEventInvoiceItem`                  |
# | Revenue Event Invoice Item Adjustment         | `RevenueEventInvoiceItemAdjustment`        |
# | Revenue Event Item                            | `RevenueEventItem`                         |
# | Revenue Event Item Credit Memo Item           | `RevenueEventItemCreditMemoItem`           |
# | Revenue Event Item Debit Memo Item            | `RevenueEventItemDebitMemoItem`            |
# | Revenue Event Item Invoice Item               | `RevenueEventItemInvoiceItem`              |
# | Revenue Event Item Invoice Item Adjustment    | `RevenueEventItemInvoiceItemAdjustment`    |
# | Revenue Event Type                            | `RevenueEventType`                         |
# | Revenue Schedule                              | `RevenueSchedule`                          |
# | Revenue Schedule Credit Memo Item             | `RevenueScheduleCreditMemoItem`            |
# | Revenue Schedule Debit Memo Item              | `RevenueScheduleDebitMemoItem`             |
# | Revenue Schedule Invoice Item                 | `RevenueScheduleInvoiceItem`               |
# | Revenue Schedule Invoice Item Adjustment      | `RevenueScheduleInvoiceItemAdjustment`     |
# | Revenue Schedule Item                         | `RevenueScheduleItem`                      |
# | Revenue Schedule Item Credit Memo Item        | `RevenueScheduleItemCreditMemoItem`        |
# | Revenue Schedule Item Debit Memo Item         | `RevenueScheduleItemDebitMemoItem`         |
# | Revenue Schedule Item Invoice Item            | `RevenueScheduleItemInvoiceItem`           |
# | Revenue Schedule Item Invoice Item Adjustment | `RevenueScheduleItemInvoiceItemAdjustment` |
# | Subscription                                  | `Subscription`                             |
# | Subscription Product Feature                  | `SubscriptionProductFeature`               |
# | Taxable Item Snapshot                         | `TaxableItemSnapshot`                      |
# | Taxation Item                                 | `TaxationItem`                             |
# | Updater Batch                                 | `UpdaterBatch`                             |
# | Usage                                         | `Usage`                                    |
public isolated client class Client {
    final http:Client clientEp;
    # Gets invoked to initialize the `connector`.
    #
    # + config - The configurations to be used when initializing the `connector` 
    # + serviceUrl - URL of the target service 
    # + return - An error if connector initialization failed 
    public isolated function init(ConnectionConfig config =  {}, string serviceUrl = "https://rest.test.zuora.com") returns error? {
        http:ClientConfiguration httpClientConfig = {httpVersion: config.httpVersion, timeout: config.timeout, forwarded: config.forwarded, poolConfig: config.poolConfig, compression: config.compression, circuitBreaker: config.circuitBreaker, retryConfig: config.retryConfig, validation: config.validation};
        do {
            if config.http1Settings is ClientHttp1Settings {
                ClientHttp1Settings settings = check config.http1Settings.ensureType(ClientHttp1Settings);
                httpClientConfig.http1Settings = {...settings};
            }
            if config.http2Settings is http:ClientHttp2Settings {
                httpClientConfig.http2Settings = check config.http2Settings.ensureType(http:ClientHttp2Settings);
            }
            if config.cache is http:CacheConfig {
                httpClientConfig.cache = check config.cache.ensureType(http:CacheConfig);
            }
            if config.responseLimits is http:ResponseLimitConfigs {
                httpClientConfig.responseLimits = check config.responseLimits.ensureType(http:ResponseLimitConfigs);
            }
            if config.secureSocket is http:ClientSecureSocket {
                httpClientConfig.secureSocket = check config.secureSocket.ensureType(http:ClientSecureSocket);
            }
            if config.proxy is http:ProxyConfig {
                httpClientConfig.proxy = check config.proxy.ensureType(http:ProxyConfig);
            }
        }
        http:Client httpEp = check new (serviceUrl, httpClientConfig);
        self.clientEp = httpEp;
        return;
    }
    # Create an OAuth token
    #
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + return - OK 
    resource isolated function post oauth/token(Oauth_token_body payload, string? zuoraTrackId = ()) returns TokenResponse|error {
        string resourcePath = string `/oauth/token`;
        map<any> headerValues = {"Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        string encodedRequestBody = createFormURLEncodedRequestBody(payload);
        request.setPayload(encodedRequestBody, "application/x-www-form-urlencoded");
        TokenResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # CRUD: Create a product
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + rejectUnknownFields - Specifies whether the call fails if the request body contains unknown fields.
    # With `rejectUnknownFields` set to `true`, Zuora returns a 400 response if
    # the request body contains unknown fields. The body of the 400 response is:
    # ```json
    # {
    #     "message": "Error - unrecognised fields"
    # }
    # ```
    # By default, Zuora ignores unknown fields in the request body.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + xZuoraWsdlVersion - Zuora WSDL version number.
    resource isolated function post v1/'object/product(ProxyCreateProduct payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), boolean rejectUnknownFields = false, string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string xZuoraWsdlVersion = "79") returns ProxyCreateOrModifyResponse|error {
        string resourcePath = string `/v1/object/product`;
        map<anydata> queryParam = {"rejectUnknownFields": rejectUnknownFields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId, "X-Zuora-WSDL-Version": xZuoraWsdlVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        ProxyCreateOrModifyResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # CRUD: Retrieve a product
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + xZuoraWsdlVersion - Zuora WSDL version number.
    # + fields - Object fields to return
    # + id - Object id
    resource isolated function get v1/'object/product/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string xZuoraWsdlVersion = "79", string? fields = ()) returns ProxyGetProduct|error {
        string resourcePath = string `/v1/object/product/${getEncodedUri(id)}`;
        map<anydata> queryParam = {"fields": fields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId, "X-Zuora-WSDL-Version": xZuoraWsdlVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ProxyGetProduct response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # CRUD: Update a product
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + rejectUnknownFields - Specifies whether the call fails if the request body contains unknown fields.
    # With `rejectUnknownFields` set to `true`, Zuora returns a 400 response if
    # the request body contains unknown fields. The body of the 400 response is:
    # ```json
    # {
    #     "message": "Error - unrecognised fields"
    # }
    # ```
    # By default, Zuora ignores unknown fields in the request body.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + xZuoraWsdlVersion - Zuora WSDL version number.
    # + id - Object id
    resource isolated function put v1/'object/product/[string id](ProxyModifyProduct payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), boolean rejectUnknownFields = false, string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string xZuoraWsdlVersion = "79") returns ProxyCreateOrModifyResponse|error {
        string resourcePath = string `/v1/object/product/${getEncodedUri(id)}`;
        map<anydata> queryParam = {"rejectUnknownFields": rejectUnknownFields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId, "X-Zuora-WSDL-Version": xZuoraWsdlVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        ProxyCreateOrModifyResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # CRUD: Delete a product
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + id - Object id
    resource isolated function delete v1/'object/product/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns ProxyDeleteResponse|error {
        string resourcePath = string `/v1/object/product/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ProxyDeleteResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # List all products
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + zuoraVersion - The minor version of the Zuora REST API. 
    # You only need to set this parameter if you use the `productRatePlans` field.
    resource isolated function get v1/catalog/products(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 10, string? zuoraVersion = ()) returns GETCatalogType|error {
        string resourcePath = string `/v1/catalog/products`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETCatalogType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a product
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion - The minor version of the Zuora REST API. 
    # You only need to set this parameter if you use the `productRatePlans` field.
    # + productKey - The unique ID, SKU, or product number of the product that you want to retrieve. For example, 8a808255575bdae4015774e9602e16fe, SKU-00000987, or PC-00000006.
    resource isolated function get v1/catalog/products/[string productKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns GETProductType|error {
        string resourcePath = string `/v1/catalog/products/${getEncodedUri(productKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETProductType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List all catalog groups
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + pageSize - The number of records returned per page in the response.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    resource isolated function get v1/catalog\-groups(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int pageSize = 20, int page = 1) returns ListAllCatalogGroupsResponse|error {
        string resourcePath = string `/v1/catalog-groups`;
        map<anydata> queryParam = {"pageSize": pageSize, "page": page};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ListAllCatalogGroupsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a catalog group
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/catalog\-groups(POSTCatalogGroupRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CatalogGroupResponse|error {
        string resourcePath = string `/v1/catalog-groups`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CatalogGroupResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a catalog group
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + catalogGroupKey - The unique number or ID of the catalog group to be retrieved.
    resource isolated function get v1/catalog\-groups/[string catalogGroupKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CatalogGroupResponse|error {
        string resourcePath = string `/v1/catalog-groups/${getEncodedUri(catalogGroupKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CatalogGroupResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update a catalog group
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + catalogGroupKey - The unique number or ID of the catalog group to be updated. 
    resource isolated function put v1/catalog\-groups/[string catalogGroupKey](PUTCatalogGroup payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CatalogGroupResponse|error {
        string resourcePath = string `/v1/catalog-groups/${getEncodedUri(catalogGroupKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CatalogGroupResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete a catalog group
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + catalogGroupKey - The unique number or ID of the catalog group to be deleted.
    resource isolated function delete v1/catalog\-groups/[string catalogGroupKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/catalog-groups/${getEncodedUri(catalogGroupKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # List all product rate plans of a product
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + productKey - The unique ID or SKU of a product. For example, 2c92c0f96487e16a016487f663c71a61 or SKU-00000987.
    # + showChargeDefinitions - Specifies whether to include the product charge definitions of this rate plan in the response.
    # **Note**: This parameter is applicable only if the Attribute Based Pricing feature is enabled. To access this feature, submit a request at <a href="https://support.zuora.com" target="_blank">Zuora Global Support</a>.
    resource isolated function get v1/products/[string productKey]/product\-rate\-plans(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20, boolean? showChargeDefinitions = ()) returns GETProductRatePlansResponse|error {
        string resourcePath = string `/v1/products/${getEncodedUri(productKey)}/product-rate-plans`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize, "show-charge-definitions": showChargeDefinitions};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETProductRatePlansResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a product rate plan by ID
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + id - The ID, external ID, or the natural key of the product rate plan to be retrieved. For example, `402888e67f8b3a68017f8bbb2a06062d`, `Apple0001`, or `PRP-00000008`.
    resource isolated function get v1/product\-rate\-plans/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETProductRatePlanWithExternalIdResponse|error {
        string resourcePath = string `/v1/product-rate-plans/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETProductRatePlanWithExternalIdResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List product rate plans by external ID
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + id - The external ID of the product rate plan to be retrieved. For example, `Apple0001`.
    resource isolated function get v1/product\-rate\-plans/external\-id/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETProductRatePlanWithExternalIdMultiResponse|error {
        string resourcePath = string `/v1/product-rate-plans/external-id/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETProductRatePlanWithExternalIdMultiResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # CRUD: Create a product rate plan
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + rejectUnknownFields - Specifies whether the call fails if the request body contains unknown fields.
    # With `rejectUnknownFields` set to `true`, Zuora returns a 400 response if
    # the request body contains unknown fields. The body of the 400 response is:
    # ```json
    # {
    #     "message": "Error - unrecognised fields"
    # }
    # ```
    # By default, Zuora ignores unknown fields in the request body.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + xZuoraWsdlVersion - Zuora WSDL version number.
    resource isolated function post v1/'object/product\-rate\-plan(ProxyCreateProductRatePlan payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), boolean rejectUnknownFields = false, string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string xZuoraWsdlVersion = "79") returns ProxyCreateOrModifyResponse|error {
        string resourcePath = string `/v1/object/product-rate-plan`;
        map<anydata> queryParam = {"rejectUnknownFields": rejectUnknownFields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId, "X-Zuora-WSDL-Version": xZuoraWsdlVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        ProxyCreateOrModifyResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # CRUD: Retrieve a product rate plan
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + xZuoraWsdlVersion - Zuora WSDL version number.
    # + fields - Object fields to return
    # + id - Object id
    resource isolated function get v1/'object/product\-rate\-plan/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string xZuoraWsdlVersion = "79", string? fields = ()) returns ProxyGetProductRatePlan|error {
        string resourcePath = string `/v1/object/product-rate-plan/${getEncodedUri(id)}`;
        map<anydata> queryParam = {"fields": fields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId, "X-Zuora-WSDL-Version": xZuoraWsdlVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ProxyGetProductRatePlan response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # CRUD: Update a product rate plan
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + rejectUnknownFields - Specifies whether the call fails if the request body contains unknown fields.
    # With `rejectUnknownFields` set to `true`, Zuora returns a 400 response if
    # the request body contains unknown fields. The body of the 400 response is:
    # ```json
    # {
    #     "message": "Error - unrecognised fields"
    # }
    # ```
    # By default, Zuora ignores unknown fields in the request body.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + xZuoraWsdlVersion - Zuora WSDL version number.
    # + id - Object id
    resource isolated function put v1/'object/product\-rate\-plan/[string id](ProxyModifyProductRatePlan payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), boolean rejectUnknownFields = false, string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string xZuoraWsdlVersion = "79") returns ProxyCreateOrModifyResponse|error {
        string resourcePath = string `/v1/object/product-rate-plan/${getEncodedUri(id)}`;
        map<anydata> queryParam = {"rejectUnknownFields": rejectUnknownFields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId, "X-Zuora-WSDL-Version": xZuoraWsdlVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        ProxyCreateOrModifyResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # CRUD: Delete a product rate plan
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + id - Object id
    resource isolated function delete v1/'object/product\-rate\-plan/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns ProxyDeleteResponse|error {
        string resourcePath = string `/v1/object/product-rate-plan/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ProxyDeleteResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # List product rate plan definitions
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + charge - The unique number or ID of the charge for which the product rate plan definitions are to be retrieved.
    # + rateplan - The unique number or ID of the product rate plan for which the product rate plan definitions are to be retrieved.
    resource isolated function get v1/product\-rateplan\-definitions(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? charge = (), string? rateplan = ()) returns GETProductRatePlanDefinitionsResponse|error {
        string resourcePath = string `/v1/product-rateplan-definitions`;
        map<anydata> queryParam = {"charge": charge, "rateplan": rateplan};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETProductRatePlanDefinitionsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a product rate plan definition
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    resource isolated function post v1/product\-rateplan\-definitions(POSTRatePlanDefinitionRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = ()) returns POSTRatePlanDefinitionResponse|error {
        string resourcePath = string `/v1/product-rateplan-definitions`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTRatePlanDefinitionResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a product rate plan definition
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + productRateplanDefinitionKey - The unique ID of the product rate plan definition to be retrieved.
    resource isolated function get v1/product\-rateplan\-definitions/[string productRateplanDefinitionKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = ()) returns GETProductRatePlanDefinitionResponse|error {
        string resourcePath = string `/v1/product-rateplan-definitions/${getEncodedUri(productRateplanDefinitionKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETProductRatePlanDefinitionResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Delete a product rate plan definition
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + productRateplanDefinitionKey - The unique ID of the product rate plan definition to be deleted.
    resource isolated function delete v1/product\-rateplan\-definitions/[string productRateplanDefinitionKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/product-rateplan-definitions/${getEncodedUri(productRateplanDefinitionKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Retrieve a product rate plan charge
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + productRatePlanChargeKey - The unique number or ID of the product rate plan charge to be retrieved.
    # + showChargeDefinitions - Specifies whether to include the product charge definitions of this charge in the response.
    # **Note**: This parameter is applicable only if the Attribute-based Pricing feature is enabled. The Attribute-based Pricing feature in the **Early Adopter** phase. 
    # We are actively soliciting feedback from a small set of early adopters. If you are interested, please reach out to your CSM.
    resource isolated function get v1/product\-rate\-plan\-charges/[string productRatePlanChargeKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), boolean? showChargeDefinitions = ()) returns GETProductRatePlanChargeResponse|error {
        string resourcePath = string `/v1/product-rate-plan-charges/${getEncodedUri(productRatePlanChargeKey)}`;
        map<anydata> queryParam = {"show-charge-definitions": showChargeDefinitions};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETProductRatePlanChargeResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # CRUD: Create a product rate plan charge
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + rejectUnknownFields - Specifies whether the call fails if the request body contains unknown fields.
    # With `rejectUnknownFields` set to `true`, Zuora returns a 400 response if
    # the request body contains unknown fields. The body of the 400 response is:
    # ```json
    # {
    #     "message": "Error - unrecognised fields"
    # }
    # ```
    # By default, Zuora ignores unknown fields in the request body.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + xZuoraWsdlVersion - Zuora WSDL version number.
    resource isolated function post v1/'object/product\-rate\-plan\-charge(ProxyCreateProductRatePlanCharge payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), boolean rejectUnknownFields = false, string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string xZuoraWsdlVersion = "79") returns ProxyCreateOrModifyResponse|error {
        string resourcePath = string `/v1/object/product-rate-plan-charge`;
        map<anydata> queryParam = {"rejectUnknownFields": rejectUnknownFields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId, "X-Zuora-WSDL-Version": xZuoraWsdlVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        ProxyCreateOrModifyResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # CRUD: Retrieve a product rate plan charge
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + xZuoraWsdlVersion - Zuora WSDL version number.
    # + fields - Object fields to return
    # + id - The unique ID of a product rate plan charge to be retrieved. For example, 2c93808457d787030157e031fcd34e19.
    resource isolated function get v1/'object/product\-rate\-plan\-charge/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string xZuoraWsdlVersion = "79", string? fields = ()) returns ProxyGetProductRatePlanCharge|error {
        string resourcePath = string `/v1/object/product-rate-plan-charge/${getEncodedUri(id)}`;
        map<anydata> queryParam = {"fields": fields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId, "X-Zuora-WSDL-Version": xZuoraWsdlVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ProxyGetProductRatePlanCharge response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # CRUD: Update a product rate plan charge
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + rejectUnknownFields - Specifies whether the call fails if the request body contains unknown fields.
    # With `rejectUnknownFields` set to `true`, Zuora returns a 400 response if
    # the request body contains unknown fields. The body of the 400 response is:
    # ```json
    # {
    #     "message": "Error - unrecognised fields"
    # }
    # ```
    # By default, Zuora ignores unknown fields in the request body.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + xZuoraWsdlVersion - Zuora WSDL version number.
    # + id - The unique ID of the product rate plan charge to be updated. For example, 2c93808457d787030157e031fcd34e19.
    resource isolated function put v1/'object/product\-rate\-plan\-charge/[string id](ProxyModifyProductRatePlanCharge payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), boolean rejectUnknownFields = false, string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string xZuoraWsdlVersion = "79") returns ProxyCreateOrModifyResponse|error {
        string resourcePath = string `/v1/object/product-rate-plan-charge/${getEncodedUri(id)}`;
        map<anydata> queryParam = {"rejectUnknownFields": rejectUnknownFields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId, "X-Zuora-WSDL-Version": xZuoraWsdlVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        ProxyCreateOrModifyResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # CRUD: Delete a product rate plan charge
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + id - The unique ID of the product rate plan charge to be deleted. For example, 2c93808457d787030157e031fcd34e19.
    resource isolated function delete v1/'object/product\-rate\-plan\-charge/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns ProxyDeleteResponse|error {
        string resourcePath = string `/v1/object/product-rate-plan-charge/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ProxyDeleteResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # List product charge definitions
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + charge - The unique number or ID of the charge for which the product charge definitions are to be retrieved.
    # + rateplan - The unique number or ID of the product rate plan for which the product charge definitions are to be retrieved.
    # + hideInheritedValues - The flag that controls whether the response will merge the default charge definition fields for those fields that are not overridden.
    resource isolated function get v1/product\-charge\-definitions(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? charge = (), string? rateplan = (), boolean? hideInheritedValues = ()) returns GETProductChargeDefinitionsResponse|error {
        string resourcePath = string `/v1/product-charge-definitions`;
        map<anydata> queryParam = {"charge": charge, "rateplan": rateplan, "hide-inherited-values": hideInheritedValues};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETProductChargeDefinitionsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a product charge definition
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    resource isolated function post v1/product\-charge\-definitions(POSTChargeDefinitionRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = ()) returns POSTChargeDefinitionResponse|error {
        string resourcePath = string `/v1/product-charge-definitions`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTChargeDefinitionResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Update product charge definitions
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    resource isolated function put v1/product\-charge\-definitions/bulk(PUTProductChargeDefinitionBulkRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = ()) returns GETProductChargeDefinitionsResponse|error {
        string resourcePath = string `/v1/product-charge-definitions/bulk`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETProductChargeDefinitionsResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Create product charge definitions
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    resource isolated function post v1/product\-charge\-definitions/bulk(POSTChargeDefinitionRequestBulk payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = ()) returns POSTChargeDefinitionBulkResponse|error {
        string resourcePath = string `/v1/product-charge-definitions/bulk`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTChargeDefinitionBulkResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a product charge definition
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + productChargeDefinitionKey - The unique number or ID of the product charge definition to be retrieved.
    # + hideInheritedValues - The flag that controls whether the response will merge the default charge definition fields for those fields that are not overridden.
    resource isolated function get v1/product\-charge\-definitions/[string productChargeDefinitionKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), boolean? hideInheritedValues = ()) returns GETProductChargeDefinitionResponse|error {
        string resourcePath = string `/v1/product-charge-definitions/${getEncodedUri(productChargeDefinitionKey)}`;
        map<anydata> queryParam = {"hide-inherited-values": hideInheritedValues};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETProductChargeDefinitionResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update a product charge definition
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + productChargeDefinitionKey - The unique number or ID of the product charge definition to be updated.
    resource isolated function put v1/product\-charge\-definitions/[string productChargeDefinitionKey](PUTProductChargeDefinitionRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = ()) returns GETProductChargeDefinitionResponse|error {
        string resourcePath = string `/v1/product-charge-definitions/${getEncodedUri(productChargeDefinitionKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETProductChargeDefinitionResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete a product charge definition
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + productChargeDefinitionKey - The unique number or ID of the product charge definition to be deleted.
    resource isolated function delete v1/product\-charge\-definitions/[string productChargeDefinitionKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/product-charge-definitions/${getEncodedUri(productChargeDefinitionKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # CRUD: Retrieve a product rate plan charge tier
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + fields - Object fields to return
    # + id - Object id
    resource isolated function get v1/'object/product\-rate\-plan\-charge\-tier/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string? fields = ()) returns ProxyGetProductRatePlanChargeTier|error {
        string resourcePath = string `/v1/object/product-rate-plan-charge-tier/${getEncodedUri(id)}`;
        map<anydata> queryParam = {"fields": fields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ProxyGetProductRatePlanChargeTier response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # CRUD: Update a product rate plan charge tier
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + rejectUnknownFields - Specifies whether the call fails if the request body contains unknown fields.
    # With `rejectUnknownFields` set to `true`, Zuora returns a 400 response if
    # the request body contains unknown fields. The body of the 400 response is:
    # ```json
    # {
    #     "message": "Error - unrecognised fields"
    # }
    # ```
    # By default, Zuora ignores unknown fields in the request body.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + id - The unique ID of the product rate plan charge tier to be updated. For example, 2c92c0f86c85891e016c88d55a6e543b.
    resource isolated function put v1/'object/product\-rate\-plan\-charge\-tier/[string id](ProxyModifyProductRatePlanChargeTier payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), boolean rejectUnknownFields = false, string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns ProxyCreateOrModifyResponse|error {
        string resourcePath = string `/v1/object/product-rate-plan-charge-tier/${getEncodedUri(id)}`;
        map<anydata> queryParam = {"rejectUnknownFields": rejectUnknownFields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        ProxyCreateOrModifyResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Update a Zuora Revenue accounting code
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    resource isolated function put v1/revpro\-accounting\-codes(string authorization, RevproAccountingCodes payload, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns PUTRevproAccCodeResponse|error {
        string resourcePath = string `/v1/revpro-accounting-codes`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PUTRevproAccCodeResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Create an account
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion - The minor version of the Zuora REST API. 
    # You only need to set this parameter if you use the following fields:
    # * invoice
    # * collect
    # * runBilling
    # * targetDate
    resource isolated function post v1/accounts(POSTAccountType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns POSTAccountResponseType|error {
        string resourcePath = string `/v1/accounts`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTAccountResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve an account
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + accountKey - Account number or account ID.
    resource isolated function get v1/accounts/[string accountKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETAccountType|error {
        string resourcePath = string `/v1/accounts/${getEncodedUri(accountKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETAccountType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update an account
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + accountKey - Account number or account ID.
    resource isolated function put v1/accounts/[string accountKey](PUTAccountType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/accounts/${getEncodedUri(accountKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete an account
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + accountKey - Account number or account ID.
    resource isolated function delete v1/accounts/[string accountKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns DeleteAccountResponseType|error {
        string resourcePath = string `/v1/accounts/${getEncodedUri(accountKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        DeleteAccountResponseType response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # List payment methods of an account
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + accountKey - Account number or account ID.
    # + isDefaultOnly - Indicates whether to only retrieve the default payment method of the account. The default value is `false`. If this parameter is set to `true`, only the default payment method is retrieved.
    # + isActiveOnly - Indicates whether to only retrieve the active payment methods of the account. The default value is `false`. If this parameter is set to `true`, only the active payment methods are retrieved.
    resource isolated function get v1/accounts/[string accountKey]/payment\-methods(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), boolean? isDefaultOnly = (), boolean? isActiveOnly = ()) returns GETAccountPaymentMethodType|error {
        string resourcePath = string `/v1/accounts/${getEncodedUri(accountKey)}/payment-methods`;
        map<anydata> queryParam = {"isDefaultOnly": isDefaultOnly, "isActiveOnly": isActiveOnly};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETAccountPaymentMethodType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve configuration of cascading payment methods for an account
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + accountKey - Account ID.
    resource isolated function get v1/accounts/[string accountKey]/payment\-methods/cascading(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetCascadingPaymentMethodsConfigurationResponse|error {
        string resourcePath = string `/v1/accounts/${getEncodedUri(accountKey)}/payment-methods/cascading`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetCascadingPaymentMethodsConfigurationResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Configure cascading payment methods for an account
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + accountKey - Account ID.
    resource isolated function put v1/accounts/[string accountKey]/payment\-methods/cascading(PutCascadingPaymentMethodsConfigurationRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/accounts/${getEncodedUri(accountKey)}/payment-methods/cascading`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve the default payment method of an account
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + accountKey - Account number or account ID.
    resource isolated function get v1/accounts/[string accountKey]/payment\-methods/default(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETPaymentMethodResponseForAccount|error {
        string resourcePath = string `/v1/accounts/${getEncodedUri(accountKey)}/payment-methods/default`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETPaymentMethodResponseForAccount response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve an account summary
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + accountKey - Account number or account ID.
    # + excludeUsage - Indicate whether to exclude usage information in the response. The default value is `false`.
    resource isolated function get v1/accounts/[string accountKey]/summary(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), boolean? excludeUsage = ()) returns GETAccountSummaryType|error {
        string resourcePath = string `/v1/accounts/${getEncodedUri(accountKey)}/summary`;
        map<anydata> queryParam = {"excludeUsage": excludeUsage};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETAccountSummaryType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a contact
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    resource isolated function post v1/contacts(POSTContactType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns ContactResponse|error {
        string resourcePath = string `/v1/contacts`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        ContactResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a contact
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + contactId - The ID of the contact that you want to retrieve.
    resource isolated function get v1/contacts/[string contactId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns ContactResponse|error {
        string resourcePath = string `/v1/contacts/${getEncodedUri(contactId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ContactResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update a contact
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + contactId - The ID of the contact that you want to update.
    resource isolated function put v1/contacts/[string contactId](PUTContactType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns ContactResponse|error {
        string resourcePath = string `/v1/contacts/${getEncodedUri(contactId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        ContactResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete a contact
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + contactId - The ID of the contact that you want to delete.
    resource isolated function delete v1/contacts/[string contactId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/contacts/${getEncodedUri(contactId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Scrub a contact
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + contactId - The ID of the contact that you want to scrub sensitive data from.
    resource isolated function put v1/contacts/[string contactId]/scrub(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/contacts/${getEncodedUri(contactId)}/scrub`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a contact snapshot
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + contactSnapshotId - The unique ID of the contact snapshot to be retrieved. For example, 2c92c8955bd63cc1015bd7c151af02ab.
    resource isolated function get v1/contact\-snapshots/[string contactSnapshotId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20) returns GETContactSnapshotResponse|error {
        string resourcePath = string `/v1/contact-snapshots/${getEncodedUri(contactSnapshotId)}`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETContactSnapshotResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Sign up
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + accept - Expressed as MIME types that the client is able to understand. Using content negotiation, the server then selects one of the proposals, uses it and informs the client of its choice with the `Content-Type` response header. The possible response MIME types are `application/json-seq` compatible with http://jsonlines.org/, and `text/csv` compatible with RFC 4180. `application/json-seq` is the default response MIME type. If the `Accept` header is not sepecified, or set */*, the response body is returned in application/json-seq MIME type.
    resource isolated function post v1/sign\-up(string authorization, SignUpRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? accept = ()) returns SignUpResponse|error {
        string resourcePath = string `/v1/sign-up`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Accept": accept};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        SignUpResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Preview an order
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/orders/preview(POSTOrderPreviewRequestType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PostOrderPreviewResponseType|error {
        string resourcePath = string `/v1/orders/preview`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PostOrderPreviewResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Preview an order asynchronously
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + return - Accepted 
    resource isolated function post v1/async/orders/preview(POSTOrderPreviewAsyncRequestType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns Inline_response_202|error {
        string resourcePath = string `/v1/async/orders/preview`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        Inline_response_202 response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List orders
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + dateFilterOption - The date type to filter on. This field value can be orderDate or updatedDate. Default is orderDate.
    # + startDate - The result will only contain the orders with the date of dateFilterOption later than or equal to this date.
    # + endDate - The result will only contains orders with the date of dateFilterOption earlier than or equal to this date.
    # + status - The status of orders.
    resource isolated function get v1/orders(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20, string? dateFilterOption = (), string? startDate = (), string? endDate = (), "all"|"cancelled"|"completed"|"draft"|"executing"|"failed"|"pending"|"scheduled"? status = ()) returns GetAllOrdersResponseType|error {
        string resourcePath = string `/v1/orders`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize, "dateFilterOption": dateFilterOption, "startDate": startDate, "endDate": endDate, "status": status};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetAllOrdersResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create an order
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + returnIds - Specify whether to return IDs associated with the numbers returned in the "Create an order" operation.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. 
    # You need to set this parameter if you use the following fields:
    # * subscriptions
    # * subscriptionNumbers
    resource isolated function post v1/orders(POSTOrderRequestType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), boolean returnIds = false, string? zuoraVersion = ()) returns PostOrderResponseType|error {
        string resourcePath = string `/v1/orders`;
        map<anydata> queryParam = {"returnIds": returnIds};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PostOrderResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Create an order asynchronously
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + returnIds - Specify whether to return IDs for the [Get job status and response](https://developer.zuora.com/api-references/api/operation/GET_JobStatusAndResponse) operation. If you set this query parameter to `true`, the corresponding IDs, which are associated with the numbers returned in this operation, can be returned in the "Get job status and response" response body.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. 
    # You need to set this parameter if you want to use the following fields:
    # * subscriptions
    # * subscriptionNumbers
    # * subscriptionIds (when the `returnId` query parameter is set to `true`)
    # + return - Accepted 
    resource isolated function post v1/async/orders(POSTOrderAsyncRequestType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), boolean returnIds = false, string? zuoraVersion = ()) returns Inline_response_202_1|error {
        string resourcePath = string `/v1/async/orders`;
        map<anydata> queryParam = {"returnIds": returnIds};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        Inline_response_202_1 response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve an order
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + orderNumber - The order number to be retrieved.
    resource isolated function get v1/orders/[string orderNumber](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetOrderResponse|error {
        string resourcePath = string `/v1/orders/${getEncodedUri(orderNumber)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetOrderResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update an order
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + orderNumber - Order number of a order in which you are to update.
    resource isolated function put v1/orders/[string orderNumber](PUTOrderRequestType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PostOrderResponseType|error {
        string resourcePath = string `/v1/orders/${getEncodedUri(orderNumber)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PostOrderResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete an order
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + orderNumber - The number of the order to be deleted.
    resource isolated function delete v1/orders/[string orderNumber](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/orders/${getEncodedUri(orderNumber)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Retrieve the status and response of a job
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + jobId - UUID of the asynchronous job created by an asynchronous API operation.
    # + return - OK 
    resource isolated function get v1/async\-jobs/[string jobId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = ()) returns Inline_response_200|error {
        string resourcePath = string `/v1/async-jobs/${getEncodedUri(jobId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        Inline_response_200 response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List orders of a subscription owner
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + accountNumber - The subscription owner account number.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + dateFilterOption - The date type to filter on.
    # This field value can be 'orderDate' or 'updatedDate'. Default is orderDate.
    # + startDate - The result will only contain the orders with the date of 'dateFilterOption' later than or equal to this date.
    # + endDate - The result will only contain the orders with the date of 'dateFilterOption' earlier than or equal to this date.
    resource isolated function get v1/orders/subscriptionOwner/[string accountNumber](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20, string? dateFilterOption = (), string? startDate = (), string? endDate = ()) returns GetOrdersResponse|error {
        string resourcePath = string `/v1/orders/subscriptionOwner/${getEncodedUri(accountNumber)}`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize, "dateFilterOption": dateFilterOption, "startDate": startDate, "endDate": endDate};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetOrdersResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List orders by subscription number
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + subscriptionNumber - The subscription number.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + dateFilterOption - The date type to filter on. This field value can be 'orderDate' or 'updatedDate'. Default is orderDate.
    # + startDate - The result will only contain the orders with the date of 'dateFilterOption' later than or equal to this date.
    # + endDate - The result will only contain the orders with the date of 'dateFilterOption' earlier than or equal to this date.
    # + status - The status of orders.
    resource isolated function get v1/orders/subscription/[string subscriptionNumber](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20, string? dateFilterOption = (), string? startDate = (), string? endDate = (), "all"|"cancelled"|"completed"|"draft"|"executing"|"failed"|"pending"|"scheduled"? status = ()) returns GetOrdersResponse|error {
        string resourcePath = string `/v1/orders/subscription/${getEncodedUri(subscriptionNumber)}`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize, "dateFilterOption": dateFilterOption, "startDate": startDate, "endDate": endDate, "status": status};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetOrdersResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List orders of an invoice owner
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + accountNumber - The invoice owner account number.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + dateFilterOption - The date type to filter on. This field value can be orderDate or updatedDate. Default is orderDate.
    # + startDate - The result will only contain the orders with the date of dateFilterOption later than or equal to this date.
    # + endDate - The result will only contain the orders with the date of dateFilterOption earlier than or equal to this date.
    # + status - The status of orders.
    resource isolated function get v1/orders/invoiceOwner/[string accountNumber](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20, string? dateFilterOption = (), string? startDate = (), string? endDate = (), "all"|"cancelled"|"completed"|"draft"|"executing"|"failed"|"pending"|"scheduled"? status = ()) returns GetOrdersResponse|error {
        string resourcePath = string `/v1/orders/invoiceOwner/${getEncodedUri(accountNumber)}`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize, "dateFilterOption": dateFilterOption, "startDate": startDate, "endDate": endDate, "status": status};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetOrdersResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update order custom fields
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + orderNumber - The order number.
    resource isolated function put v1/orders/[string orderNumber]/customFields(PUTOrderPatchRequestType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/orders/${getEncodedUri(orderNumber)}/customFields`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Update subscription custom fields
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + subscriptionNumber - The subscription number to be updated.
    resource isolated function put v1/subscriptions/[string subscriptionNumber]/customFields(PUTSubscriptionPatchRequestType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/subscriptions/${getEncodedUri(subscriptionNumber)}/customFields`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Update order action trigger dates
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + orderNumber - Order number of a pending order in which you are to update an order action's triggering dates.
    resource isolated function put v1/orders/[string orderNumber]/triggerDates(PUTOrderActionTriggerDatesRequestType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PUTOrderTriggerDatesResponseType|error {
        string resourcePath = string `/v1/orders/${getEncodedUri(orderNumber)}/triggerDates`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PUTOrderTriggerDatesResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Activate an order
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + orderNumber - Order number of a order in which you are to activate.
    resource isolated function put v1/orders/[string orderNumber]/activate(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PostOrderResponseType|error {
        string resourcePath = string `/v1/orders/${getEncodedUri(orderNumber)}/activate`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        PostOrderResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Cancel an order
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + orderNumber - The order number of the draft order you wish to cancel.
    resource isolated function put v1/orders/[string orderNumber]/cancel(OrderNumber_cancel_body payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PutOrderCancelResponse|error {
        string resourcePath = string `/v1/orders/${getEncodedUri(orderNumber)}/cancel`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PutOrderCancelResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # List pending orders by subscription number
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + subscriptionKey - Subscription number. For example, A-S00000135.
    resource isolated function get v1/orders/subscription/[string subscriptionKey]/pending(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetAllOrdersResponseType|error {
        string resourcePath = string `/v1/orders/subscription/${getEncodedUri(subscriptionKey)}/pending`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetAllOrdersResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update an order action
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + id - The id of the Order Action to update.
    resource isolated function put v1/orderActions/[string id](PUTOrderActionsRequestType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/orderActions/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve an order line item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + itemId - The id of the Order Line Item to retrieve.
    # + fulfillment - Return the related fulfillments or not.
    resource isolated function get v1/order\-line\-items/[string itemId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), boolean fulfillment = false) returns GetOrderLineItemResponseType|error {
        string resourcePath = string `/v1/order-line-items/${getEncodedUri(itemId)}`;
        map<anydata> queryParam = {"fulfillment": fulfillment};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetOrderLineItemResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update an order line item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + itemId - The id of the Order Line Item to update.
    resource isolated function put v1/order\-line\-items/[string itemId](PUTOrderLineItemRequestType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PutOrderLineItemResponseType|error {
        string resourcePath = string `/v1/order-line-items/${getEncodedUri(itemId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PutOrderLineItemResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Update order line items
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/order\-line\-items/bulk(PostOrderLineItemsRequestType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetOrderLineItemResponseType|error {
        string resourcePath = string `/v1/order-line-items/bulk`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GetOrderLineItemResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Create fulfillments
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/fulfillments(PostFulfillmentsRequestType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PostFulfillmentsResponseType|error {
        string resourcePath = string `/v1/fulfillments`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PostFulfillmentsResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a fulfillment
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + 'key - The id or fulfillment number of the Fulfillment to retrieve.
    # + fulfillmentItems - Return the related fulfillment items or not.
    resource isolated function get v1/fulfillments/[string 'key](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), boolean fulfillmentItems = false) returns GetFulfillmentResponseType|error {
        string resourcePath = string `/v1/fulfillments/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"fulfillment-items": fulfillmentItems};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetFulfillmentResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update a fulfillment
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + 'key - The id or fulfillment number of the Fulfillment to update.
    resource isolated function put v1/fulfillments/[string 'key](PutFulfillmentRequestType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/fulfillments/${getEncodedUri('key)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete a fulfillment
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + 'key - The id or fulfillment number of the Fulfillment to delete.
    resource isolated function delete v1/fulfillments/[string 'key](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/fulfillments/${getEncodedUri('key)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Create fulfillment items
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/fulfillment\-items(PostFulfillmentItemsRequestType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PostFulfillmentItemsResponseType|error {
        string resourcePath = string `/v1/fulfillment-items`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PostFulfillmentItemsResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a fulfillment item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + id - The id of the Fulfillment Item to retrieve.
    resource isolated function get v1/fulfillment\-items/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetFulfillmentItemResponseType|error {
        string resourcePath = string `/v1/fulfillment-items/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetFulfillmentItemResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update a fulfillment item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + id - The id of the Fulfillment Item to update.
    resource isolated function put v1/fulfillment\-items/[string id](PutFulfillmentItemRequestType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/fulfillment-items/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete a fulfillment item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + id - The id of the Fulfillment Item to delete.
    resource isolated function delete v1/fulfillment\-items/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/fulfillment-items/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Retrieve a ramp
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + rampNumber - The automatically generated number of a ramp. For example, R-00000268.
    resource isolated function get v1/ramps/[string rampNumber](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETRampByRampNumberResponseType|error {
        string resourcePath = string `/v1/ramps/${getEncodedUri(rampNumber)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETRampByRampNumberResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List all ramp metrics of a ramp
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + rampNumber - The automatically generated number of a ramp. For example, R-00000268.
    resource isolated function get v1/ramps/[string rampNumber]/ramp\-metrics(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETRampMetricsByRampNumberResponseType|error {
        string resourcePath = string `/v1/ramps/${getEncodedUri(rampNumber)}/ramp-metrics`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETRampMetricsByRampNumberResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a ramp by subscription key
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + subscriptionKey - The ID or number of an existing subscription.
    resource isolated function get v1/subscriptions/[string subscriptionKey]/ramps(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETRampsBySubscriptionKeyResponseType|error {
        string resourcePath = string `/v1/subscriptions/${getEncodedUri(subscriptionKey)}/ramps`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETRampsBySubscriptionKeyResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List ramp metrics by subscription key
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + subscriptionKey - The ID or number of an existing subscription.
    resource isolated function get v1/subscriptions/[string subscriptionKey]/ramp\-metrics(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETRampMetricsBySubscriptionKeyResponseType|error {
        string resourcePath = string `/v1/subscriptions/${getEncodedUri(subscriptionKey)}/ramp-metrics`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETRampMetricsBySubscriptionKeyResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List ramp metrics by order number
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + orderNumber - The number of the existing order.
    resource isolated function get v1/orders/[string orderNumber]/ramp\-metrics(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETRampMetricsByOrderNumberResponseType|error {
        string resourcePath = string `/v1/orders/${getEncodedUri(orderNumber)}/ramp-metrics`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETRampMetricsByOrderNumberResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Preview a subscription
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. 
    # You need to set this parameter if you use the following fields:
    # * targetDate
    # * includeExistingDraftDocItems
    # * previewType
    # * taxationItems
    # If you have the Invoice Settlement feature enabled, you need to specify this parameter. Otherwise, an error is returned.
    # . 
    resource isolated function post v1/subscriptions/preview(POSTSubscriptionPreviewType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns POSTSubscriptionPreviewResponseType|error {
        string resourcePath = string `/v1/subscriptions/preview`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTSubscriptionPreviewResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Preview a subscription by subscription key
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. 
    # You need to set this parameter if you use the following fields:
    # * targetDate
    # * includeExistingDraftDocItems
    # * previewType
    # * taxationItems
    # If you have the Invoice Settlement feature enabled, you need to specify this parameter. Otherwise, an error is returned.
    # + subscriptionKey - Subscription number or ID
    resource isolated function post v1/subscriptions/[string subscriptionKey]/preview(PreviewExistingSubscriptionRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraVersion = ()) returns PreviewExistingSubscriptionResponse|error {
        string resourcePath = string `/v1/subscriptions/${getEncodedUri(subscriptionKey)}/preview`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PreviewExistingSubscriptionResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Create a subscription
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion - The minor version of the Zuora REST API. 
    # You only need to set this parameter if you use the following fields:
    # * invoice
    # * collect
    # * runBilling
    # * targetDate
    resource isolated function post v1/subscriptions(POSTSubscriptionType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns POSTSubscriptionResponseType|error {
        string resourcePath = string `/v1/subscriptions`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTSubscriptionResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List subscriptions by account key
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + accountKey -
    # Possible values are:
    # * an account number
    # * an account ID
    # + chargeDetail - The segmented rate plan charges.
    # When an amendment results in a change to a charge, Zuora creates a segmented rate plan charge. Use this field to track segment charges.
    # Possible values are:
    # * __last-segment__: (Default) The last rate plan charge on the subscription. The last rate plan charge is the last one in the order of time on the subscription rather than the most recent changed charge on the subscription.
    # * __current-segment__: The segmented charge that is active on today’s date (effectiveStartDate <= today’s date < effectiveEndDate).
    # * __all-segments__: All the segmented charges. The `chargeSegments` field is returned in the response. The `chargeSegments` field contains an array of the charge information for all the charge segments.
    # * __specific-segment&as-of-date=date__: The segmented charge that is active on a date you specified (effectiveStartDate <= specific date < effectiveEndDate). The format of the date is yyyy-mm-dd.
    # + excludeRatePlansWithNoCharges - If the `exclude-rate-plans-with-no-charges` is `true`, only the active charges and rate plans will be in the response. The default value is `false`.
    resource isolated function get v1/subscriptions/accounts/[string accountKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20, string? chargeDetail = (), boolean? excludeRatePlansWithNoCharges = ()) returns GETSubscriptionWrapper|error {
        string resourcePath = string `/v1/subscriptions/accounts/${getEncodedUri(accountKey)}`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize, "charge-detail": chargeDetail, "exclude-rate-plans-with-no-charges": excludeRatePlansWithNoCharges};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETSubscriptionWrapper response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a subscription by key
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + subscriptionKey - Possible values are:
    # * a subscription number
    # * a subscription ID
    # + chargeDetail -
    # The segmented rate plan charges. When an amendment results in a change to a charge, Zuora creates a segmented rate plan charge. Use this field to track segment charges.
    # Possible values are:
    # * __last-segment__: (Default) The last rate plan charge on the subscription. The last rate plan charge is the last one in the order of time on the subscription rather than the most recent changed charge on the subscription.
    # * __current-segment__: The segmented charge that is active on today’s date (effectiveStartDate <= today’s date < effectiveEndDate).
    # * __all-segments__: All the segmented charges. The `chargeSegments` field is returned in the response. The `chargeSegments` field contains an array of the charge information for all the charge segments.
    # * __specific-segment&as-of-date=date__: The segmented charge that is active on a date you specified ((specific date = effectiveStartDate) OR (effectiveStartDate < specific date < effectiveEndDate)). The format of the date is yyyy-mm-dd.
    # + excludeRatePlansWithNoCharges - If the `exclude-rate-plans-with-no-charges` is `true`, only the active charges and rate plans will be in the response. The default value is `false`.
    resource isolated function get v1/subscriptions/[string subscriptionKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? chargeDetail = (), boolean? excludeRatePlansWithNoCharges = ()) returns GETSubscriptionTypeWithSuccess|error {
        string resourcePath = string `/v1/subscriptions/${getEncodedUri(subscriptionKey)}`;
        map<anydata> queryParam = {"charge-detail": chargeDetail, "exclude-rate-plans-with-no-charges": excludeRatePlansWithNoCharges};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETSubscriptionTypeWithSuccess response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update a subscription
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. 
    # You need to set this parameter if you use the following fields:
    # * collect
    # * invoice
    # * includeExistingDraftDocItems
    # * previewType
    # * runBilling
    # * targetDate
    # * taxationItems
    # If you have the Invoice Settlement feature enabled, you need to specify this parameter. Otherwise, an error is returned.
    # See [Zuora REST API Versions](https://developer.zuora.com/api-references/api/overview/#section/API-Versions) for more information.
    # + subscriptionKey -
    # Subscription number or ID. 
    # ID can be the latest version or any history version of ID. 
    # * To make sure you update the last version of the subscription, use one of the following operations to retrieve the last version of ID:
    # * [List subscriptions by account key](https://developer.zuora.com/api-references/api/operation/GET_SubscriptionsByAccount)
    # * [Retrieve a subscription by key](https://developer.zuora.com/api-references/api/operation/GET_SubscriptionsByKey) by using the subscription number as the subscription-key
    # * If you want to use any history version of ID, the `STABLE_ID_PUBLIC_API` permission must be enabled. Submit a request at [Zuora Global Support](http://support.zuora.com/) to enable the permission. To retrieve a history version of ID, use the [Retrieve a subscription by key and version](https://developer.zuora.com/api-references/api/operation/GET_SubscriptionsByKeyAndVersion) operation.
    resource isolated function put v1/subscriptions/[string subscriptionKey](PUTSubscriptionType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns PUTSubscriptionResponseType|error {
        string resourcePath = string `/v1/subscriptions/${getEncodedUri(subscriptionKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PUTSubscriptionResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a subscription by key and version
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + subscriptionKey - Subscription number. For example, A-S00000135.
    # + version - Subscription version. For example, 1.
    # + chargeDetail -
    # The segmented rate plan charges. When an amendment results in a change to a charge, Zuora creates a segmented rate plan charge. Use this field to track segment charges.
    # Possible values are:
    # * __last-segment__: (Default) The last rate plan charge on the subscription. The last rate plan charge is the last one in the order of time on the subscription rather than the most recent changed charge on the subscription.
    # * __current-segment__: The segmented charge that is active on today’s date (effectiveStartDate <= today’s date < effectiveEndDate).
    # * __all-segments__: All the segmented charges. The `chargeSegments` field is returned in the response. The `chargeSegments` field contains an array of the charge information for all the charge segments.
    # * __specific-segment&as-of-date=date__: The segmented charge that is active on a date you specified (effectiveStartDate <= specific date < effectiveEndDate). The format of the date is yyyy-mm-dd.
    # + excludeRatePlansWithNoCharges - If the `exclude-rate-plans-with-no-charges` is `true`, only the active charges and rate plans will be in the response. The default value is `false`.
    # + getDetailedMetrics - If the `getDetailedMetrics` is `true`, `contractedNetMrr`, `asOfDayGrossMrr`, `asOfDayNetMrr` will be in the response.
    # The default value is `false`. 
    # + asOfDay -
    # The date for detailed metrics. Only available when `getDetailedMetrics` is `true`. The date should be in the format `YYYY-MM-DD`. 
    # The default value is the current date.  
    resource isolated function get v1/subscriptions/[string subscriptionKey]/versions/[string version](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? chargeDetail = (), boolean? excludeRatePlansWithNoCharges = (), boolean getDetailedMetrics = false, string? asOfDay = ()) returns GETSubscriptionTypeWithSuccess|error {
        string resourcePath = string `/v1/subscriptions/${getEncodedUri(subscriptionKey)}/versions/${getEncodedUri(version)}`;
        map<anydata> queryParam = {"charge-detail": chargeDetail, "exclude-rate-plans-with-no-charges": excludeRatePlansWithNoCharges, "getDetailedMetrics": getDetailedMetrics, "asOfDay": asOfDay};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETSubscriptionTypeWithSuccess response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Renew a subscription
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion - The minor version of the Zuora REST API. 
    # You only need to set this parameter if you use the following fields:
    # * invoice
    # * collect
    # * runBilling
    # * targetDate 
    # + subscriptionKey - Subscription number or ID
    resource isolated function put v1/subscriptions/[string subscriptionKey]/renew(PUTRenewSubscriptionType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns PUTRenewSubscriptionResponseType|error {
        string resourcePath = string `/v1/subscriptions/${getEncodedUri(subscriptionKey)}/renew`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PUTRenewSubscriptionResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Cancel a subscription
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion - The minor version of the Zuora REST API. 
    # You only need to set this parameter if you use the following fields:
    # * invoice
    # * collect
    # * runBilling
    # * targetDate 
    # + subscriptionKey - Subscription number or ID. Subscription status must be `Active`.
    resource isolated function put v1/subscriptions/[string subscriptionKey]/cancel(POSTSubscriptionCancellationType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns POSTSubscriptionCancellationResponseType|error {
        string resourcePath = string `/v1/subscriptions/${getEncodedUri(subscriptionKey)}/cancel`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTSubscriptionCancellationResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Resume a subscription
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion - The minor version of the Zuora REST API. 
    # You only need to set this parameter if you use the following fields:
    # * invoice
    # * collect
    # * runBilling
    # * targetDate
    # + subscriptionKey - Subscription number or ID. Subscription status must be Suspended.
    resource isolated function put v1/subscriptions/[string subscriptionKey]/resume(PUTSubscriptionResumeType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns PUTSubscriptionResumeResponseType|error {
        string resourcePath = string `/v1/subscriptions/${getEncodedUri(subscriptionKey)}/resume`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PUTSubscriptionResumeResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Suspend a subscription
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion - The minor version of the Zuora REST API. 
    # You only need to set this parameter if you use the following fields:
    # * invoice
    # * collect
    # * runBilling
    # * targetDate
    # + subscriptionKey - Subscription number or ID. Subscription status must be Active.
    resource isolated function put v1/subscriptions/[string subscriptionKey]/suspend(PUTSubscriptionSuspendType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns PUTSubscriptionSuspendResponseType|error {
        string resourcePath = string `/v1/subscriptions/${getEncodedUri(subscriptionKey)}/suspend`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PUTSubscriptionSuspendResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete a subscription by number
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + subscriptionKey - Subscription number
    resource isolated function put v1/subscriptions/[string subscriptionKey]/delete(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PUTDeleteSubscriptionResponseType|error {
        string resourcePath = string `/v1/subscriptions/${getEncodedUri(subscriptionKey)}/delete`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        PUTDeleteSubscriptionResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Update subscription custom fields of a subscription version
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + subscriptionNumber - The subscription number to be updated.
    # + version - The subscription version to be updated.
    resource isolated function put v1/subscriptions/[string subscriptionNumber]/versions/[string version]/customFields(PUTSubscriptionPatchSpecificVersionRequestType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/subscriptions/${getEncodedUri(subscriptionNumber)}/versions/${getEncodedUri(version)}/customFields`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a rate plan
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + ratePlanId - The ID of the subscription rate plan to be retrieved.
    resource isolated function get v1/rateplans/[string ratePlanId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetOrderActionRatePlanResponse|error {
        string resourcePath = string `/v1/rateplans/${getEncodedUri(ratePlanId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetOrderActionRatePlanResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Reverse fund rollover
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    resource isolated function post v1/ppdd/reverse\-rollover(POSTReverseRolloverRequestType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns POSTReverseRolloverResponseType|error {
        string resourcePath = string `/v1/ppdd/reverse-rollover`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTReverseRolloverResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Trigger fund rollover
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    resource isolated function post v1/ppdd/rollover(POSTTriggerRolloverRequestType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns POSTTriggerRolloverResponseType|error {
        string resourcePath = string `/v1/ppdd/rollover`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTTriggerRolloverResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Upload a usage file
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/usage(V1_usage_body payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTUsageResponseType|error {
        string resourcePath = string `/v1/usage`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        mime:Entity[] bodyParts = check createBodyParts(payload);
        request.setBodyParts(bodyParts);
        POSTUsageResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a usage record
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + accountKey - Account number or account ID.
    resource isolated function get v1/usage/accounts/[string accountKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20) returns GETUsageWrapper|error {
        string resourcePath = string `/v1/usage/accounts/${getEncodedUri(accountKey)}`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETUsageWrapper response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve usage rate detail for an invoice item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + invoiceItemId - Invoice item ID. For example, `402880e57f725d85017f7267c4ad002b`. Available through Data Source export.
    resource isolated function get v1/invoices/invoice\-item/[string invoiceItemId]/usage\-rate\-detail(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETUsageRateDetailWrapper|error {
        string resourcePath = string `/v1/invoices/invoice-item/${getEncodedUri(invoiceItemId)}/usage-rate-detail`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETUsageRateDetailWrapper response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # CRUD: Create a usage record
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + rejectUnknownFields - Specifies whether the call fails if the request body contains unknown fields.
    # With `rejectUnknownFields` set to `true`, Zuora returns a 400 response if
    # the request body contains unknown fields. The body of the 400 response is:
    # ```json
    # {
    #     "message": "Error - unrecognised fields"
    # }
    # ```
    # By default, Zuora ignores unknown fields in the request body.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + xZuoraWsdlVersion - Zuora WSDL version number.
    resource isolated function post v1/'object/usage(ProxyCreateUsage payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), boolean rejectUnknownFields = false, string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string xZuoraWsdlVersion = "79") returns ProxyCreateOrModifyResponse|error {
        string resourcePath = string `/v1/object/usage`;
        map<anydata> queryParam = {"rejectUnknownFields": rejectUnknownFields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId, "X-Zuora-WSDL-Version": xZuoraWsdlVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        ProxyCreateOrModifyResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # CRUD: Retrieve a usage record
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + fields - Object fields to return
    # + id - Object id
    resource isolated function get v1/'object/usage/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string? fields = ()) returns ProxyGetUsage|error {
        string resourcePath = string `/v1/object/usage/${getEncodedUri(id)}`;
        map<anydata> queryParam = {"fields": fields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ProxyGetUsage response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # CRUD: Update a usage record
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + rejectUnknownFields - Specifies whether the call fails if the request body contains unknown fields.
    # With `rejectUnknownFields` set to `true`, Zuora returns a 400 response if
    # the request body contains unknown fields. The body of the 400 response is:
    # ```json
    # {
    #     "message": "Error - unrecognised fields"
    # }
    # ```
    # By default, Zuora ignores unknown fields in the request body.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + id - Object id
    resource isolated function put v1/'object/usage/[string id](ProxyModifyUsage payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), boolean rejectUnknownFields = false, string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns ProxyCreateOrModifyResponse|error {
        string resourcePath = string `/v1/object/usage/${getEncodedUri(id)}`;
        map<anydata> queryParam = {"rejectUnknownFields": rejectUnknownFields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        ProxyCreateOrModifyResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # CRUD: Delete a usage record
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + id - Object id
    resource isolated function delete v1/'object/usage/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns ProxyDeleteResponse|error {
        string resourcePath = string `/v1/object/usage/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ProxyDeleteResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # List all delivery adjustments of a subscription
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + subscriptionNumber - A subscription number.
    resource isolated function get v1/adjustments(string subscriptionNumber, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETAdjustmentsBySubscriptionNumberResponseType|error {
        string resourcePath = string `/v1/adjustments`;
        map<anydata> queryParam = {"subscription-number": subscriptionNumber};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETAdjustmentsBySubscriptionNumberResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a delivery adjustment
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/adjustments(POSTCreateBillingAdjustmentRequestType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETAdjustmentsResponseType|error {
        string resourcePath = string `/v1/adjustments`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETAdjustmentsResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Preview a delivery adjustment
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/adjustments/preview(POSTPreviewBillingAdjustmentRequestType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETAdjustmentsResponseType|error {
        string resourcePath = string `/v1/adjustments/preview`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETAdjustmentsResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a delivery adjustment
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + adjustmentKey - The delivery adjustment ID or number to retrieve.
    resource isolated function get v1/adjustments/[string adjustmentKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETAdjustmentByIdResponseType|error {
        string resourcePath = string `/v1/adjustments/${getEncodedUri(adjustmentKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETAdjustmentByIdResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Cancel a delivery adjustment
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + adjustmentId - The ID of the delivery adjustment to cancel.
    resource isolated function put v1/adjustments/[string adjustmentId]/cancel(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETCancelAdjustmentResponseType|error {
        string resourcePath = string `/v1/adjustments/${getEncodedUri(adjustmentId)}/cancel`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        GETCancelAdjustmentResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # List billing documents for an account
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + accountId - The ID of the customer account that the billing documents are associated with.
    # **Note**: When retrieving information about all billing documents associated with an account, you must specify either `accountId` or `accountNumber` in the query parameters.
    # + accountNumber - The number of the customer account that the billing documents are associated with.
    # **Note**: When retrieving information about all billing documents associated with an account, you must specify either `accountId` or `accountNumber` in the query parameters.
    # + documentDate - The date of the billing document. It represents the invoice date for invoices, credit memo date for credit memos, and debit memo date for debit memos.
    # + status - The status of the billing document.
    # + sort - This parameter restricts the order of the data returned in the response. You can use this parameter to supply a dimension you want to sort on.
    # If you do not specify any sortable field, the response data is sorted by the `documentDate` field in descending order.
    # A sortable field uses the following form: 
    # *operator* *field_name*
    # You can use at most two sortable fields in one URL path. Use a comma to separate sortable fields. For example:  *operator* *field_name*, *operator* *field_name*  
    # *operator* is used to mark the order of sequencing. The operator is optional. If you only specify the sortable field without any operator, the response data is sorted in descending order by this field.  
    # - The `-` operator indicates an ascending order.
    # - The `+` operator indicates a descending order.
    # *field_name* indicates the name of a sortable field. The supported sortable fields of this operation are as below:
    # - documentDate
    # - documentType
    # Examples:
    # - /billing-documents?accountId=4028905f5e4feb38015e50af9aa002d1
    # &sort=+documentDate,-documentType
    # - /billing-documents?accountId=4028905f5e4feb38015e50af9aa002d1
    # &status=Posted&sort=+documentDate&page=2&pageSize=15
    resource isolated function get v1/billing\-documents(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20, string? accountId = (), string? accountNumber = (), string? documentDate = (), "Draft"|"Posted"|"Canceled"|"Error"? status = (), string? sort = ()) returns BillingDocumentQueryResponseElementType|error {
        string resourcePath = string `/v1/billing-documents`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize, "accountId": accountId, "accountNumber": accountNumber, "documentDate": documentDate, "status": status, "sort": sort};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        BillingDocumentQueryResponseElementType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a job to hard delete billing document files
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/accounts/billing\-documents/files/deletion\-jobs(POSTBillingDocumentFilesDeletionJobRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTBillingDocumentFilesDeletionJobResponse|error {
        string resourcePath = string `/v1/accounts/billing-documents/files/deletion-jobs`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTBillingDocumentFilesDeletionJobResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a job of hard deleting billing document files
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + jobId - The unique ID of a billing document file deletion job. For example, 2c92c8f83dc4f752013dc72c24ee016c.
    resource isolated function get v1/accounts/billing\-documents/files/deletion\-jobs/[string jobId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETBillingDocumentFilesDeletionJobResponse|error {
        string resourcePath = string `/v1/accounts/billing-documents/files/deletion-jobs/${getEncodedUri(jobId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETBillingDocumentFilesDeletionJobResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Generate billing documents by account ID
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + 'key - The ID or number of the customer account that billing documents are generated for. For example, 8a8082e65b27f6c3015ba3e326b26419 or AC0000001.
    resource isolated function post v1/accounts/[string 'key]/billing\-documents/generate(PostGenerateBillingDocumentType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GenerateBillingDocumentResponseType|error {
        string resourcePath = string `/v1/accounts/${getEncodedUri('key)}/billing-documents/generate`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GenerateBillingDocumentResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Update invoices
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function put v1/invoices(PutBatchInvoiceType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/invoices`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Create a standalone invoice
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/invoices(PostInvoiceType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PostInvoiceResponse|error {
        string resourcePath = string `/v1/invoices`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PostInvoiceResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Create standalone invoices
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/invoices/batch(PostBatchInvoicesType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PostBatchInvoiceResponse|error {
        string resourcePath = string `/v1/invoices/batch`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PostBatchInvoiceResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Post invoices
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/invoices/bulk\-post(POSTInvoicesBatchPostType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns InvoicesBatchPostResponseType|error {
        string resourcePath = string `/v1/invoices/bulk-post`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        InvoicesBatchPostResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve the PDF file generation status of invoices
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + invoiceKeys - The IDs or numbers of the invoices separated by commas. For example - `?invoiceKeys=2c92c8955bd63cc1015bd7c151af02ab,4b65b8605bd63cc1015bd7c151af02cd,INV-0000001`. 
    # + zuoraVersion - The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control.
    # + return - OK 
    resource isolated function get v1/invoices/pdf\-status(string invoiceKeys, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraVersion = ()) returns GetInvoicePdfStatusBatchResponse|error {
        string resourcePath = string `/v1/invoices/pdf-status`;
        map<anydata> queryParam = {"invoiceKeys": invoiceKeys};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetInvoicePdfStatusBatchResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve an invoice
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + invoiceKey - The ID or number of the invoice. For example, 2c92c8955bd63cc1015bd7c151af02ab or INV-0000001.
    resource isolated function get v1/invoices/[string invoiceKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PostInvoiceResponse|error {
        string resourcePath = string `/v1/invoices/${getEncodedUri(invoiceKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        PostInvoiceResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update an invoice
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + invoiceKey - The ID or number of the invoice. For example, 2c92c8955bd63cc1015bd7c151af02ab or INV-0000001.
    resource isolated function put v1/invoices/[string invoiceKey](PutInvoiceType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PutInvoiceResponseType|error {
        string resourcePath = string `/v1/invoices/${getEncodedUri(invoiceKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PutInvoiceResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete an invoice
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + invoiceKey - The ID or number of the invoice to be deleted. For example, 2c92c8955bd63cc1015bd7c151af02ab or INV-0000001.
    resource isolated function delete v1/invoices/[string invoiceKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns DeleteInvoiceResponseType|error {
        string resourcePath = string `/v1/invoices/${getEncodedUri(invoiceKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        DeleteInvoiceResponseType response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # List all application parts of an invoice
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + invoiceKey - The ID or number of the invoice. For example, 2c92c8955bd63cc1015bd7c151af02ab or INV-0000001.
    # + return - OK 
    resource isolated function get v1/invoices/[string invoiceKey]/application\-parts(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetInvoiceApplicationPartCollectionType|error {
        string resourcePath = string `/v1/invoices/${getEncodedUri(invoiceKey)}/application-parts`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetInvoiceApplicationPartCollectionType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Generate an e-invoice file for an invoice
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + invoiceKey - The ID or number of the invoice. For example, 2c92c8955bd63cc1015bd7c151af02ab or INV-0000001.
    resource isolated function put v1/invoices/[string invoiceKey]/einvoice/generate(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/invoices/${getEncodedUri(invoiceKey)}/einvoice/generate`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Email an invoice
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + invoiceKey - The ID or number of the invoice. For example, 2c92c8955bd63cc1015bd7c151af02ab or INV-0000001.
    resource isolated function post v1/invoices/[string invoiceKey]/emails(PostInvoiceEmailRequestType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/invoices/${getEncodedUri(invoiceKey)}/emails`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List all files of an invoice
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + pageSize - The number of records returned per page in the response.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + invoiceKey - The unique ID or number of an invoice. For example, 2c92c8955bd63cc1015bd7c151af02ab or INV00000001.
    resource isolated function get v1/invoices/[string invoiceKey]/files(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int pageSize = 20, int page = 1) returns GETInvoiceFilesResponse|error {
        string resourcePath = string `/v1/invoices/${getEncodedUri(invoiceKey)}/files`;
        map<anydata> queryParam = {"pageSize": pageSize, "page": page};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETInvoiceFilesResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Upload a file for an invoice
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + invoiceKey - The ID or number of the invoice that you want to upload a PDF file for. For example, 2c92c8955bd63cc1015bd7c151af02ab or INV00000001.
    resource isolated function post v1/invoices/[string invoiceKey]/files(InvoiceKey_files_body payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns POSTUploadFileResponse|error {
        string resourcePath = string `/v1/invoices/${getEncodedUri(invoiceKey)}/files`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        mime:Entity[] bodyParts = check createBodyParts(payload);
        request.setBodyParts(bodyParts);
        POSTUploadFileResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List all items of an invoice
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + pageSize - The number of records returned per page in the response.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + invoiceKey - The unique ID or number of an invoice. For example, 2c92c8955bd63cc1015bd7c151af02ab or INV00000001.
    resource isolated function get v1/invoices/[string invoiceKey]/items(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int pageSize = 20, int page = 1) returns GETInvoiceItemsResponse|error {
        string resourcePath = string `/v1/invoices/${getEncodedUri(invoiceKey)}/items`;
        map<anydata> queryParam = {"pageSize": pageSize, "page": page};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETInvoiceItemsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List all taxation items of an invoice item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + pageSize - The number of records returned per page in the response.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + invoiceKey - The unique ID or number of an invoice. For example, 2c92c8955bd63cc1015bd7c151af02ab or INV00000001.
    # + itemId - The unique ID of an invoice item. For example, 2c86c8955bd63cc1015bd7c151af02ef.
    resource isolated function get v1/invoices/[string invoiceKey]/items/[string itemId]/taxation\-items(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int pageSize = 20, int page = 1) returns GETInvoiceTaxationItemsResponse|error {
        string resourcePath = string `/v1/invoices/${getEncodedUri(invoiceKey)}/items/${getEncodedUri(itemId)}/taxation-items`;
        map<anydata> queryParam = {"pageSize": pageSize, "page": page};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETInvoiceTaxationItemsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Reverse an invoice
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + invoiceKey - The ID or number of the invoice. For example, 2c92c8955bd63cc1015bd7c151af02ab or INV-0000001.
    resource isolated function put v1/invoices/[string invoiceKey]/reverse(PutReverseInvoiceType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PutReverseInvoiceResponseType|error {
        string resourcePath = string `/v1/invoices/${getEncodedUri(invoiceKey)}/reverse`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PutReverseInvoiceResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Create taxation items for an invoice
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + invoiceKey - The unique ID or number of an invoice. For example, 8a8082e65b27f6c3015ba45ff82c7172 or INV00000001.
    resource isolated function post v1/invoices/[string invoiceKey]/taxationitems(POSTTaxationItemList payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETTaxationItemListType|error {
        string resourcePath = string `/v1/invoices/${getEncodedUri(invoiceKey)}/taxationitems`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETTaxationItemListType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Write off an invoice
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + invoiceKey - The ID or number of the invoice. For example, 2c92c8955bd63cc1015bd7c151af02ab or INV-0000001.
    resource isolated function put v1/invoices/[string invoiceKey]/write\-off(PUTWriteOffInvoiceRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PUTWriteOffInvoiceResponse|error {
        string resourcePath = string `/v1/invoices/${getEncodedUri(invoiceKey)}/write-off`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PUTWriteOffInvoiceResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # List credit memos
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + accountId - This parameter filters the response based on the `accountId` field.
    # + accountNumber - This parameter filters the response based on the `accountNumber` field.
    # + amount - This parameter filters the response based on the `amount` field. 
    # + appliedAmount - This parameter filters the response based on the `appliedAmount` field. 
    # + autoApplyUponPosting - This parameter filters the response based on the `autoApplyUponPosting` field. 
    # + createdById - This parameter filters the response based on the `createdById` field. 
    # + createdDate - This parameter filters the response based on the `createdDate` field. 
    # + creditMemoDate - This parameter filters the response based on the `creditMemoDate` field. 
    # + currency - This parameter filters the response based on the `currency` field. 
    # + excludeFromAutoApplyRules - This parameter filters the response based on the `excludeFromAutoApplyRules` field. 
    # + number - This parameter filters the response based on the `number` field. 
    # + referredInvoiceId - This parameter filters the response based on the `referredInvoiceId` field. 
    # + refundAmount - This parameter filters the response based on the `refundAmount` field. 
    # + status - This parameter filters the response based on the `status` field. 
    # + targetDate - This parameter filters the response based on the `targetDate` field. 
    # + taxAmount - This parameter filters the response based on the `taxAmount` field. 
    # + totalTaxExemptAmount - This parameter filters the response based on the `totalTaxExemptAmount` field.
    # + transferredToAccounting - This parameter filters the response based on the `transferredToAccounting` field. 
    # + unappliedAmount - This parameter filters the response based on the `unappliedAmount` field. 
    # + updatedById - This parameter filters the response based on the `updatedById` field. 
    # + updatedDate - This parameter filters the response based on the `updatedDate` field.
    # + sort - This parameter restricts the order of the data returned in the response. You can use this parameter to supply a dimension you want to sort on.
    # A sortable field uses the following form: 
    # *operator* *field_name*
    # You can use at most two sortable fields in one URL path. Use a comma to separate sortable fields. For example:  *operator* *field_name*, *operator* *field_name*  
    # *operator* is used to mark the order of sequencing. The operator is optional. If you only specify the sortable field without any operator, the response data is sorted in descending order by this field.
    # - The `-` operator indicates an ascending order.
    # - The `+` operator indicates a descending order.
    # By default, the response data is displayed in descending order by credit memo number.
    # *field_name* indicates the name of a sortable field. The supported sortable fields of this operation are as below:
    # - accountId
    # - amount
    # - appliedAmount
    # - createdById
    # - createdDate
    # - creditMemoDate
    # - number
    # - referredInvoiceId
    # - refundAmount
    # - status
    # - targetDate
    # - taxAmount
    # - totalTaxExemptAmount
    # - transferredToAccounting
    # - unappliedAmount
    # - updatedDate
    # Examples:
    # - /v1/creditmemos?sort=+number
    # - /v1/creditmemos?status=Processed&sort=-number,+amount
    resource isolated function get v1/creditmemos(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20, string? accountId = (), string? accountNumber = (), decimal? amount = (), decimal? appliedAmount = (), boolean? autoApplyUponPosting = (), string? createdById = (), string? createdDate = (), string? creditMemoDate = (), string? currency = (), boolean? excludeFromAutoApplyRules = (), string? number = (), string? referredInvoiceId = (), decimal? refundAmount = (), "Draft"|"Posted"|"Canceled"|"Error"|"PendingForTax"|"Generating"|"CancelInProgress"? status = (), string? targetDate = (), decimal? taxAmount = (), decimal? totalTaxExemptAmount = (), "Processing"|"Yes"|"No"|"Error"|"Ignore"? transferredToAccounting = (), decimal? unappliedAmount = (), string? updatedById = (), string? updatedDate = (), string? sort = ()) returns GETCreditMemoCollectionType|error {
        string resourcePath = string `/v1/creditmemos`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize, "accountId": accountId, "accountNumber": accountNumber, "amount": amount, "appliedAmount": appliedAmount, "autoApplyUponPosting": autoApplyUponPosting, "createdById": createdById, "createdDate": createdDate, "creditMemoDate": creditMemoDate, "currency": currency, "excludeFromAutoApplyRules": excludeFromAutoApplyRules, "number": number, "referredInvoiceId": referredInvoiceId, "refundAmount": refundAmount, "status": status, "targetDate": targetDate, "taxAmount": taxAmount, "totalTaxExemptAmount": totalTaxExemptAmount, "transferredToAccounting": transferredToAccounting, "unappliedAmount": unappliedAmount, "updatedById": updatedById, "updatedDate": updatedDate, "sort": sort};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETCreditMemoCollectionType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a credit memo from a charge
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following request fields:
    # * `charges` > `amount`
    # * `charges` > `memoItemAmount`
    # * `charges` > `chargeId`
    # * `charges` > `productRatePlanChargeId`            
    # * `charges` > `comment`
    # * `charges` > `description`
    # * `customRates` > `currency`
    # * `customRates` > `customFxRate` 
    # * `customRates` > `rateDate` 
    resource isolated function post v1/creditmemos(CreditMemoFromChargeRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns GETCreditMemoType|error {
        string resourcePath = string `/v1/creditmemos`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETCreditMemoType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Update credit memos
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control.
    resource isolated function put v1/creditmemos/bulk(PUTBulkCreditMemosRequestType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns BulkCreditMemosResponseType|error {
        string resourcePath = string `/v1/creditmemos/bulk`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        BulkCreditMemosResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Create credit memos
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control.
    resource isolated function post v1/creditmemos/bulk(POSTBulkCreditMemosRequestType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns BulkCreditMemosResponseType|error {
        string resourcePath = string `/v1/creditmemos/bulk`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        BulkCreditMemosResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve the PDF file generation status of credit memos
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + creditMemoKeys - The IDs or numbers of the credit memos separated by commas. For example - `?creditMemoKeys=2c92c8955bd63cc1015bd7c151af02ab,4b65b8605bd63cc1015bd7c151af02cd,CM0000001`.
    # + zuoraVersion - The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control.
    # + return - OK 
    resource isolated function get v1/creditmemos/pdf\-status(string creditMemoKeys, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraVersion = ()) returns GetCreditMemoPdfStatusBatchResponse|error {
        string resourcePath = string `/v1/creditmemos/pdf-status`;
        map<anydata> queryParam = {"creditMemoKeys": creditMemoKeys};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetCreditMemoPdfStatusBatchResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List all taxation items of a credit memo item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + pageSize - The number of records returned per page in the response.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + cmitemid - The unique ID of a credit memo item. You can get the credit memo item ID from the response of [List credit memo items](https://developer.zuora.com/api-references/api/operation/GET_CreditMemoItems).
    # + creditMemoId - The unique ID of a credit memo. For example, 8a8082e65b27f6c3015ba45ff82c7172.
    resource isolated function get v1/creditmemos/[string creditMemoId]/items/[string cmitemid]/taxation\-items(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int pageSize = 20, int page = 1) returns GETTaxationItemsOfCreditMemoItemType|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoId)}/items/${getEncodedUri(cmitemid)}/taxation-items`;
        map<anydata> queryParam = {"pageSize": pageSize, "page": page};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETTaxationItemsOfCreditMemoItemType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Write off a credit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + creditMemoId - The unique ID of a credit memo. For example, 8a8082e65b27f6c3015ba45ff82c7172.
    resource isolated function put v1/creditmemos/[string creditMemoId]/write\-off(PUTCreditMemoWriteOff payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PUTCreditMemoWriteOffResponseType|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoId)}/write-off`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PUTCreditMemoWriteOffResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a credit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + creditMemoKey - The unique ID or number of a credit memo. For example, 8a8082e65b27f6c3015ba45ff82c7172 or CM00000001.
    resource isolated function get v1/creditmemos/[string creditMemoKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETCreditMemoType|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETCreditMemoType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update a credit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + creditMemoKey - The unique ID or number of a credit memo. For example, 8a8082e65b27f6c3015ba45ff82c7172 or CM00000001.
    resource isolated function put v1/creditmemos/[string creditMemoKey](PUTCreditMemoType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETCreditMemoType|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETCreditMemoType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete a credit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + creditMemoKey - The unique ID or number of a credit memo. For example, 8a8082e65b27f6c3015ba45ff82c7172 or CM00000001.
    resource isolated function delete v1/creditmemos/[string creditMemoKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Apply a credit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + creditMemoKey - The unique ID or number of a credit memo. For example, 8a8082e65b27f6c3015ba45ff82c7172.
    resource isolated function put v1/creditmemos/[string creditMemoKey]/apply(ApplyCreditMemoType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETCreditMemoType|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}/apply`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETCreditMemoType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Cancel a credit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + creditMemoKey - The unique ID or number of a credit memo. For example, 8a8082e65b27f6c3015ba45ff82c7172 or CM00000001.
    resource isolated function put v1/creditmemos/[string creditMemoKey]/cancel(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETCreditMemoType|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}/cancel`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        GETCreditMemoType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Generate an e-invoice file for a credit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + creditMemoKey - The ID or number of the credit memo. For example, 2c92c8955bd63cc1015bd7c151af02ab or CM-0000001.
    resource isolated function put v1/creditmemos/[string creditMemoKey]/einvoice/generate(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}/einvoice/generate`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Email a credit memo
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + creditMemoKey - The ID or number of a posted credit memo. For example, 8a8082e65b27f6c3015ba45ff82c7172 or CM00000001.
    resource isolated function post v1/creditmemos/[string creditMemoKey]/emails(PostCreditMemoEmailRequestType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}/emails`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List all files of a credit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + pageSize - The number of records returned per page in the response.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + creditMemoKey - The unique ID or number of an credit memo. For example, 8a8082e65b27f6c3015ba45ff82c7172 or CM00000001.
    resource isolated function get v1/creditmemos/[string creditMemoKey]/files(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int pageSize = 20, int page = 1) returns GETCreditMemoFilesResponse|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}/files`;
        map<anydata> queryParam = {"pageSize": pageSize, "page": page};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETCreditMemoFilesResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Upload a file for a credit memo
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + creditMemoKey - The ID or number of the credit memo that you want to upload a PDF file for. For example, 402890555a7e9791015a879f064a0054 or CM00000001.
    resource isolated function post v1/creditmemos/[string creditMemoKey]/files(CreditMemoKey_files_body payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns POSTUploadFileResponse|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}/files`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        mime:Entity[] bodyParts = check createBodyParts(payload);
        request.setBodyParts(bodyParts);
        POSTUploadFileResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List credit memo items
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + creditMemoKey - The unique ID or number of a credit memo. For example, 8a8082e65b27f6c3015ba45ff82c7172 or CM00000001.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following response fields:
    # * `items` > `creditTaxItems`
    # * `items` > `taxationItems`
    # * `items` > `comment`
    # * `items` > `description`
    # + amount - This parameter filters the response based on the `amount` field. 
    # + appliedAmount - This parameter filters the response based on the `appliedAmount` field.
    # + createdById - This parameter filters the response based on the `createdById` field. 
    # + createdDate - This parameter filters the response based on the `createdDate` field. 
    # + id - This parameter filters the response based on the `id` field. 
    # + refundAmount - This parameter filters the response based on the `refundAmount` field. 
    # + serviceEndDate - This parameter filters the response based on the `serviceEndDate` field. 
    # + serviceStartDate - This parameter filters the response based on the `serviceStartDate` field. 
    # + sku - This parameter filters the response based on the `sku` field. 
    # + skuName - This parameter filters the response based on the `skuName` field. 
    # + sourceItemId - This parameter filters the response based on the `sourceItemId` field. 
    # + subscriptionId - This parameter filters the response based on the `subscriptionId` field.
    # + updatedById - This parameter filters the response based on the `updatedById` field. 
    # + updatedDate - This parameter filters the response based on the `updatedDate` field.
    # + sort - This parameter restricts the order of the data returned in the response. You can use this parameter to supply a dimension you want to sort on.
    # A sortable field uses the following form: 
    # *operator* *field_name*
    # You can use at most two sortable fields in one URL path. Use a comma to separate sortable fields. For example:  *operator* *field_name*, *operator* *field_name*  
    # *operator* is used to mark the order of sequencing. The operator is optional. If you only specify the sortable field without any operator, the response data is sorted in descending order by this field.
    # - The `-` operator indicates an ascending order.
    # - The `+` operator indicates a descending order.
    # By default, the response data is displayed in descending order by updated date.
    # *field_name* indicates the name of a sortable field. The supported sortable fields of this operation are as below:
    # - amount
    # - appliedAmount
    # - createdById
    # - createdDate
    # - id
    # - refundAmount
    # - serviceEndDate
    # - serviceStartDate
    # - sku
    # - skuName
    # - sourceItemId
    # - subscriptionId
    # - updatedById
    # - updatedDate
    # Examples:
    # - /v1/creditmemos/402890245c7ca371015c7cb40ac30015/items?sort=createdDate
    # - /v1/creditmemos/402890245c7ca371015c7cb40ac30015/items?amount=100&sort=createdDate
    resource isolated function get v1/creditmemos/[string creditMemoKey]/items(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20, string? zuoraVersion = (), decimal? amount = (), decimal? appliedAmount = (), string? createdById = (), string? createdDate = (), string? id = (), decimal? refundAmount = (), string? serviceEndDate = (), string? serviceStartDate = (), string? sku = (), string? skuName = (), string? sourceItemId = (), string? subscriptionId = (), string? updatedById = (), string? updatedDate = (), string? sort = ()) returns GETCreditMemoItemsListType|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}/items`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize, "amount": amount, "appliedAmount": appliedAmount, "createdById": createdById, "createdDate": createdDate, "id": id, "refundAmount": refundAmount, "serviceEndDate": serviceEndDate, "serviceStartDate": serviceStartDate, "sku": sku, "skuName": skuName, "sourceItemId": sourceItemId, "subscriptionId": subscriptionId, "updatedById": updatedById, "updatedDate": updatedDate, "sort": sort};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETCreditMemoItemsListType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a credit memo item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + cmitemid - The unique ID of a credit memo item. You can get the credit memo item ID from the response of [List credit memo items](https://developer.zuora.com/api-references/api/operation/GET_CreditMemoItems).
    # + creditMemoKey - The unique ID or number of a credit memo. For example, 8a8082e65b27f6c3015ba45ff82c7172 or CM00000001.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following response fields:
    # * `creditTaxItems`
    # * `taxationItems`
    # * `comment`
    # * `description`
    resource isolated function get v1/creditmemos/[string creditMemoKey]/items/[string cmitemid](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns GETCreditMemoItemType|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}/items/${getEncodedUri(cmitemid)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETCreditMemoItemType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List all parts of a credit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + creditMemoKey - The unique ID or number of a credit memo. For example, 8a8082e65b27f6c3015ba45ff82c7172.
    resource isolated function get v1/creditmemos/[string creditMemoKey]/parts(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20) returns GETCreditMemoPartsCollectionType|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}/parts`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETCreditMemoPartsCollectionType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a credit memo part
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + partid - The unique ID of a specific credit memo part. You can get the credit memo part ID from the response of [List all parts of a credit memo](https://developer.zuora.com/api-references/api/operation/GET_CreditMemoParts).
    # + creditMemoKey - The unique ID or number of a credit memo. For example, 8a8082e65b27f6c3015ba45ff82c7172.
    resource isolated function get v1/creditmemos/[string creditMemoKey]/parts/[string partid](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETCreditMemoPartType|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}/parts/${getEncodedUri(partid)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETCreditMemoPartType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Generate a credit memo PDF file
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + creditMemoKey - The unique ID or number of the credit memo that you want to create a PDF file for. For example, 8a8082e65b27f6c3015ba45ff82c7172 or CM00000001.
    resource isolated function post v1/creditmemos/[string creditMemoKey]/pdfs(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTMemoPdfResponse|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}/pdfs`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        POSTMemoPdfResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Post a credit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + creditMemoKey - The unique ID or number of a credit memo. For example, 8a8082e65b27f6c3015ba45ff82c7172 or CM00000001.
    resource isolated function put v1/creditmemos/[string creditMemoKey]/post(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETCreditMemoType|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}/post`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        GETCreditMemoType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Refund a credit memo
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + creditMemoKey - The ID or number of the credit memo. For example, 2c92c8955bd63cc1015bd7c151af02ab or CM00000001.
    resource isolated function post v1/creditmemos/[string creditMemoKey]/refunds(PostNonRefRefundType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETRefundCreditMemoType|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}/refunds`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETRefundCreditMemoType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Reverse a credit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + creditMemoKey - The ID or number of the credit memo. For example, 2c92c8955bd63cc1015bd7c151af02ab or CM00000001.
    resource isolated function put v1/creditmemos/[string creditMemoKey]/reverse(PutReverseCreditMemoType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PutReverseCreditMemoResponseType|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}/reverse`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PutReverseCreditMemoResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Create taxation items for a credit memo
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + creditMemoKey - The unique ID or number of a credit memo. For example, 8a8082e65b27f6c3015ba45ff82c7172 or CM00000001.
    resource isolated function post v1/creditmemos/[string creditMemoKey]/taxationitems(POSTTaxationItemListForCMType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETTaxationItemListType|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}/taxationitems`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETTaxationItemListType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Unapply a credit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + creditMemoKey - The unique ID or number of a credit memo. For example, 8a8082e65b27f6c3015ba45ff82c7172.
    resource isolated function put v1/creditmemos/[string creditMemoKey]/unapply(UnapplyCreditMemoType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETCreditMemoType|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}/unapply`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETCreditMemoType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Unpost a credit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + creditMemoKey - The unique ID or number of a credit memo. For example, 8a8082e65b27f6c3015ba45ff82c7172 or CM00000001.
    resource isolated function put v1/creditmemos/[string creditMemoKey]/unpost(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETCreditMemoType|error {
        string resourcePath = string `/v1/creditmemos/${getEncodedUri(creditMemoKey)}/unpost`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        GETCreditMemoType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Create a credit memo from an invoice
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following request fields:
    # * `items` > `comment`
    # * `items` > `description`
    # + invoiceKey - The ID or number of an invoice that you want to create a credit memo from. For example, 2c93808457d787030157e030d10f3f64 or INV00000001.
    resource isolated function post v1/invoices/[string invoiceKey]/creditmemos(CreditMemoFromInvoiceRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns GETCreditMemoType|error {
        string resourcePath = string `/v1/invoices/${getEncodedUri(invoiceKey)}/creditmemos`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETCreditMemoType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List debit memos
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + accountId - This parameter filters the response based on the `accountId` field.
    # + accountNumber - This parameter filters the response based on the `accountNumber` field.
    # + amount - This parameter filters the response based on the `amount` field.
    # + balance - This parameter filters the response based on the `balance` field.
    # + beAppliedAmount - This parameter filters the response based on the `beAppliedAmount` field.
    # + createdById - This parameter filters the response based on the `createdById` field.
    # + createdDate - This parameter filters the response based on the `createdDate` field.
    # + currency - This parameter filters the response based on the `currency` field.
    # + debitMemoDate - This parameter filters the response based on the `debitMemoDate` field.
    # + dueDate - This parameter filters the response based on the `dueDate` field.
    # + number - This parameter filters the response based on the `number` field.
    # + referredInvoiceId - This parameter filters the response based on the `referredInvoiceId` field.
    # + status - This parameter filters the response based on the `status` field.
    # + targetDate - This parameter filters the response based on the `targetDate` field.
    # + taxAmount - This parameter filters the response based on the `taxAmount` field.
    # + totalTaxExemptAmount - This parameter filters the response based on the `totalTaxExemptAmount` field.
    # + updatedById - This parameter filters the response based on the `updatedById` field.
    # + updatedDate - This parameter filters the response based on the `updatedDate` field.
    # + sort - This parameter restricts the order of the data returned in the response. You can use this parameter to supply a dimension you want to sort on.
    # A sortable field uses the following form: 
    # *operator* *field_name*
    # You can use at most two sortable fields in one URL path. Use a comma to separate sortable fields. For example:  *operator* *field_name*, *operator* *field_name*  
    # *operator* is used to mark the order of sequencing. The operator is optional. If you only specify the sortable field without any operator, the response data is sorted in descending order by this field.
    # - The `-` operator indicates an ascending order.
    # - The `+` operator indicates a descending order.
    # By default, the response data is displayed in descending order by debit memo number.
    # *field_name* indicates the name of a sortable field. The supported sortable fields of this operation are as below:
    # - number
    # - accountId
    # - debitMemoDate
    # - targetDate
    # - dueDate
    # - amount
    # - taxAmount
    # - totalTaxExemptAmount
    # - balance
    # - beAppliedAmount
    # - referredInvoiceId
    # - createdDate
    # - createdById
    # - updatedDate
    # - updatedById
    # Examples:
    # - /v1/debitmemos?sort=+number
    # - /v1/debitmemos?status=Processed&sort=-number,+amount
    resource isolated function get v1/debitmemos(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20, string? accountId = (), string? accountNumber = (), decimal? amount = (), decimal? balance = (), decimal? beAppliedAmount = (), string? createdById = (), string? createdDate = (), string? currency = (), string? debitMemoDate = (), string? dueDate = (), string? number = (), string? referredInvoiceId = (), "Draft"|"Posted"|"Canceled"|"Error"|"PendingForTax"|"Generating"|"CancelInProgress"? status = (), string? targetDate = (), decimal? taxAmount = (), decimal? totalTaxExemptAmount = (), string? updatedById = (), string? updatedDate = (), string? sort = ()) returns GETDebitMemoCollectionType|error {
        string resourcePath = string `/v1/debitmemos`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize, "accountId": accountId, "accountNumber": accountNumber, "amount": amount, "balance": balance, "beAppliedAmount": beAppliedAmount, "createdById": createdById, "createdDate": createdDate, "currency": currency, "debitMemoDate": debitMemoDate, "dueDate": dueDate, "number": number, "referredInvoiceId": referredInvoiceId, "status": status, "targetDate": targetDate, "taxAmount": taxAmount, "totalTaxExemptAmount": totalTaxExemptAmount, "updatedById": updatedById, "updatedDate": updatedDate, "sort": sort};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETDebitMemoCollectionType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update due dates for debit memos
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function put v1/debitmemos(PUTBatchDebitMemosRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/debitmemos`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Create a debit memo from a charge
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following request fields:
    # * `charges` > `amount`
    # * `charges` > `memoItemAmount`
    # * `charges` > `chargeId`
    # * `charges` > `productRatePlanChargeId`       
    # * `charges` > `comment`
    # * `charges` > `description`
    # * `customRates` > `currency`
    # * `customRates` > `customFxRate` 
    # * `customRates` > `rateDate`
    resource isolated function post v1/debitmemos(DebitMemoFromChargeRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns GETDebitMemoType|error {
        string resourcePath = string `/v1/debitmemos`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETDebitMemoType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Update debit memos
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control.
    resource isolated function put v1/debitmemos/bulk(PUTBulkDebitMemosRequestType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns BulkDebitMemosResponseType|error {
        string resourcePath = string `/v1/debitmemos/bulk`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        BulkDebitMemosResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Create debit memos
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control.
    resource isolated function post v1/debitmemos/bulk(POSTBulkDebitMemosRequestType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns BulkDebitMemosResponseType|error {
        string resourcePath = string `/v1/debitmemos/bulk`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        BulkDebitMemosResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve the PDF file generation status of debit memos
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + debitMemoKeys - The IDs or numbers of the debit memos separated by commas. For example - `?debitMemoKeys=2c92c8955bd63cc1015bd7c151af02ab,4b65b8605bd63cc1015bd7c151af02cd,DM0000001`.
    # + zuoraVersion - The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control.
    # + return - OK 
    resource isolated function get v1/debitmemos/pdf\-status(string debitMemoKeys, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraVersion = ()) returns GetDebitMemoPdfStatusBatchResponse|error {
        string resourcePath = string `/v1/debitmemos/pdf-status`;
        map<anydata> queryParam = {"debitMemoKeys": debitMemoKeys};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetDebitMemoPdfStatusBatchResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List all application parts of a debit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + debitMemoId - The unique ID of a debit memo. For example, 8a8082e65b27f6c3015ba419f3c2644e.
    # + return - OK 
    resource isolated function get v1/debitmemos/[string debitMemoId]/application\-parts(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetDebitMemoApplicationPartCollectionType|error {
        string resourcePath = string `/v1/debitmemos/${getEncodedUri(debitMemoId)}/application-parts`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetDebitMemoApplicationPartCollectionType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List all taxation items of a debit memo item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + pageSize - The number of records returned per page in the response.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + dmitemid - The unique ID of a debit memo item. You can get the debit memo item ID from the response of [List debit memo items](https://developer.zuora.com/api-references/api/operation/GET_DebitMemoItems).
    # + debitMemoId - The unique ID of a debit memo. For example, 8a8082e65b27f6c3015ba419f3c2644e.
    resource isolated function get v1/debitmemos/[string debitMemoId]/items/[string dmitemid]/taxation\-items(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int pageSize = 20, int page = 1) returns GETTaxationItemsOfDebitMemoItemType|error {
        string resourcePath = string `/v1/debitmemos/${getEncodedUri(debitMemoId)}/items/${getEncodedUri(dmitemid)}/taxation-items`;
        map<anydata> queryParam = {"pageSize": pageSize, "page": page};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETTaxationItemsOfDebitMemoItemType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a debit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + debitMemoKey - The unique ID or number of a debit memo. For example, 8a8082e65b27f6c3015ba419f3c2644e or DM00000001.
    resource isolated function get v1/debitmemos/[string debitMemoKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETDebitMemoType|error {
        string resourcePath = string `/v1/debitmemos/${getEncodedUri(debitMemoKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETDebitMemoType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update a debit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + debitMemoKey - The unique ID or number of a debit memo. For example, 8a8082e65b27f6c3015ba419f3c2644e or DM00000001.
    resource isolated function put v1/debitmemos/[string debitMemoKey](PUTDebitMemoType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETDebitMemoType|error {
        string resourcePath = string `/v1/debitmemos/${getEncodedUri(debitMemoKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETDebitMemoType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete a debit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + debitMemoKey - The unique ID or number of a debit memo. For example, 8a8082e65b27f6c3015ba419f3c2644e or DM00000003.
    resource isolated function delete v1/debitmemos/[string debitMemoKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/debitmemos/${getEncodedUri(debitMemoKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Cancel a debit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + debitMemoKey - The unique ID or number of a debit memo. For example, 8a8082e65b27f6c3015ba419f3c2644e or DM00000003.
    resource isolated function put v1/debitmemos/[string debitMemoKey]/cancel(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETDebitMemoType|error {
        string resourcePath = string `/v1/debitmemos/${getEncodedUri(debitMemoKey)}/cancel`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        GETDebitMemoType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Collect a posted debit memo
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + debitMemoKey - The ID or number of a posted debit memo. For example, 8a8082e65b27f6c3015ba419f3c2644e.
    resource isolated function post v1/debitmemos/[string debitMemoKey]/collect(DebitMemoCollectRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns DebitMemoCollectResponse|error {
        string resourcePath = string `/v1/debitmemos/${getEncodedUri(debitMemoKey)}/collect`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        DebitMemoCollectResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Generate an e-invoice file for a debit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + debitMemoKey - The ID or number of the debit memo. For example, 2c92c8955bd63cc1015bd7c151af02ab or DM-0000001.
    resource isolated function put v1/debitmemos/[string debitMemoKey]/einvoice/generate(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/debitmemos/${getEncodedUri(debitMemoKey)}/einvoice/generate`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Email a debit memo
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + debitMemoKey - The ID or number of a posted debit memo. For example, 8a8082e65b27f6c3015ba419f3c2644e or DM00000001.
    resource isolated function post v1/debitmemos/[string debitMemoKey]/emails(PostDebitMemoEmailType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/debitmemos/${getEncodedUri(debitMemoKey)}/emails`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List all files of a debit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + pageSize - The number of records returned per page in the response.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + debitMemoKey - The unique ID or number of an debit memo. For example, 8a8082e65b27f6c3015ba419f3c2644e or DM00000001.
    resource isolated function get v1/debitmemos/[string debitMemoKey]/files(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int pageSize = 20, int page = 1) returns GETDebitMemoFilesResponse|error {
        string resourcePath = string `/v1/debitmemos/${getEncodedUri(debitMemoKey)}/files`;
        map<anydata> queryParam = {"pageSize": pageSize, "page": page};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETDebitMemoFilesResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Upload a file for a debit memo
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + debitMemoKey - The ID or number of the debit memo that you want to upload a PDF file for. For example, 402890555a87d7f5015a8919e4fe002e or DM00000001.
    resource isolated function post v1/debitmemos/[string debitMemoKey]/files(DebitMemoKey_files_body payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns POSTUploadFileResponse|error {
        string resourcePath = string `/v1/debitmemos/${getEncodedUri(debitMemoKey)}/files`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        mime:Entity[] bodyParts = check createBodyParts(payload);
        request.setBodyParts(bodyParts);
        POSTUploadFileResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List debit memo items
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + debitMemoKey - The unique ID or number of a debit memo. For example, 8a8082e65b27f6c3015ba419f3c2644e or DM00000001.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following response fields:
    # * `items` > `taxItems`
    # * `items` > `taxationItems`
    # * `items` > `comment`
    # * `items` > `description`
    # + amount - This parameter filters the response based on the `amount` field.
    # + beAppliedAmount - This parameter filters the response based on the `beAppliedAmount` field.
    # + createdById - This parameter filters the response based on the `createdById` field.
    # + createdDate - This parameter filters the response based on the `createdDate` field.
    # + id - This parameter filters the response based on the `id` field.
    # + serviceEndDate - This parameter filters the response based on the `serviceEndDate` field.
    # + serviceStartDate - This parameter filters the response based on the `serviceStartDate` field.
    # + sku - This parameter filters the response based on the `sku` field.
    # + skuName - This parameter filters the response based on the `skuName` field.
    # + sourceItemId - This parameter filters the response based on the `sourceItemId` field.
    # + subscriptionId - This parameter filters the response based on the `subscriptionId` field.
    # + updatedById - This parameter filters the response based on the `updatedById` field.
    # + updatedDate - This parameter filters the response based on the `updatedDate` field.
    # + sort - This parameter restricts the order of the data returned in the response. You can use this parameter to supply a dimension you want to sort on.
    # A sortable field uses the following form: 
    # *operator* *field_name*
    # You can use at most two sortable fields in one URL path. Use a comma to separate sortable fields. For example:  *operator* *field_name*, *operator* *field_name*  
    # *operator* is used to mark the order of sequencing. The operator is optional. If you only specify the sortable field without any operator, the response data is sorted in descending order by this field.
    # - The `-` operator indicates an ascending order.
    # - The `+` operator indicates a descending order.
    # By default, the response data is displayed in descending order by updated date.
    # *field_name* indicates the name of a sortable field. The supported sortable fields of this operation are as below:
    # - id
    # - amount
    # - beAppliedAmount
    # - sku
    # - skuName
    # - serviceStartDate
    # - serviceEndDate
    # - sourceItemId
    # - createdDate
    # - createdById
    # - updatedDate
    # - updatedById
    # - subscriptionId
    # Examples:
    # - /v1/debitmemos/402890245c7ca371015c7cb40b28001f/items?sort=createdDate
    # - /v1/debitmemos/402890245c7ca371015c7cb40b28001f/items?amount=100&sort=createdDate
    resource isolated function get v1/debitmemos/[string debitMemoKey]/items(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20, string? zuoraVersion = (), decimal? amount = (), decimal? beAppliedAmount = (), string? createdById = (), string? createdDate = (), string? id = (), string? serviceEndDate = (), string? serviceStartDate = (), string? sku = (), string? skuName = (), string? sourceItemId = (), string? subscriptionId = (), string? updatedById = (), string? updatedDate = (), string? sort = ()) returns GETDebitMemoItemCollectionType|error {
        string resourcePath = string `/v1/debitmemos/${getEncodedUri(debitMemoKey)}/items`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize, "amount": amount, "beAppliedAmount": beAppliedAmount, "createdById": createdById, "createdDate": createdDate, "id": id, "serviceEndDate": serviceEndDate, "serviceStartDate": serviceStartDate, "sku": sku, "skuName": skuName, "sourceItemId": sourceItemId, "subscriptionId": subscriptionId, "updatedById": updatedById, "updatedDate": updatedDate, "sort": sort};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETDebitMemoItemCollectionType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a debit memo item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + dmitemid - The unique ID of a debit memo item. You can get the debit memo item ID from the response of [List debit memo items](https://developer.zuora.com/api-references/api/operation/GET_DebitMemoItems).
    # + debitMemoKey - The unique ID or number of a debit memo. For example, 8a8082e65b27f6c3015ba419f3c2644e or DM00000001.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following response fields:
    # * `taxItems`
    # * `taxationItems`
    # * `comment`
    # * `description`
    resource isolated function get v1/debitmemos/[string debitMemoKey]/items/[string dmitemid](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns GETDebitMemoItemType|error {
        string resourcePath = string `/v1/debitmemos/${getEncodedUri(debitMemoKey)}/items/${getEncodedUri(dmitemid)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETDebitMemoItemType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Generate a debit memo PDF file
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + debitMemoKey - The unique ID or number of the debit memo that you want to create a PDF file for. For example, 8a8082e65b27f6c3015ba419f3c2644e or DM00000001.
    resource isolated function post v1/debitmemos/[string debitMemoKey]/pdfs(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTMemoPdfResponse|error {
        string resourcePath = string `/v1/debitmemos/${getEncodedUri(debitMemoKey)}/pdfs`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        POSTMemoPdfResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Post a debit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + debitMemoKey - The unique ID or number of a debit memo. For example, 8a8082e65b27f6c3015ba419f3c2644e or DM00000001.
    resource isolated function put v1/debitmemos/[string debitMemoKey]/post(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETDebitMemoType|error {
        string resourcePath = string `/v1/debitmemos/${getEncodedUri(debitMemoKey)}/post`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        GETDebitMemoType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Create taxation items for a debit memo
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + debitMemoKey - The unique ID or number of a debit memo. For example, 8a8082e65b27f6c3015ba419f3c2644e or DM00000001.
    resource isolated function post v1/debitmemos/[string debitMemoKey]/taxationitems(POSTTaxationItemListForDMType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETTaxationItemListType|error {
        string resourcePath = string `/v1/debitmemos/${getEncodedUri(debitMemoKey)}/taxationitems`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETTaxationItemListType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Unpost a debit memo
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + debitMemoKey - The unique ID or number of a debit memo. For example, 8a8082e65b27f6c3015ba419f3c2644e or DM00000001.
    resource isolated function put v1/debitmemos/[string debitMemoKey]/unpost(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETDebitMemoType|error {
        string resourcePath = string `/v1/debitmemos/${getEncodedUri(debitMemoKey)}/unpost`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        GETDebitMemoType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Create a debit memo from an invoice
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + invoiceKey - The ID or number of an invoice that you want to create a debit memo from. For example, 2c93808457d787030157e030d10f3f64 or INV00000001.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following request fields:
    # * `items` > `comment`
    # * `items` > `description`
    resource isolated function post v1/invoices/[string invoiceKey]/debitmemos(DebitMemoFromInvoiceRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns GETDebitMemoType|error {
        string resourcePath = string `/v1/invoices/${getEncodedUri(invoiceKey)}/debitmemos`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETDebitMemoType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List e-invoicing service providers
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function get v1/einvoice/service\-providers(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns ListEInvoicingServiceProvidersResponse|error {
        string resourcePath = string `/v1/einvoice/service-providers`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ListEInvoicingServiceProvidersResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create an e-invoicing service provider
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/einvoice/service\-providers(CreateEInvoicingServiceProviderRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetEInvoicingServiceProviderResponse|error {
        string resourcePath = string `/v1/einvoice/service-providers`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GetEInvoicingServiceProviderResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve an e-invoicing service provider
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + 'key - The unique ID or number of the e-invoicing service provider that you want to retrieve information about.
    resource isolated function get v1/einvoice/service\-providers/[string 'key](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetEInvoicingServiceProviderResponse|error {
        string resourcePath = string `/v1/einvoice/service-providers/${getEncodedUri('key)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetEInvoicingServiceProviderResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update an e-invoicing service provider
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + 'key - The unique ID or number of the e-invoicing service provider that you want to update.
    resource isolated function put v1/einvoice/service\-providers/[string 'key](UpdateEInvoicingServiceProviderRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetEInvoicingServiceProviderResponse|error {
        string resourcePath = string `/v1/einvoice/service-providers/${getEncodedUri('key)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GetEInvoicingServiceProviderResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete an e-invoicing service provider
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + 'key - The unique ID or number of the e-invoicing service provider that you want to 
    resource isolated function delete v1/einvoice/service\-providers/[string 'key](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/einvoice/service-providers/${getEncodedUri('key)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # List e-invoicing business regions
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function get v1/einvoice/business\-regions(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns ListEInvoicingBusinessRegionsResponse|error {
        string resourcePath = string `/v1/einvoice/business-regions`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ListEInvoicingBusinessRegionsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create an e-invoicing business region
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/einvoice/business\-regions(CreateEInvoicingBusinessRegionRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetEInvoicingBusinessRegionResponse|error {
        string resourcePath = string `/v1/einvoice/business-regions`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GetEInvoicingBusinessRegionResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve an e-invoicing business region
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + 'key - The unqiue ID or number of the e-invoicing business region that you want to retrieve information about.
    resource isolated function get v1/einvoice/business\-regions/[string 'key](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetEInvoicingBusinessRegionResponse|error {
        string resourcePath = string `/v1/einvoice/business-regions/${getEncodedUri('key)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetEInvoicingBusinessRegionResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update an e-invoicing business region
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + 'key - The unqiue ID or number of the e-invoicing business region that you want to update.
    resource isolated function put v1/einvoice/business\-regions/[string 'key](UpdateEInvoicingBusinessRegionRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetEInvoicingBusinessRegionResponse|error {
        string resourcePath = string `/v1/einvoice/business-regions/${getEncodedUri('key)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GetEInvoicingBusinessRegionResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete an e-invoicing business region
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + 'key - The unqiue ID or number of the e-invoicing business region that you want to delete.
    resource isolated function delete v1/einvoice/business\-regions/[string 'key](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/einvoice/business-regions/${getEncodedUri('key)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # List e-invoice file templates
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + country - The short name of a country or region where you must comply with e-invoicing requirements. For example, `IN` for India. For the full list of country names and codes, see <a href="https://knowledgecenter.zuora.com/Quick_References/Country%2C_State%2C_and_Province_Codes/A_Manage_countries_and_regions#View_countries_or_regions" target="_blank">View countries or regions</a>.
    # + documentType - The type of billing documents for which the e-invoice file template is intended.
    # + provider - The name of the e-invoicing service provider that assists in generating e-invoice files. 
    resource isolated function get v1/einvoice/templates(string country, "Invoice"|"CreditMemo"|"DebitMemo" documentType, string provider, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns ListEInvoiceFileTemplatesResponse|error {
        string resourcePath = string `/v1/einvoice/templates`;
        map<anydata> queryParam = {"country": country, "documentType": documentType, "provider": provider};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ListEInvoiceFileTemplatesResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create an e-invoice file template
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/einvoice/templates(CreateEInvoiceFileTemplateRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetEInvoiceFileTemplateResponse|error {
        string resourcePath = string `/v1/einvoice/templates`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GetEInvoiceFileTemplateResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve an e-invoice file template
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + 'key - The unique number or ID of the e-invoice file template that you want to retrieve information about.
    resource isolated function get v1/einvoice/templates/[string 'key](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetEInvoiceFileTemplateResponse|error {
        string resourcePath = string `/v1/einvoice/templates/${getEncodedUri('key)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetEInvoiceFileTemplateResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update an e-invoice file template
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + 'key - The unique number or ID of the e-invoice file template that you want to update.
    resource isolated function put v1/einvoice/templates/[string 'key](UpdateEInvoiceFileTemplateRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetEInvoiceFileTemplateResponse|error {
        string resourcePath = string `/v1/einvoice/templates/${getEncodedUri('key)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GetEInvoiceFileTemplateResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete an e-invoice file template
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + 'key - The unique ID or number of the e-invoice file template that you want to delete.
    resource isolated function delete v1/einvoice/templates/[string 'key](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/einvoice/templates/${getEncodedUri('key)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Create an invoice schedule
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/invoice\-schedules(POSTCreateInvoiceScheduleRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns InvoiceScheduleResponses|error {
        string resourcePath = string `/v1/invoice-schedules`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        InvoiceScheduleResponses response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve an invoice schedule
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + scheduleKey - The unique ID or number of the invoice schedule to be retrieved. For example, 2c92c8955bd63cc1015bd7c151af02ab or IS-0000001.
    resource isolated function get v1/invoice\-schedules/[string scheduleKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20) returns InvoiceScheduleResponses|error {
        string resourcePath = string `/v1/invoice-schedules/${getEncodedUri(scheduleKey)}`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        InvoiceScheduleResponses response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update an invoice schedule
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + scheduleKey - The unique ID or number of the invoice schedule to be updated. For example, 2c92c8955bd63cc1015bd7c151af02ab or IS-0000001.
    resource isolated function put v1/invoice\-schedules/[string scheduleKey](PUTUpdateInvoiceScheduleRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns InvoiceScheduleResponses|error {
        string resourcePath = string `/v1/invoice-schedules/${getEncodedUri(scheduleKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        InvoiceScheduleResponses response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete an invoice schedule
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + scheduleKey - The unique ID or number of the invoice schedule to be deleted. For example, 2c92c8955bd63cc1015bd7c151af02ab or IS-0000001.
    resource isolated function delete v1/invoice\-schedules/[string scheduleKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/invoice-schedules/${getEncodedUri(scheduleKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Execute an invoice schedule
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + scheduleKey - The unique ID or number of the schedule to be executed. For example, 2c92c8955bd63cc1015bd7c151af02ab or IS-0000001.
    resource isolated function post v1/invoice\-schedules/[string scheduleKey]/execute(POSTExecuteInvoiceScheduleRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns ExecuteInvoiceScheduleBillRunResponse|error {
        string resourcePath = string `/v1/invoice-schedules/${getEncodedUri(scheduleKey)}/execute`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        ExecuteInvoiceScheduleBillRunResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Pause an invoice schedule
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + scheduleKey - The unique ID or number of the schedule to be paused. For example, 2c92c8955bd63cc1015bd7c151af02ab or IS-0000001.
    resource isolated function put v1/invoice\-schedules/[string scheduleKey]/pause(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns InvoiceScheduleResponses|error {
        string resourcePath = string `/v1/invoice-schedules/${getEncodedUri(scheduleKey)}/pause`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        InvoiceScheduleResponses response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Resume an invoice schedule
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + scheduleKey - The unique ID or number of the schedule to be resumed. For example, 2c92c8955bd63cc1015bd7c151af02ab or IS-0000001.
    resource isolated function put v1/invoice\-schedules/[string scheduleKey]/resume(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns InvoiceScheduleResponses|error {
        string resourcePath = string `/v1/invoice-schedules/${getEncodedUri(scheduleKey)}/resume`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        InvoiceScheduleResponses response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # CRUD: Create a taxation item
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + rejectUnknownFields - Specifies whether the call fails if the request body contains unknown fields.
    # With `rejectUnknownFields` set to `true`, Zuora returns a 400 response if
    # the request body contains unknown fields. The body of the 400 response is:
    # ```json
    # {
    #     "message": "Error - unrecognised fields"
    # }
    # ```
    # By default, Zuora ignores unknown fields in the request body.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    resource isolated function post v1/'object/taxation\-item(ProxyCreateTaxationItem payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), boolean rejectUnknownFields = false, string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns ProxyCreateOrModifyResponse|error {
        string resourcePath = string `/v1/object/taxation-item`;
        map<anydata> queryParam = {"rejectUnknownFields": rejectUnknownFields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        ProxyCreateOrModifyResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a taxation item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + id - The unique ID of a taxation item.
    resource isolated function get v1/taxationitems/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETTaxationItemType|error {
        string resourcePath = string `/v1/taxationitems/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETTaxationItemType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update a taxation item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + id - The unique ID of a taxation item.
    resource isolated function put v1/taxationitems/[string id](PUTTaxationItemType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETTaxationItemType|error {
        string resourcePath = string `/v1/taxationitems/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETTaxationItemType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete a taxation item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + id - The unique ID of a taxation item.
    resource isolated function delete v1/taxationitems/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/taxationitems/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # List sequence sets
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + pageSize - The number of records returned per page in the response.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + name - The name of a specific sequence set.
    resource isolated function get v1/sequence\-sets(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), int pageSize = 20, int page = 1, string? name = ()) returns GETSequenceSetsResponse|error {
        string resourcePath = string `/v1/sequence-sets`;
        map<anydata> queryParam = {"pageSize": pageSize, "page": page, "name": name};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETSequenceSetsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create sequence sets
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    resource isolated function post v1/sequence\-sets(POSTSequenceSetsRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns POSTSequenceSetsResponse|error {
        string resourcePath = string `/v1/sequence-sets`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTSequenceSetsResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a sequence set
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + id - The ID of the sequence set to retrieve information about.
    resource isolated function get v1/sequence\-sets/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns GETSequenceSetResponse|error {
        string resourcePath = string `/v1/sequence-sets/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETSequenceSetResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update a sequence set
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + id - The ID of the sequence set to update.
    resource isolated function put v1/sequence\-sets/[string id](PUTSequenceSetRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns PUTSequenceSetResponse|error {
        string resourcePath = string `/v1/sequence-sets/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PUTSequenceSetResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete a sequence set
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + id - The ID of the sequence set to delete.
    resource isolated function delete v1/sequence\-sets/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/sequence-sets/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Generate a billing preview
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/operations/billing\-preview(PostBillingPreviewParam payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns BillingPreviewResult|error {
        string resourcePath = string `/v1/operations/billing-preview`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        BillingPreviewResult response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Invoice and collect
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. 
    # You need to set this parameter if you use the following fields:
    # * documentDate
    # * targetDate            
    # If you have the Invoice Settlement feature enabled, you need to specify this parameter. Otherwise, an error is returned.
    # See [Zuora REST API Versions](https://developer.zuora.com/api-references/api/overview/#section/API-Versions) for more information.
    resource isolated function post v1/operations/invoice\-collect(POSTInvoiceCollectType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns POSTInvoiceCollectResponseType|error {
        string resourcePath = string `/v1/operations/invoice-collect`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTInvoiceCollectResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve an operation job
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + jobId - The ID of the operation job to retrieve information about. For example, 2c92c8955bd63cc1015bd7c151af02ab.
    # + return - OK 
    resource isolated function get v1/operations/jobs/[string jobId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetOperationJobResponseType|error {
        string resourcePath = string `/v1/operations/jobs/${getEncodedUri(jobId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetOperationJobResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Export bulk PDF files
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    resource isolated function post v1/operations/bulk\-pdf(POSTBulkPdfGenerationJobRequestType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = ()) returns POSTBulkPdfGenerationJobResponseType|error {
        string resourcePath = string `/v1/operations/bulk-pdf`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTBulkPdfGenerationJobResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve information of a bulk PDF file generation job
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + jobId - The ID of the job for which information needs to be retrieved. For example, 2c92c8955bd63cc1015bd7c151af02ab
    # + return - OK 
    resource isolated function get v1/operations/bulk\-pdf/[string jobId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = ()) returns GETBulkpdfGenerationJobResponseType|error {
        string resourcePath = string `/v1/operations/bulk-pdf/${getEncodedUri(jobId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETBulkpdfGenerationJobResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a bill run
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/bill\-runs(POSTCreateBillRunRequestType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetBillRunResponseType|error {
        string resourcePath = string `/v1/bill-runs`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GetBillRunResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a bill run
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + billRunId - The unique ID of a bill run.
    resource isolated function get v1/bill\-runs/[string billRunId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetBillRunResponseType|error {
        string resourcePath = string `/v1/bill-runs/${getEncodedUri(billRunId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetBillRunResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Delete a bill run
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + billRunId - The unique ID of a bill run.
    resource isolated function delete v1/bill\-runs/[string billRunId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetBillRunResponseType|error {
        string resourcePath = string `/v1/bill-runs/${getEncodedUri(billRunId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetBillRunResponseType response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Cancel a bill run
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + billRunId - The unique ID of a bill run.
    resource isolated function put v1/bill\-runs/[string billRunId]/cancel(BillRunId_cancel_body payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CancelBillRunResponseType|error {
        string resourcePath = string `/v1/bill-runs/${getEncodedUri(billRunId)}/cancel`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CancelBillRunResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Post a bill run
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + billRunId - The unique ID of a bill run.
    resource isolated function put v1/bill\-runs/[string billRunId]/post(BillRunId_post_body payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GetBillRunResponseType|error {
        string resourcePath = string `/v1/bill-runs/${getEncodedUri(billRunId)}/post`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GetBillRunResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Email billing documents generated from a bill run
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + billRunKey - The ID or number of the bill run. For example, 2c92c8f95d0c886e015d11287a8f0f8b or BR-00000001.
    resource isolated function post v1/bill\-runs/[string billRunKey]/emails(POSTEmailBillingDocfromBillRunType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/bill-runs/${getEncodedUri(billRunKey)}/emails`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Create a billing preview run
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following request fields:
    # * `batch`
    # * `batches`        
    resource isolated function post v1/billing\-preview\-runs(PostBillingPreviewRunParam payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns Inline_response_200_1|error {
        string resourcePath = string `/v1/billing-preview-runs`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        Inline_response_200_1 response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a billing preview run
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion -
    # The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following request fields:
    # * `batch`
    # * `batches`
    # + billingPreviewRunId - Id of the billing preview run.
    resource isolated function get v1/billing\-preview\-runs/[string billingPreviewRunId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns GetBillingPreviewRunResponse|error {
        string resourcePath = string `/v1/billing-preview-runs/${getEncodedUri(billingPreviewRunId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetBillingPreviewRunResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a payment method
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/payment\-methods(POSTPaymentMethodRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTPaymentMethodResponse|error {
        string resourcePath = string `/v1/payment-methods`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTPaymentMethodResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Create an Apple Pay payment method
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/payment\-methods/decryption(POSTPaymentMethodDecryption payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTPaymentMethodResponseDecryption|error {
        string resourcePath = string `/v1/payment-methods/decryption`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTPaymentMethodResponseDecryption response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a payment method
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentMethodId - Unique ID of the payment method to update.
    resource isolated function get v1/payment\-methods/[string paymentMethodId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETPaymentMethodResponse|error {
        string resourcePath = string `/v1/payment-methods/${getEncodedUri(paymentMethodId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETPaymentMethodResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update a payment method
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentMethodId - Unique ID of the payment method to update.
    resource isolated function put v1/payment\-methods/[string paymentMethodId](PUTPaymentMethodRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PUTPaymentMethodResponse|error {
        string resourcePath = string `/v1/payment-methods/${getEncodedUri(paymentMethodId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PUTPaymentMethodResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete a payment method
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentMethodId - Unique identifier of a payment method. (Since this ID is unique, and linked to a customer account in the system, no customer identifier is needed.)
    resource isolated function delete v1/payment\-methods/[string paymentMethodId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/payment-methods/${getEncodedUri(paymentMethodId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Verify a payment method
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + paymentMethodId - The ID of the payment method to be verified.
    resource isolated function put v1/payment\-methods/[string paymentMethodId]/verify(PUTVerifyPaymentMethodType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = ()) returns PUTVerifyPaymentMethodResponseType|error {
        string resourcePath = string `/v1/payment-methods/${getEncodedUri(paymentMethodId)}/verify`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PUTVerifyPaymentMethodResponseType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Scrub a payment method
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentMethodId - The ID of the payment method where you want to scrub the sensitive data.
    resource isolated function put v1/payment\-methods/[string paymentMethodId]/scrub(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/payment-methods/${getEncodedUri(paymentMethodId)}/scrub`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # List stored credential profiles of a payment method
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentMethodId - ID of a payment method.
    # + includeAll - Specifies whether to retrieve all the stored credential profiles within the payment method.
    # By default, Zuora returns only the stored credential profiles with `Agreed` or `Active` status. If you set this parameter to `true`, Zuora returns all the stored credential profiles.
    resource isolated function get v1/payment\-methods/[string paymentMethodId]/profiles(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), boolean includeAll = false) returns GetStoredCredentialProfilesResponse|error {
        string resourcePath = string `/v1/payment-methods/${getEncodedUri(paymentMethodId)}/profiles`;
        map<anydata> queryParam = {"includeAll": includeAll};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetStoredCredentialProfilesResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a stored credential profile
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentMethodId - ID of a payment method.
    resource isolated function post v1/payment\-methods/[string paymentMethodId]/profiles(CreateStoredCredentialProfileRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns ModifiedStoredCredentialProfileResponse|error {
        string resourcePath = string `/v1/payment-methods/${getEncodedUri(paymentMethodId)}/profiles`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        ModifiedStoredCredentialProfileResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Cancel a stored credential profile
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentMethodId - ID of a payment method.
    # + profileNumber - Number that identifies a stored credential profile within the payment method.
    resource isolated function post v1/payment\-methods/[string paymentMethodId]/profiles/[int profileNumber]/cancel(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns ModifiedStoredCredentialProfileResponse|error {
        string resourcePath = string `/v1/payment-methods/${getEncodedUri(paymentMethodId)}/profiles/${getEncodedUri(profileNumber)}/cancel`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        ModifiedStoredCredentialProfileResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Expire a stored credential profile
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentMethodId - ID of a payment method.
    # + profileNumber - Number that identifies a stored credential profile within the payment method.
    resource isolated function post v1/payment\-methods/[string paymentMethodId]/profiles/[int profileNumber]/expire(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns ModifiedStoredCredentialProfileResponse|error {
        string resourcePath = string `/v1/payment-methods/${getEncodedUri(paymentMethodId)}/profiles/${getEncodedUri(profileNumber)}/expire`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        ModifiedStoredCredentialProfileResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List registered Apple Pay domains
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + domainName - Specifies a domain name such as `zuora.com` and the registered domains containing the specified domain name will be returned. 
    # For example, `test1.zuora.com` and `test2.zuora.com` are two registered domains, but `zuora.com` is not registered. If you specify `zuora.com` in this query field, the data of `test1.zuora.com` and `test2.zuora.com` will be returned.
    resource isolated function get payment\-methods/apple\-pay/domains(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? domainName = ()) returns GETListApplePayDomainsResponse|error {
        string resourcePath = string `/payment-methods/apple-pay/domains`;
        map<anydata> queryParam = {"domainName": domainName};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETListApplePayDomainsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Register an Apple Pay domain
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post payment\-methods/apple\-pay/domains(POSTRegisterApplePayDomainRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTRegisterApplePayDomainResponse|error {
        string resourcePath = string `/payment-methods/apple-pay/domains`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTRegisterApplePayDomainResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Unregister an Apple Pay domain
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + id - The ID of the domain, such as `402881a38924ff1001892502da090021`.
    resource isolated function delete payment\-methods/apple\-pay/domains/[string id](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns DELETEUnresigerApplePayDomainResponse|error {
        string resourcePath = string `/payment-methods/apple-pay/domains/${getEncodedUri(id)}`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        DELETEUnresigerApplePayDomainResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Create a payment session
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post web\-payments/sessions(POSTCreatePaymentSessionRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTCreatePaymentSessionResponse|error {
        string resourcePath = string `/web-payments/sessions`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTCreatePaymentSessionResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # CRUD: Retrieve a payment method snapshot
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + fields - Object fields to return
    # + id - Object id
    resource isolated function get v1/'object/payment\-method\-snapshot/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string? fields = ()) returns ProxyGetPaymentMethodSnapshot|error {
        string resourcePath = string `/v1/object/payment-method-snapshot/${getEncodedUri(id)}`;
        map<anydata> queryParam = {"fields": fields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ProxyGetPaymentMethodSnapshot response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # CRUD: Retrieve a payment method transaction log
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + fields - Object fields to return
    # + id - Object id
    resource isolated function get v1/'object/payment\-method\-transaction\-log/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string? fields = ()) returns ProxyGetPaymentMethodTransactionLog|error {
        string resourcePath = string `/v1/object/payment-method-transaction-log/${getEncodedUri(id)}`;
        map<anydata> queryParam = {"fields": fields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ProxyGetPaymentMethodTransactionLog response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List Payment Method Updater instances
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function get v1/payment\-method\-updaters(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETPaymentMethodUpdaterInstancesResponse|error {
        string resourcePath = string `/v1/payment-method-updaters`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETPaymentMethodUpdaterInstancesResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a Payment Method Updater batch asynchronously
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/payment\-method\-updaters/batches(POSTPaymentMethodUpdaterBatchRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTPaymentMethodUpdaterResponse|error {
        string resourcePath = string `/v1/payment-method-updaters/batches`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTPaymentMethodUpdaterResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Generate an RSA signature
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/rsa\-signatures(POSTRSASignatureType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTRSASignatureResponseType|error {
        string resourcePath = string `/v1/rsa-signatures`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTRSASignatureResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Decrypt an RSA signature
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/rsa\-signatures/decrypt(POSTDecryptionType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTDecryptResponseType|error {
        string resourcePath = string `/v1/rsa-signatures/decrypt`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTDecryptResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List hosted pages
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + versionNumber - Version of the Payment Pages for which you want to retrieve the configuration information. Specify 2 for Payment Pages 2.0.
    resource isolated function get v1/hostedpages(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? versionNumber = ()) returns GetHostedPagesType|error {
        string resourcePath = string `/v1/hostedpages`;
        map<anydata> queryParam = {"versionNumber": versionNumber};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetHostedPagesType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a draft custom payment method type
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post open\-payment\-method\-types(string authorization, POSTCreateOpenPaymentMethodTypeRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTCreateOpenPaymentMethodTypeResponse|error {
        string resourcePath = string `/open-payment-method-types`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTCreateOpenPaymentMethodTypeResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Publish a custom payment method type
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentMethodTypeName - The API name of the custom payment method type, such as `AmazonPay__c_12368`.
    resource isolated function put open\-payment\-method\-types/publish/[string paymentMethodTypeName](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PUTPublishOpenPaymentMethodTypeResponse|error {
        string resourcePath = string `/open-payment-method-types/publish/${getEncodedUri(paymentMethodTypeName)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        PUTPublishOpenPaymentMethodTypeResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Update a custom payment method type
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentMethodTypeName - The API name of the custom payment method type, such as `AmazonPay__c_12368`.
    resource isolated function put open\-payment\-method\-types/[string paymentMethodTypeName](string authorization, PUTUpdateOpenPaymentMethodTypeRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns PUTUpdateOpenPaymentMethodTypeResponse|error {
        string resourcePath = string `/open-payment-method-types/${getEncodedUri(paymentMethodTypeName)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PUTUpdateOpenPaymentMethodTypeResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a specific draft revision of a custom payment method type
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentMethodTypeName - The API name of the custom payment method type, such as `AmazonPay__c_12368`.
    # + revisionNumber - The revision number of the draft revision to be retrieved.
    resource isolated function get open\-payment\-method\-types/[string paymentMethodTypeName]/draft/[int revisionNumber](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETOpenPaymentMethodTypeRevisionResponse|error {
        string resourcePath = string `/open-payment-method-types/${getEncodedUri(paymentMethodTypeName)}/draft/${getEncodedUri(revisionNumber)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETOpenPaymentMethodTypeRevisionResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a published custom payment method type
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentMethodTypeName - The API name of the custom payment method type, such as `AmazonPay__c_12368`.
    resource isolated function get open\-payment\-method\-types/[string paymentMethodTypeName]/published(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETOpenPaymentMethodTypeRevisionResponse|error {
        string resourcePath = string `/open-payment-method-types/${getEncodedUri(paymentMethodTypeName)}/published`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETOpenPaymentMethodTypeRevisionResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create authorization
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentMethodId - The unique ID of the payment method where the authorization is created.
    resource isolated function post v1/payment\-methods/[string paymentMethodId]/authorize(POSTDelayAuthorizeCapture payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTAuthorizeResponse|error {
        string resourcePath = string `/v1/payment-methods/${getEncodedUri(paymentMethodId)}/authorize`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTAuthorizeResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Cancel authorization
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentMethodId - The unique ID of the payment method where the authorization is cancelled.
    resource isolated function post v1/payment\-methods/[string paymentMethodId]/voidAuthorize(POSTVoidAuthorize payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTVoidAuthorizeResponse|error {
        string resourcePath = string `/v1/payment-methods/${getEncodedUri(paymentMethodId)}/voidAuthorize`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTVoidAuthorizeResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List all payment gateways
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function get v1/paymentgateways(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETPaymentGatwaysResponse|error {
        string resourcePath = string `/v1/paymentgateways`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETPaymentGatwaysResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Reverse a payment
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentKey - The payment number starting with "P-" or the unique payment ID.
    resource isolated function post v1/gateway\-settlement/payments/[string paymentKey]/chargeback(POSTReversePaymentRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTReversePaymentResponse|error {
        string resourcePath = string `/v1/gateway-settlement/payments/${getEncodedUri(paymentKey)}/chargeback`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTReversePaymentResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Reject a payment
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentKey - The payment number starting with "P-" or the unique payment ID.
    resource isolated function post v1/gateway\-settlement/payments/[string paymentKey]/reject(POSTRejectPaymentRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTRejectPaymentResponse|error {
        string resourcePath = string `/v1/gateway-settlement/payments/${getEncodedUri(paymentKey)}/reject`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTRejectPaymentResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Settle a payment
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentKey - The payment number starting with "P-" or the unique payment ID.
    resource isolated function post v1/gateway\-settlement/payments/[string paymentKey]/settle(POSTSettlePaymentRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTSettlePaymentResponse|error {
        string resourcePath = string `/v1/gateway-settlement/payments/${getEncodedUri(paymentKey)}/settle`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTSettlePaymentResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Reconcile a refund
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + refundKey - The refund number starting with “R-” or the unique refund ID.
    resource isolated function post v1/refunds/[string refundKey]/reconcile(POSTReconcileRefundRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTReconcileRefundResponse|error {
        string resourcePath = string `/v1/refunds/${getEncodedUri(refundKey)}/reconcile`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTReconcileRefundResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List payments
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + accountId - This parameter filters the response based on the `accountId` field.
    # + amount - This parameter filters the response based on the `amount` field.
    # + appliedAmount - This parameter filters the response based on the `appliedAmount` field.
    # + createdById - This parameter filters the response based on the `createdById` field.
    # + createdDate - This parameter filters the response based on the `createdDate` field.
    # + creditBalanceAmount - This parameter filters the response based on the `creditBalanceAmount` field.
    # + currency - This parameter filters the response based on the `currency` field.
    # + effectiveDate - This parameter filters the response based on the `effectiveDate` field.
    # + number - This parameter filters the response based on the `number` field.
    # + refundAmount - This parameter filters the response based on the `refundAmount` field.
    # + status - This parameter filters the response based on the `status` field.
    # + 'type - This parameter filters the response based on the `type` field.
    # + unappliedAmount - This parameter filters the response based on the `unappliedAmount` field.
    # + updatedById - This parameter filters the response based on the `updatedById` field.
    # + updatedDate - This parameter filters the response based on the `updatedDate` field.
    # + sort - This parameter restricts the order of the data returned in the response. You can use this parameter to supply a dimension you want to sort on.
    # A sortable field uses the following form: 
    # *operator* *field_name*
    # You can use at most two sortable fields in one URL path. Use a comma to separate sortable fields. For example:  *operator* *field_name*, *operator* *field_name*  
    # *operator* is used to mark the order of sequencing. The operator is optional. If you only specify the sortable field without any operator, the response data is sorted in descending order by this field.
    # - The `-` operator indicates an ascending order.
    # - The `+` operator indicates a descending order.
    # By default, the response data is displayed in descending order by payment number.
    # *field_name* indicates the name of a sortable field. The supported sortable fields of this operation are as below:
    # - number
    # - accountId
    # - amount
    # - appliedAmount
    # - unappliedAmount
    # - refundAmount
    # - creditBalanceAmount
    # - effectiveDate
    # - createdDate
    # - createdById
    # - updatedDate
    # - updatedById
    # Examples:
    # - /v1/payments?sort=+number
    # - /v1/payments?status=Processed&sort=-number,+amount
    resource isolated function get v1/payments(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20, string? accountId = (), decimal? amount = (), decimal? appliedAmount = (), string? createdById = (), string? createdDate = (), decimal? creditBalanceAmount = (), string? currency = (), string? effectiveDate = (), string? number = (), decimal? refundAmount = (), "Draft"|"Processing"|"Processed"|"Error"|"Canceled"|"Posted"? status = (), "External"|"Electronic"? 'type = (), decimal? unappliedAmount = (), string? updatedById = (), string? updatedDate = (), string? sort = ()) returns PaymentCollectionResponseType|error {
        string resourcePath = string `/v1/payments`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize, "accountId": accountId, "amount": amount, "appliedAmount": appliedAmount, "createdById": createdById, "createdDate": createdDate, "creditBalanceAmount": creditBalanceAmount, "currency": currency, "effectiveDate": effectiveDate, "number": number, "refundAmount": refundAmount, "status": status, "type": 'type, "unappliedAmount": unappliedAmount, "updatedById": updatedById, "updatedDate": updatedDate, "sort": sort};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        PaymentCollectionResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a payment
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/payments(CreatePaymentType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETARPaymentTypeWithPaymentOption|error {
        string resourcePath = string `/v1/payments`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETARPaymentTypeWithPaymentOption response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Update a payment
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentId - The unique ID of an unapplied payment. For example, `8a8082e65b27f6c3015b89e4344c16b1`.
    resource isolated function put v1/payments/[string paymentId](UpdatePaymentType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETARPaymentType|error {
        string resourcePath = string `/v1/payments/${getEncodedUri(paymentId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETARPaymentType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a payment
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentKey - The unique ID or number of an unapplied payment. For example, `8a8082e65b27f6c3015b89e4344c16b1`, or `P-00000001`.
    resource isolated function get v1/payments/[string paymentKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETARPaymentType|error {
        string resourcePath = string `/v1/payments/${getEncodedUri(paymentKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETARPaymentType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Delete a payment
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentKey - The unique ID or number of an unapplied payment. For example, `8a8082e65b27f6c3015b89e4344c16b1`, or `P-00000001`.
    resource isolated function delete v1/payments/[string paymentKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/payments/${getEncodedUri(paymentKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Apply a payment
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentKey - The unique ID or number of an unapplied payment. For example, `8a8082e65b27f6c3015b89e4344c16b1`, or `P-00000001`.
    resource isolated function put v1/payments/[string paymentKey]/apply(ApplyPaymentType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETARPaymentType|error {
        string resourcePath = string `/v1/payments/${getEncodedUri(paymentKey)}/apply`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETARPaymentType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Cancel a payment
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentKey - The unique ID or number of an unapplied payment. For example, `8a8082e65b27f6c3015b89e4344c16b1`, or `P-00000001`.
    resource isolated function put v1/payments/[string paymentKey]/cancel(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETARPaymentType|error {
        string resourcePath = string `/v1/payments/${getEncodedUri(paymentKey)}/cancel`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        GETARPaymentType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # List all parts of a payment
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + paymentKey - The unique ID or number of an unapplied payment. For example, `8a8082e65b27f6c3015b89e4344c16b1`, or `P-00000001`.
    resource isolated function get v1/payments/[string paymentKey]/parts(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20) returns GETPaymentPartsCollectionType|error {
        string resourcePath = string `/v1/payments/${getEncodedUri(paymentKey)}/parts`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETPaymentPartsCollectionType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a payment part
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + partid - The unique ID of a specific payment part. You can get the payment part ID from the response of [List all parts of a payment](https://www.zuora.com/developer/api-references/api/operation/GET_PaymentParts).
    # + paymentKey - The unique ID or number of an unapplied payment. For example, `8a8082e65b27f6c3015b89e4344c16b1`, or `P-00000001`.
    resource isolated function get v1/payments/[string paymentKey]/parts/[string partid](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETPaymentPartType|error {
        string resourcePath = string `/v1/payments/${getEncodedUri(paymentKey)}/parts/${getEncodedUri(partid)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETPaymentPartType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List all payment part items
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + partid - The unique ID of a specific payment part. You can get the payment part ID from the response of [List all parts of a payment](https://www.zuora.com/developer/api-references/api/operation/GET_PaymentParts).
    # + paymentKey - The unique ID or number of an unapplied payment. For example, `8a8082e65b27f6c3015b89e4344c16b1`, or `P-00000001`.
    resource isolated function get v1/payments/[string paymentKey]/parts/[string partid]/itemparts(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20) returns GETPaymentItemPartCollectionType|error {
        string resourcePath = string `/v1/payments/${getEncodedUri(paymentKey)}/parts/${getEncodedUri(partid)}/itemparts`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETPaymentItemPartCollectionType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a payment part item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + partid - The unique ID of a specific payment part. You can get the payment part ID from the response of [List all parts of a payment](https://www.zuora.com/developer/api-references/api/operation/GET_PaymentParts).
    # + itempartid - The unique ID of a specific payment part item. You can get the payment part item ID from the response of [List all payment part items](https://www.zuora.com/developer/api-references/api/operation/GET_PaymentItemParts).
    # + paymentKey - The unique ID or number of an unapplied payment. For example, `8a8082e65b27f6c3015b89e4344c16b1`, or `P-00000001`.
    resource isolated function get v1/payments/[string paymentKey]/parts/[string partid]/itemparts/[string itempartid](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETPaymentItemPartType|error {
        string resourcePath = string `/v1/payments/${getEncodedUri(paymentKey)}/parts/${getEncodedUri(partid)}/itemparts/${getEncodedUri(itempartid)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETPaymentItemPartType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Refund a payment
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentKey - The unique ID or number of an unapplied payment. For example, `8a8082e65b27f6c3015b89e4344c16b1`, or `P-00000001`.
    resource isolated function post v1/payments/[string paymentKey]/refunds(PostRefundType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETRefundPaymentType|error {
        string resourcePath = string `/v1/payments/${getEncodedUri(paymentKey)}/refunds`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETRefundPaymentType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Refund a payment with auto-unapplying
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentKey - The unique ID or number of an unapplied payment. For example, `8a8082e65b27f6c3015b89e4344c16b1`, or `P-00000001`.
    resource isolated function post v1/payments/[string paymentKey]/refunds/unapply(PostRefundwithAutoUnapplyType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETRefundPaymentTypeAutoUnapply|error {
        string resourcePath = string `/v1/payments/${getEncodedUri(paymentKey)}/refunds/unapply`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETRefundPaymentTypeAutoUnapply response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Transfer a payment
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentKey - The unique ID or number of an unapplied payment. For example, `8a8082e65b27f6c3015b89e4344c16b1`, or `P-00000001`.          
    resource isolated function put v1/payments/[string paymentKey]/transfer(TransferPaymentType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETARPaymentType|error {
        string resourcePath = string `/v1/payments/${getEncodedUri(paymentKey)}/transfer`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETARPaymentType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Unapply a payment
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentKey - The unique ID or number of an unapplied payment. For example, `8a8082e65b27f6c3015b89e4344c16b1`, or `P-00000001`.
    resource isolated function put v1/payments/[string paymentKey]/unapply(UnapplyPaymentType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETARPaymentType|error {
        string resourcePath = string `/v1/payments/${getEncodedUri(paymentKey)}/unapply`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETARPaymentType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # CRUD: Retrieve a payment transaction log
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + id - The ID of a payment transaction log.
    resource isolated function get v1/'object/payment\-transaction\-log/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns ProxyGetPaymentTransactionLog|error {
        string resourcePath = string `/v1/object/payment-transaction-log/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ProxyGetPaymentTransactionLog response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List payment runs
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + createdById - This parameter filters the response based on the `createdById` field.
    # + createdDate - This parameter filters the response based on the `createdDate` field.
    # + status - This parameter filters the response based on the `status` field.
    # + targetDate - This parameter filters the response based on the `targetDate` field.
    # + updatedById - This parameter filters the response based on the `updatedById` field.
    # + updatedDate - This parameter filters the response based on the `updatedDate` field.
    # + sort - This parameter restricts the order of the data returned in the response. You can use this parameter to supply a dimension you want to sort on.
    # A sortable field uses the following form: 
    # *operator* *field_name*
    # You can use at most two sortable fields in one URL path. Use a comma to separate sortable fields. For example:  *operator* *field_name*, *operator* *field_name*  
    # *operator* is used to mark the order of sequencing. The operator is optional. If you only specify the sortable field without any operator, the response data is sorted in descending order by this field.
    # - The `-` operator indicates an ascending order.
    # - The `+` operator indicates a descending order.
    # By default, the response data is displayed in descending order by payment run number.
    # *field_name* indicates the name of a sortable field. The supported sortable fields of this operation are as below:
    # - targetDate
    # - status
    # - createdDate
    # - createdById
    # - updatedDate
    # - updatedById
    # Examples:
    # - /v1/payment-runs?sort=+createdDate
    # - /v1/payment-runs?status=Processing&sort=-createdById,+targetDate
    resource isolated function get v1/payment\-runs(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20, string? createdById = (), string? createdDate = (), "Pending"|"Processing"|"Completed"|"Error"|"Canceled"? status = (), string? targetDate = (), string? updatedById = (), string? updatedDate = (), string? sort = ()) returns GETPaymentRunCollectionType|error {
        string resourcePath = string `/v1/payment-runs`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize, "createdById": createdById, "createdDate": createdDate, "status": status, "targetDate": targetDate, "updatedById": updatedById, "updatedDate": updatedDate, "sort": sort};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETPaymentRunCollectionType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a payment run
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/payment\-runs(POSTPaymentRunRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETPaymentRunType|error {
        string resourcePath = string `/v1/payment-runs`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETPaymentRunType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a payment run
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentRunKey - The unique ID of a payment run or the payment run number. For example, 402890245f097f39015f0f074a2e0566.
    resource isolated function get v1/payment\-runs/[string paymentRunKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETPaymentRunType|error {
        string resourcePath = string `/v1/payment-runs/${getEncodedUri(paymentRunKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETPaymentRunType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update a payment run
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentRunKey - The unique ID of a payment run or the payment run number. For example, 402890245f097f39015f0f074a2e0566.
    resource isolated function put v1/payment\-runs/[string paymentRunKey](PUTPaymentRunRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETPaymentRunType|error {
        string resourcePath = string `/v1/payment-runs/${getEncodedUri(paymentRunKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETPaymentRunType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete a payment run
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + paymentRunKey - The unique ID of a payment run or the payment run number. For example, 402890245f097f39015f0f074a2e0566.
    resource isolated function delete v1/payment\-runs/[string paymentRunKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/payment-runs/${getEncodedUri(paymentRunKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Retrieve payment run data
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + paymentRunKey - The unique ID of a payment run or the payment run number. For example, 402890245f097f39015f0f074a2e0566.
    resource isolated function get v1/payment\-runs/[string paymentRunKey]/data(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = ()) returns GETPaymentRunDataArrayResponse|error {
        string resourcePath = string `/v1/payment-runs/${getEncodedUri(paymentRunKey)}/data`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETPaymentRunDataArrayResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a payment run summary
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + paymentRunKey - The unique ID of a payment run or the payment run number. For example, 402890245f097f39015f0f074a2e0566.
    resource isolated function get v1/payment\-runs/[string paymentRunKey]/summary(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = ()) returns GETPaymentRunSummaryResponse|error {
        string resourcePath = string `/v1/payment-runs/${getEncodedUri(paymentRunKey)}/summary`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETPaymentRunSummaryResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retry failed payment schedule items
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion - The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following response fields:
    # - `items` > `paymentId`
    resource isolated function post v1/payment\-schedule\-items/retry\-payment(POSTRetryPaymentScheduleItemRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns POSTRetryPaymentScheduleItemResponse|error {
        string resourcePath = string `/v1/payment-schedule-items/retry-payment`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTRetryPaymentScheduleItemResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a payment schedule item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion - The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following response fields:
    # - `paymentId`
    # + itemId - The unique ID of a payment schedule item.
    resource isolated function get v1/payment\-schedule\-items/[string itemId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns GETPaymentScheduleItemResponse|error {
        string resourcePath = string `/v1/payment-schedule-items/${getEncodedUri(itemId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETPaymentScheduleItemResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update a payment schedule item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + itemId - The unique ID of a payment schedule item.
    # + zuoraVersion - The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following request fields:
    # * `paymentId`
    # * `linkPayments`
    # * `unlinkPayments`
    # This header affects the availability of the following response fields:
    # * `paymentId`            
    resource isolated function put v1/payment\-schedule\-items/[string itemId](PUTPaymentScheduleItemRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns PUTPaymentScheduleItemResponse|error {
        string resourcePath = string `/v1/payment-schedule-items/${getEncodedUri(itemId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PUTPaymentScheduleItemResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Cancel a payment schedule item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion - The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following response fields:
    # - `paymentId`
    # + itemId - The unique ID of a payment schedule item.     
    resource isolated function put v1/payment\-schedule\-items/[string itemId]/cancel(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns PUTPaymentScheduleItemResponse|error {
        string resourcePath = string `/v1/payment-schedule-items/${getEncodedUri(itemId)}/cancel`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        PUTPaymentScheduleItemResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Skip a payment schedule item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion - The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following response fields:
    # - `paymentId`
    # + itemId - The unique ID of a payment schedule item.   
    resource isolated function put v1/payment\-schedule\-items/[string itemId]/skip(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns PUTSkipPaymentScheduleItemResponse|error {
        string resourcePath = string `/v1/payment-schedule-items/${getEncodedUri(itemId)}/skip`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        PUTSkipPaymentScheduleItemResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # List payment schedules by customer account
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + lastProcessedItems - Number of the most recent processed payment schedules dispalyed in the response body.
    # + nextPendingItems - Number of next pending payment schedule items displayed in the response body.
    # + accountId - The ID of the customer account. If neither `accountId` nor `accountNumber` is specified, all payment schedules will be returned. 
    # + accountNumber - The number of the customer account. If neither `accountId` nor `accountNumber` is specified, all payment schedules will be returned. 
    # + zuoraVersion - The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following fields:
    # * `items` > `paymentId`          
    resource isolated function get v1/payment\-schedules(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int? lastProcessedItems = (), int? nextPendingItems = (), string? accountId = (), int? accountNumber = (), string? zuoraVersion = ()) returns GETPaymentSchedulesResponse|error {
        string resourcePath = string `/v1/payment-schedules`;
        map<anydata> queryParam = {"lastProcessedItems": lastProcessedItems, "nextPendingItems": nextPendingItems, "accountId": accountId, "accountNumber": accountNumber};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETPaymentSchedulesResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a payment schedule
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion - The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following request fields:
    # * `billingDocument`
    # * `items` > `billingDocument`
    resource isolated function post v1/payment\-schedules(POSTPaymentScheduleRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns POSTPaymentScheduleResponse|error {
        string resourcePath = string `/v1/payment-schedules`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTPaymentScheduleResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Create multiple payment schedules at once
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion - The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following request fields:
    # * `paymentSchedules` > `billingDocument`
    # * `paymentSchedules` > `items` > `billingDocument`
    resource isolated function post v1/payment\-schedules/batch(POSTPaymentSchedulesRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns POSTPaymentSchedulesResponse|error {
        string resourcePath = string `/v1/payment-schedules/batch`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTPaymentSchedulesResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve payment schedule statistic of a date
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + yyyyMmDd - Specifies the date of the payment schedule statistic you want to view. 
    resource isolated function get v1/payment\-schedules/statistics/[string yyyyMmDd](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETPaymentScheduleStatisticResponse|error {
        string resourcePath = string `/v1/payment-schedules/statistics/${getEncodedUri(yyyyMmDd)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETPaymentScheduleStatisticResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a payment schedule
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + nextPendingItems - Number of next pending payment schedule items displayed in the response body.
    # + lastProcessedItems - Number of the most recent processed payment schedule items dispalyed in the response body.
    # + zuoraVersion - The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following response fields:
    # - `items` > `paymentId`
    # + paymentScheduleKey - The unique ID or number of a payment schedule. For example, `8a90857b822459cd018224dcb9eb13be`, or `PS-00000007`.
    resource isolated function get v1/payment\-schedules/[string paymentScheduleKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int? nextPendingItems = (), int? lastProcessedItems = (), string? zuoraVersion = ()) returns GETPaymentScheduleResponse|error {
        string resourcePath = string `/v1/payment-schedules/${getEncodedUri(paymentScheduleKey)}`;
        map<anydata> queryParam = {"nextPendingItems": nextPendingItems, "lastProcessedItems": lastProcessedItems};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETPaymentScheduleResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update a payment schedule
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion - The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following fields:
    # - `items` > `paymentId`
    # + paymentScheduleKey - The unique ID or number of a payment schedule. For example, `8a90857b822459cd018224dcb9eb13be`, or `PS-00000007`.
    resource isolated function put v1/payment\-schedules/[string paymentScheduleKey](PUTPaymentScheduleRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns GETPaymentScheduleResponse|error {
        string resourcePath = string `/v1/payment-schedules/${getEncodedUri(paymentScheduleKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETPaymentScheduleResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Cancel a payment schedule
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + paymentScheduleKey - The unique ID or number of a payment schedule. For example, `8a90857b822459cd018224dcb9eb13be`, or `PS-00000007`.
    # + zuoraVersion - The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the followiing response fields:
    # - `items` > `paymentId`
    resource isolated function put v1/payment\-schedules/[string paymentScheduleKey]/cancel(PUTCancelPaymentScheduleRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns GETPaymentScheduleResponse|error {
        string resourcePath = string `/v1/payment-schedules/${getEncodedUri(paymentScheduleKey)}/cancel`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETPaymentScheduleResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Add payment schedule items to a custom payment schedule
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion - The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following fields:
    # - `items` > `paymentId`
    # + paymentScheduleKey - The unique ID or number of a payment schedule. For example, `8a90857b822459cd018224dcb9eb13be`, or `PS-00000007`.
    resource isolated function post v1/payment\-schedules/[string paymentScheduleKey]/items(POSTAddItemsToPaymentScheduleRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns GETPaymentScheduleResponse|error {
        string resourcePath = string `/v1/payment-schedules/${getEncodedUri(paymentScheduleKey)}/items`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETPaymentScheduleResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Preview the result of payment schedule updates
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraVersion - The minor version of the Zuora REST API. See [Minor Version](https://developer.zuora.com/api-references/api/overview/#section/API-Versions/Minor-Version) for information about REST API version control. 
    # This header affects the availability of the following fields:
    # - `items` > `paymentId`
    # + paymentScheduleKey - The unique ID or number of a payment schedule. For example, `8a90857b822459cd018224dcb9eb13be`, or `PS-00000007`.
    resource isolated function put v1/payment\-schedules/[string paymentScheduleKey]/preview(PUTPreviewPaymentScheduleRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns GETPaymentScheduleResponse|error {
        string resourcePath = string `/v1/payment-schedules/${getEncodedUri(paymentScheduleKey)}/preview`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "zuora-version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETPaymentScheduleResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # List refunds
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + accountId - This parameter filters the response based on the `accountId` field.
    # + amount - This parameter filters the response based on the `amount` field.
    # + createdById - This parameter filters the response based on the `createdById` field.
    # + createdDate - This parameter filters the response based on the `createdDate` field.
    # + methodType - This parameter filters the response based on the `methodType` field.
    # + number - This parameter filters the response based on the `number` field.
    # + paymentId - This parameter filters the response based on the `paymentId` field.
    # + refundDate - This parameter filters the response based on the `refundDate` field.
    # + status - This parameter filters the response based on the `status` field.
    # + 'type - This parameter filters the response based on the `type` field.
    # + updatedById - This parameter filters the response based on the `updatedById` field.
    # + updatedDate - This parameter filters the response based on the `updatedDate` field.
    # + sort - This parameter restricts the order of the data returned in the response. You can use this parameter to supply a dimension you want to sort on.
    # A sortable field uses the following form: 
    # *operator* *field_name*
    # You can use at most two sortable fields in one URL path. Use a comma to separate sortable fields. For example:  *operator* *field_name*, *operator* *field_name*  
    # *operator* is used to mark the order of sequencing. The operator is optional. If you only specify the sortable field without any operator, the response data is sorted in descending order by this field.
    # - The `-` operator indicates an ascending order.
    # - The `+` operator indicates a descending order.
    # By default, the response data is displayed in descending order by refund number.
    # *field_name* indicates the name of a sortable field. The supported sortable fields of this operation are as below:
    # - number
    # - accountId
    # - amount
    # - refundDate
    # - paymentId
    # - createdDate
    # - createdById
    # - updatedDate
    # - updatedById
    # Examples:
    # - /v1/refunds?sort=+number
    # - /v1/refunds?status=Processed&sort=-number,+amount
    resource isolated function get v1/refunds(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20, string? accountId = (), decimal? amount = (), string? createdById = (), string? createdDate = (), "ACH"|"Cash"|"Check"|"CreditCard"|"PayPal"|"WireTransfer"|"DebitCard"|"CreditCardReferenceTransaction"|"BankTransfer"|"Other"? methodType = (), string? number = (), string? paymentId = (), string? refundDate = (), "Processed"|"Canceled"|"Error"|"Processing"? status = (), "External"|"Electronic"? 'type = (), string? updatedById = (), string? updatedDate = (), string? sort = ()) returns GETRefundCollectionType|error {
        string resourcePath = string `/v1/refunds`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize, "accountId": accountId, "amount": amount, "createdById": createdById, "createdDate": createdDate, "methodType": methodType, "number": number, "paymentId": paymentId, "refundDate": refundDate, "status": status, "type": 'type, "updatedById": updatedById, "updatedDate": updatedDate, "sort": sort};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETRefundCollectionType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update a refund
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + refundId - The unique ID of a refund. For example, 4028905f5a87c0ff015a889e590e00c9.
    resource isolated function put v1/refunds/[string refundId](PUTRefundType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETRefundType|error {
        string resourcePath = string `/v1/refunds/${getEncodedUri(refundId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETRefundType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a refund
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + refundKey - The unique ID of a refund or the refund number. For example, 4028905f5a87c0ff015a889e590e00c9.
    resource isolated function get v1/refunds/[string refundKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETRefundType|error {
        string resourcePath = string `/v1/refunds/${getEncodedUri(refundKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETRefundType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Delete a refund
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + refundKey - The unique ID of a refund or the refund number. For example, 4028905f5a87c0ff015a889e590e00c9.
    resource isolated function delete v1/refunds/[string refundKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/refunds/${getEncodedUri(refundKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Cancel a refund
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + refundKey - The unique ID of a refund or the refund number. For example, 4028905f5a87c0ff015a889e590e00c9.      
    resource isolated function put v1/refunds/[string refundKey]/cancel(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETRefundType|error {
        string resourcePath = string `/v1/refunds/${getEncodedUri(refundKey)}/cancel`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        GETRefundType response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # List all parts of a refund
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + refundKey - The number or unique ID of a refund. For example, 4028905f5a87c0ff015a889e590e00c9.
    resource isolated function get v1/refunds/[string refundKey]/parts(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETRefundPartCollectionType|error {
        string resourcePath = string `/v1/refunds/${getEncodedUri(refundKey)}/parts`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETRefundPartCollectionType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a refund part
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + refundpartid - The unique ID of a specific refund part. You can get the refund part ID from the response of [List all parts of a refund](https://developer.zuora.com/api-references/api/operation/GET_RefundParts).
    # + refundKey - The number or unique ID of a refund. For example, 4028905f5a87c0ff015a889e590e00c9.
    resource isolated function get v1/refunds/[string refundKey]/parts/[string refundpartid](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns RefundPartResponseType|error {
        string resourcePath = string `/v1/refunds/${getEncodedUri(refundKey)}/parts/${getEncodedUri(refundpartid)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        RefundPartResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List all refund part items
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + refundpartid - The unique ID of a specific refund part. You can get the refund part ID from the response of [List all parts of a refund](https://developer.zuora.com/api-references/api/operation/GET_RefundParts).
    # + refundKey - The number or unique ID of a refund. For example, 4028905f5a87c0ff015a889e590e00c9.
    resource isolated function get v1/refunds/[string refundKey]/parts/[string refundpartid]/itemparts(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20) returns GETRefundItemPartCollectionType|error {
        string resourcePath = string `/v1/refunds/${getEncodedUri(refundKey)}/parts/${getEncodedUri(refundpartid)}/itemparts`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETRefundItemPartCollectionType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a refund part item
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + itempartid - The unique ID of a specific refund part item. You can get the refund part item ID from the response of [Get refund part items](https://developer.zuora.com/api-references/api/operation/GET_RefundItemParts).
    # + refundpartid - The unique ID of a specific refund part. You can get the refund part ID from the response of [List all parts of a refund](https://developer.zuora.com/api-references/api/operation/GET_RefundParts).
    # + refundKey - The number or unique ID of a refund. For example, 4028905f5a87c0ff015a889e590e00c9.
    resource isolated function get v1/refunds/[string refundKey]/parts/[string refundpartid]/itemparts/[string itempartid](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETRefundItemPartType|error {
        string resourcePath = string `/v1/refunds/${getEncodedUri(refundKey)}/parts/${getEncodedUri(refundpartid)}/itemparts/${getEncodedUri(itempartid)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETRefundItemPartType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List all accounting codes
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    resource isolated function get v1/accounting\-codes(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 300) returns GETAccountingCodesType|error {
        string resourcePath = string `/v1/accounting-codes`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETAccountingCodesType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create an accounting code
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/accounting\-codes(POSTAccountingCodeType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTAccountingCodeResponseType|error {
        string resourcePath = string `/v1/accounting-codes`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTAccountingCodeResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve an accounting code
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + acId - ID of the accounting code you want to query.
    resource isolated function get v1/accounting\-codes/[string acId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETAccountingCodeItemType|error {
        string resourcePath = string `/v1/accounting-codes/${getEncodedUri(acId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETAccountingCodeItemType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update an accounting code
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + acId - ID of the accounting code you want to update.
    resource isolated function put v1/accounting\-codes/[string acId](PUTAccountingCodeType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/accounting-codes/${getEncodedUri(acId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete an accounting code
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + acId - ID of the accounting code you want to delete.
    resource isolated function delete v1/accounting\-codes/[string acId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/accounting-codes/${getEncodedUri(acId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Activate an accounting code
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + acId - ID of the accounting code you want to activate.
    resource isolated function put v1/accounting\-codes/[string acId]/activate(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/accounting-codes/${getEncodedUri(acId)}/activate`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Deactivate an accounting code
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + acId - ID of the accounting code you want to deactivate.
    resource isolated function put v1/accounting\-codes/[string acId]/deactivate(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/accounting-codes/${getEncodedUri(acId)}/deactivate`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # List all accounting periods
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    resource isolated function get v1/accounting\-periods(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 300) returns GETAccountingPeriodsType|error {
        string resourcePath = string `/v1/accounting-periods`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETAccountingPeriodsType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create an accounting period
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/accounting\-periods(POSTAccountingPeriodType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTAccountingPeriodResponseType|error {
        string resourcePath = string `/v1/accounting-periods`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTAccountingPeriodResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve an accounting period
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + apId - ID of the accounting period you want to get.
    resource isolated function get v1/accounting\-periods/[string apId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETAccountingPeriodType|error {
        string resourcePath = string `/v1/accounting-periods/${getEncodedUri(apId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETAccountingPeriodType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update an accounting period
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + apId - ID of the accounting period you want to update.
    resource isolated function put v1/accounting\-periods/[string apId](PUTAccountingPeriodType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/accounting-periods/${getEncodedUri(apId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete an accounting period
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + apId - ID of the accounting period you want to delete.
    resource isolated function delete v1/accounting\-periods/[string apId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/accounting-periods/${getEncodedUri(apId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Close an accounting period
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + apId - ID of the accounting period you want to close.
    resource isolated function put v1/accounting\-periods/[string apId]/close(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/accounting-periods/${getEncodedUri(apId)}/close`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Set an accounting period to pending close
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + apId - ID of the accounting period you want to set to pending close.
    resource isolated function put v1/accounting\-periods/[string apId]/pending\-close(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/accounting-periods/${getEncodedUri(apId)}/pending-close`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Reopen an accounting period
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + apId - ID of the accounting period that you want to re-open.
    resource isolated function put v1/accounting\-periods/[string apId]/reopen(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/accounting-periods/${getEncodedUri(apId)}/reopen`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Run trial balance
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + apId - ID of the accounting period for which you want to run a trial balance.
    resource isolated function put v1/accounting\-periods/[string apId]/run\-trial\-balance(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/accounting-periods/${getEncodedUri(apId)}/run-trial-balance`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Create a summary journal entry
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/journal\-entries(POSTJournalEntryType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTJournalEntryResponseType|error {
        string resourcePath = string `/v1/journal-entries`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTJournalEntryResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List all summary journal entries in a journal run
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + jrNumber - Journal run number.
    resource isolated function get v1/journal\-entries/journal\-runs/[string jrNumber](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 8) returns GETJournalEntriesInJournalRunType|error {
        string resourcePath = string `/v1/journal-entries/journal-runs/${getEncodedUri(jrNumber)}`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETJournalEntriesInJournalRunType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a summary journal entry
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function get v1/journal\-entries/[string jeNumber](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETJournalEntryDetailType|error {
        string resourcePath = string `/v1/journal-entries/${getEncodedUri(jeNumber)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETJournalEntryDetailType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Delete a summary journal entry
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + jeNumber - Journal entry number in the format JE-00000001.
    resource isolated function delete v1/journal\-entries/[string jeNumber](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/journal-entries/${getEncodedUri(jeNumber)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Update a summary journal entry
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + jeNumber - Journal entry number in the format JE-00000001.
    resource isolated function put v1/journal\-entries/[string jeNumber]/basic\-information(PUTBasicSummaryJournalEntryType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/journal-entries/${getEncodedUri(jeNumber)}/basic-information`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Cancel a summary journal entry
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + jeNumber - Journal entry number in the format JE-00000001.
    resource isolated function put v1/journal\-entries/[string jeNumber]/cancel(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/journal-entries/${getEncodedUri(jeNumber)}/cancel`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Create a journal run
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/journal\-runs(POSTJournalRunType payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTJournalRunResponseType|error {
        string resourcePath = string `/v1/journal-runs`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        POSTJournalRunResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a journal run
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + jrNumber - Journal run number. Must be a valid journal run number in the format `JR-00000001`.
    resource isolated function get v1/journal\-runs/[string jrNumber](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETJournalRunType|error {
        string resourcePath = string `/v1/journal-runs/${getEncodedUri(jrNumber)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETJournalRunType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Delete a journal run
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + jrNumber - Journal run number. Must be a valid journal run number in the format `JR-00000001`.
    resource isolated function delete v1/journal\-runs/[string jrNumber](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/journal-runs/${getEncodedUri(jrNumber)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Cancel a journal run
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + jrNumber - Journal run number. Must be a valid journal run number in the format JR-00000001. 
    # You can only cancel a journal run whose status is "Pending", "Error", or "Completed".
    resource isolated function put v1/journal\-runs/[string jrNumber]/cancel(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/journal-runs/${getEncodedUri(jrNumber)}/cancel`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Perform a mass action
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    resource isolated function post v1/bulk(V1_bulk_body payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns POSTMassUpdateResponseType|error {
        string resourcePath = string `/v1/bulk`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        mime:Entity[] bodyParts = check createBodyParts(payload);
        request.setBodyParts(bodyParts);
        POSTMassUpdateResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List all results of a mass action
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + bulkKey - String of 32 characters that identifies a mass action. You get the bulk-key after performing a mass action through the REST API.
    resource isolated function get v1/bulk/[string bulkKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETMassUpdateType|error {
        string resourcePath = string `/v1/bulk/${getEncodedUri(bulkKey)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETMassUpdateType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Stop a mass action
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + bulkKey - String of 32 characters that identifies a mass action. You get the bulk-key after performing a mass action through the REST API.
    resource isolated function put v1/bulk/[string bulkKey]/stop(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/bulk/${getEncodedUri(bulkKey)}/stop`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # List event triggers
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + baseObject - The Zuora object that trigger condition is defined upon. The format of the value in this field depends on the base object type:
    # - Standard object: object name, which should follow the pattern ^[A-Z][\w\-]*$. For example, `Invoice`.
    # - Custom object: `default__<custom_object_api_name>`. For example, `default__vehicle`.
    # + eventTypeName - The event type name. Should be specified in the pattern: ^[A-Za-z]{1,}[\w\-]*$
    # + active - The status of the event trigger.
    # + 'start - The first index of the query result. Default to 0 if absent, and the minimum is 0.
    # + 'limit - The maximum number of data records to be returned. Default to 10 if absent.
    # + return - OK 
    resource isolated function get events/event\-triggers(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string? baseObject = (), string? eventTypeName = (), string? active = (), int 'start = 0, int 'limit = 10) returns Inline_response_200_2|error {
        string resourcePath = string `/events/event-triggers`;
        map<anydata> queryParam = {"baseObject": baseObject, "eventTypeName": eventTypeName, "active": active, "start": 'start, "limit": 'limit};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        Inline_response_200_2 response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create an event trigger
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + return - OK 
    resource isolated function post events/event\-triggers(string authorization, PostEventTriggerRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns EventTrigger|error {
        string resourcePath = string `/events/event-triggers`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        EventTrigger response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve an event trigger
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + return - OK 
    resource isolated function get events/event\-triggers/[string id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns EventTrigger|error {
        string resourcePath = string `/events/event-triggers/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        EventTrigger response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update an event trigger
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + return - OK 
    resource isolated function put events/event\-triggers/[string id](string authorization, PutEventTriggerRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns EventTrigger|error {
        string resourcePath = string `/events/event-triggers/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        EventTrigger response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete an event trigger
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + return - No Content 
    resource isolated function delete events/event\-triggers/[string id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns http:Response|error {
        string resourcePath = string `/events/event-triggers/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Response response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # List all scheduled events
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + eventTypeName - The name of the scheduled event. Should be specified in the pattern: ^[A-Za-z]{1,}[\\w\\-]*$
    # + apiObject - The base object that the scheduled event is defined upon. Should be specified in the pattern: ^[A-Z][\\w\\-]*$
    # + apiField - The base field of the base object in the `apiObject` field. Should be specified in the pattern: ^[A-Z][\\w\\-]*$
    # + active - Indicate whether the scheduled event is active or inactive.
    # + 'start - The first index of the query result. Default to 0 if absent, and the minimum is 0.
    # + 'limit - The maximum number of data records to be returned. Default to 10 if absent.
    # + return - OK 
    resource isolated function get events/scheduled\-events(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string? eventTypeName = (), string? apiObject = (), string? apiField = (), boolean? active = (), int 'start = 0, int 'limit = 10) returns Inline_response_200_3|error {
        string resourcePath = string `/events/scheduled-events`;
        map<anydata> queryParam = {"eventTypeName": eventTypeName, "apiObject": apiObject, "apiField": apiField, "active": active, "start": 'start, "limit": 'limit};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        Inline_response_200_3 response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a scheduled event
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + return - OK 
    resource isolated function post events/scheduled\-events(string authorization, PostScheduledEventRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns GetScheduledEventResponse|error {
        string resourcePath = string `/events/scheduled-events`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GetScheduledEventResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a scheduled event by ID
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + id - The ID of the scheduled event.
    # + return - OK 
    resource isolated function get events/scheduled\-events/[string id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns GetScheduledEventResponse|error {
        string resourcePath = string `/events/scheduled-events/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetScheduledEventResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update a scheduled event by ID
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + id - The ID of the scheduled event.
    # + return - OK 
    resource isolated function put events/scheduled\-events/[string id](string authorization, PutScheduledEventRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns GetScheduledEventResponse|error {
        string resourcePath = string `/events/scheduled-events/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GetScheduledEventResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete a scheduled event by ID
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + id - The ID of the scheduled event.
    # + return - No Content 
    resource isolated function delete events/scheduled\-events/[string id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns http:Response|error {
        string resourcePath = string `/events/scheduled-events/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Response response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # List notification definitions
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + 'start - The first index of the query result.
    # + 'limit - The maximum number of results the query should return.
    # + profileId - Id of the profile.
    # + eventCategory - The event category code for a standard event, on which the notification definition is created.
    # For the list of supported standard event category codes, see <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Events_and_Notifications/A_Standard_Events/Standard_Event_Category_Code_for_Events_and_Notifications" target="_blank">Standard event category code for events and notifications</a>.
    # You cannot specify `eventCategory` and `eventTypeName` at the same time.
    # + eventTypeName - The name of the Zuora custom event, custom event, or custom scheduled event on which the notification definition is created.
    # You cannot specify `eventCategory` and `eventTypeName` at the same time.
    # + emailTemplateId - The ID of the email template.
    # + return - OK 
    resource isolated function get notifications/notification\-definitions(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int:Signed32 'start = 1, int:Signed32 'limit = 20, string? profileId = (), decimal? eventCategory = (), string? eventTypeName = (), string? emailTemplateId = ()) returns Inline_response_200_4|error {
        string resourcePath = string `/notifications/notification-definitions`;
        map<anydata> queryParam = {"start": 'start, "limit": 'limit, "profileId": profileId, "eventCategory": eventCategory, "eventTypeName": eventTypeName, "emailTemplateId": emailTemplateId};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        Inline_response_200_4 response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a notification definition
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + payload - The request body used to create the notification definition.
    # + return - OK 
    resource isolated function post notifications/notification\-definitions(string authorization, POSTPublicNotificationDefinitionRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETPublicNotificationDefinitionResponse|error {
        string resourcePath = string `/notifications/notification-definitions`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETPublicNotificationDefinitionResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a notification definition
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + id - The ID of the notification definition.
    # + return - OK 
    resource isolated function get notifications/notification\-definitions/[string id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETPublicNotificationDefinitionResponse|error {
        string resourcePath = string `/notifications/notification-definitions/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETPublicNotificationDefinitionResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update a notification definition
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + id - The ID of the notification definition to be updated.
    # + payload - The request body of the notification definition to be updated.
    # + return - OK 
    resource isolated function put notifications/notification\-definitions/[string id](string authorization, PUTPublicNotificationDefinitionRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETPublicNotificationDefinitionResponse|error {
        string resourcePath = string `/notifications/notification-definitions/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETPublicNotificationDefinitionResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete a notification definition
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + id - The ID of the notification definition to be deleted.
    # + return - No Content 
    resource isolated function delete notifications/notification\-definitions/[string id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns http:Response|error {
        string resourcePath = string `/notifications/notification-definitions/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Response response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Create or update email templates
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + payload - The request body to import or update email templates.
    # + return - OK 
    resource isolated function post notifications/email\-templates/'import(string authorization, POSTCreateOrUpdateEmailTemplateRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CreateOrUpdateEmailTemplatesResponse|error {
        string resourcePath = string `/notifications/email-templates/import`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CreateOrUpdateEmailTemplatesResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List email templates
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + 'start - The first index of the query result.
    # + 'limit - The maximum number of results the query should return.
    # + eventCategory - The event category code for standard events.
    # + eventTypeName - The name of the custom event or custom scheduled event.
    # + name - The name of the email template.
    # + return - OK 
    resource isolated function get notifications/email\-templates(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int:Signed32 'start = 1, int:Signed32 'limit = 20, decimal? eventCategory = (), string? eventTypeName = (), string? name = ()) returns Inline_response_200_5|error {
        string resourcePath = string `/notifications/email-templates`;
        map<anydata> queryParam = {"start": 'start, "limit": 'limit, "eventCategory": eventCategory, "eventTypeName": eventTypeName, "name": name};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        Inline_response_200_5 response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create an email template
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + payload - The request body to create an email template.
    # + return - OK 
    resource isolated function post notifications/email\-templates(string authorization, POSTPublicEmailTemplateRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETPublicEmailTemplateResponse|error {
        string resourcePath = string `/notifications/email-templates`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETPublicEmailTemplateResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve an email template
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + id - The ID of the email template.
    # + return - OK 
    resource isolated function get notifications/email\-templates/[string id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETPublicEmailTemplateResponse|error {
        string resourcePath = string `/notifications/email-templates/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETPublicEmailTemplateResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update an email template
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + id - The ID of the email template to be updated.
    # + payload - The request body to update an email template.
    # + return - OK 
    resource isolated function put notifications/email\-templates/[string id](string authorization, PUTPublicEmailTemplateRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETPublicEmailTemplateResponse|error {
        string resourcePath = string `/notifications/email-templates/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETPublicEmailTemplateResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete an email template
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + id - The ID of the email template to be deleted.
    # + return - No Content 
    resource isolated function delete notifications/email\-templates/[string id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns http:Response|error {
        string resourcePath = string `/notifications/email-templates/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Response response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Delete notification histories for an account
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + accountId - The ID of the account whose notification histories are to be deleted.
    # + return - Accepted 
    resource isolated function delete notifications/history(string authorization, string accountId, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns NotificationsHistoryDeletionTaskResponse|error {
        string resourcePath = string `/notifications/history`;
        map<anydata> queryParam = {"accountId": accountId};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        NotificationsHistoryDeletionTaskResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Retrieve a notification history deletion task
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + id - The ID of the notification history deletion task. You can get the deletion task ID from the 202 response body of the [Delete notification histories for an account](https://developer.zuora.com/api-references/api/operation/DELETE_Delete_Notification_History_For_Account) operation.
    # + return - OK 
    resource isolated function get notifications/history/tasks/[string id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns NotificationsHistoryDeletionTaskResponse|error {
        string resourcePath = string `/notifications/history/tasks/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        NotificationsHistoryDeletionTaskResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Resend callout notifications
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + payload - The request body to resend callout notifications.
    # + return - Accepted 
    resource isolated function post notifications/callout\-histories/resend(string authorization, POSTResendCalloutNotifications payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns ResendCalloutNotificationsFailedResponse|error {
        string resourcePath = string `/notifications/callout-histories/resend`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        ResendCalloutNotificationsFailedResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Resend email notifications
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + payload - The request body to resend email notifications.
    # + return - Accepted 
    resource isolated function post notifications/email\-histories/resend(string authorization, POSTResendEmailNotifications payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns ResendEmailNotificationsFailedResponse|error {
        string resourcePath = string `/notifications/email-histories/resend`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        ResendEmailNotificationsFailedResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List callout notification histories
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + endTime - The final date and time of records to be returned. Defaults to now. Use format yyyy-MM-ddTHH:mm:ss.
    # + startTime - The initial date and time of records to be returned. Defaults to (end time - 1 day). Use format yyyy-MM-ddTHH:mm:ss.
    # + objectId - The ID of an object that triggered a callout notification. 
    # + failedOnly - If `true`, only return failed records. If `false`, return all records in the given date range. The default value is `true`.
    # + eventCategory - Category of records to be returned by event category.
    # The following formats are supported:
    # * `{Event Type Namespace}:{Event Type Name}` if the Custom Events feature is enabled in your tenant. For example: `user.notification:NewSubscriptionCreated`.
    # * Numeric code of the event category if the Custom Events feature is not enabled in your tenant. For example, `1210`. See [Event Category Code](https://knowledgecenter.zuora.com/DC_Developers/AA_REST_API/Event_Categories_for_Notification_Histories) for more information.
    resource isolated function get v1/notification\-history/callout(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20, string? endTime = (), string? startTime = (), string? objectId = (), boolean? failedOnly = (), string? eventCategory = (), boolean? includeResponseContent = ()) returns GETCalloutHistoryVOsType|error {
        string resourcePath = string `/v1/notification-history/callout`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize, "endTime": endTime, "startTime": startTime, "objectId": objectId, "failedOnly": failedOnly, "eventCategory": eventCategory, "includeResponseContent": includeResponseContent};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETCalloutHistoryVOsType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List email notification histories
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + accountId - ID of an account. By specifying this query parameter, you can filter email notification histories by account.
    # + endTime - The end date and time of records to be returned. Defaults to now. Use format yyyy-MM-ddTHH:mm:ss. The maximum date range (endTime - startTime) is three days.
    # + startTime - The initial date and time of records to be returned. Defaults to (end time - 1 day). Use format yyyy-MM-ddTHH:mm:ss. The maximum date range (endTime - startTime) is three days.
    # + objectId - The Id of an object that triggered an email notification.
    # + failedOnly - If `true`, only returns failed records. When `false`, returns all records in the given date range. Defaults to `true` when not specified.
    # + eventCategory - Category of records to be returned by event category.
    # The following formats are supported:
    # * `{Event Type Namespace}:{Event Type Name}` if the Custom Events feature is enabled in your tenant. For example: `user.notification:NewSubscriptionCreated`.
    # * Numeric code of the event category if the Custom Events feature is not enabled in your tenant. For example, `1210`. See [Event Category Code](https://knowledgecenter.zuora.com/DC_Developers/AA_REST_API/Event_Categories_for_Notification_Histories) for more information.
    resource isolated function get v1/notification\-history/email(string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20, string? accountId = (), string? endTime = (), string? startTime = (), string? objectId = (), boolean? failedOnly = (), decimal? eventCategory = ()) returns GETEmailHistoryVOsType|error {
        string resourcePath = string `/v1/notification-history/email`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize, "accountId": accountId, "endTime": endTime, "startTime": startTime, "objectId": objectId, "failedOnly": failedOnly, "eventCategory": eventCategory};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETEmailHistoryVOsType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List custom object definitions
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraVersion - API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema.
    # + 'select - If you set `select` to `type`, the response will only contain the `type` of each custom object.
    # + return - OK 
    resource isolated function get objects/definitions/default(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = (), "type"? 'select = ()) returns GETAllCustomObjectDefinitionsInNamespaceResponse|error {
        string resourcePath = string `/objects/definitions/default`;
        map<anydata> queryParam = {"select": 'select};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "Zuora-Version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETAllCustomObjectDefinitionsInNamespaceResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create custom object definitions
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraVersion - API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema.
    # + payload - The custom object definitions to be created
    # + return - OK 
    resource isolated function post objects/definitions/default(string authorization, PostCustomObjectDefinitionsRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns GETAllCustomObjectDefinitionsInNamespaceResponse|error {
        string resourcePath = string `/objects/definitions/default`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "Zuora-Version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        GETAllCustomObjectDefinitionsInNamespaceResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Update a custom object definition
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraVersion - API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema.
    # + payload - Migration resource for object and namespace changes.
    # + return - OK 
    resource isolated function post objects/migrations(string authorization, MigrationUpdateCustomObjectDefinitionsRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns MigrationUpdateCustomObjectDefinitionsResponse|error {
        string resourcePath = string `/objects/migrations`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "Zuora-Version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        MigrationUpdateCustomObjectDefinitionsResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a custom object definition
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraVersion - API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema.
    # + 'object - Specifies the custom object's API name as object. It is case-sensitive.
    # + return - OK 
    resource isolated function get objects/definitions/default/[string 'object](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns CustomObjectDefinition|error {
        string resourcePath = string `/objects/definitions/default/${getEncodedUri('object)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "Zuora-Version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CustomObjectDefinition response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Delete a custom object definition
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraVersion - API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema.
    # + 'object - Specifies the custom object's API name as object. It is case-sensitive.
    # + return - OK 
    resource isolated function delete objects/definitions/default/[string 'object](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns string|error {
        string resourcePath = string `/objects/definitions/default/${getEncodedUri('object)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "Zuora-Version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        string response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # List records for a custom object
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraVersion - API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema.
    # + 'object - Specifies the custom object's API name as object. It is case-sensitive.
    # + q - The query string to filter the records of a custom object. See the [Query syntax of custom object records](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Data_Model/Custom_object_records/Query_syntax_of_custom_object_records) for more information.
    # Note that the `q` parameter only applies to filterable fields.
    # + ids - UUIDs of the records to be queried. Each UUID must be a string of 36 characters. For example:
    # `GET /objects/records/default/passenger?ids=258d65b2-7bc6-4142-88bc-5184931af493&ids=82ecc9f7-b192-4f88-a4a3-4b2af6c750a1`
    # + pageSize - The number of records returned per page in the response.
    # + cursor - The `cursor` points to the last record of the previous result set. The cursor record is not included in the query result. The call returns the first page if `cursor` is not provided and `pageSize` is valid.
    # + return - OK 
    resource isolated function get objects/records/default/[string 'object](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = (), string? q = (), string? ids = (), int? pageSize = (), string? cursor = ()) returns QueryCustomObjectRecordsResponse|error {
        string resourcePath = string `/objects/records/default/${getEncodedUri('object)}`;
        map<anydata> queryParam = {"q": q, "ids": ids, "pageSize": pageSize, "cursor": cursor};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "Zuora-Version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryCustomObjectRecordsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create custom object records
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraVersion - API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema.
    # + 'object - Specifies the custom object's API name as object. It is case-sensitive.
    # + return - OK The 200 response indicates that the records have been partially or completely created. * If the `allowPartialSuccess` flag is set to `false`, the 200 response indicates that all object records have been successfully created. * If the `allowPartialSuccess` flag is set to `true`, the 200 response indicates that some records might not be succesffully created and the error information might be contained in the response body. 
    resource isolated function post objects/records/default/[string 'object](string authorization, PostCustomObjectRecordsRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns PostCustomObjectRecordsResponse|error {
        string resourcePath = string `/objects/records/default/${getEncodedUri('object)}`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "Zuora-Version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        PostCustomObjectRecordsResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a custom object record
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraVersion - API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema.
    # + 'object - Specifies the custom object's API name as object. It is case-sensitive.
    # + id - Id identifier in uuid form
    # + return - OK 
    resource isolated function get objects/records/default/[string 'object]/[string id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns CustomObjectRecordWithAllFields|error {
        string resourcePath = string `/objects/records/default/${getEncodedUri('object)}/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "Zuora-Version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CustomObjectRecordWithAllFields response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update a custom object record
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + ifMatch - The expected ETag of the resource. You can use this header to perform a conditional request. Zuora responds with 412 Precondition Failed if the ETag of the resource does not match the value of this header. 
    # + zuoraVersion - API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema.
    # + 'object - Specifies the custom object's API name as object. It is case-sensitive.
    # + id - Id identifier in uuid form
    # + return - OK 
    resource isolated function put objects/records/default/[string 'object]/[string id](string authorization, CustomObjectRecordWithOnlyCustomFields payload, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? ifMatch = (), string? zuoraVersion = ()) returns CustomObjectRecordWithAllFields|error {
        string resourcePath = string `/objects/records/default/${getEncodedUri('object)}/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "If-Match": ifMatch, "Zuora-Version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CustomObjectRecordWithAllFields response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete a custom object record
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraVersion - API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema.
    # + 'object - Specifies the custom object's API name as object. It is case-sensitive.
    # + id - Id identifier in uuid form
    # + return - OK 
    resource isolated function delete objects/records/default/[string 'object]/[string id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns string|error {
        string resourcePath = string `/objects/records/default/${getEncodedUri('object)}/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "Zuora-Version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        string response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Partially update a custom object record
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraVersion - API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema.
    # + 'object - Specifies the custom object's API name as object. It is case-sensitive.
    # + id - Id identifier in uuid form
    # + return - OK 
    resource isolated function patch objects/records/default/[string 'object]/[string id](string authorization, CustomObjectRecordWithOnlyCustomFields payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns CustomObjectRecordWithAllFields|error {
        string resourcePath = string `/objects/records/default/${getEncodedUri('object)}/${getEncodedUri(id)}`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "Zuora-Version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/merge-patch+json");
        CustomObjectRecordWithAllFields response = check self.clientEp->patch(resourcePath, request, httpHeaders);
        return response;
    }
    # Update or delete custom object records
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraVersion - API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema.
    # + 'object - Specifies the custom object's API name as object. It is case-sensitive.
    # + return - OK For the bacth `delete` action, it indicates the batch records have been successfully deleted. For the batch `update` action, it indicates that the batch records have been partially or completely updated. * If the `allowPartialSuccess` flag is set to `false`, the 200 response indicates that all object records have been successfully updated. * If the `allowPartialSuccess` flag is set to `true`, the 200 response indicates that some records might not be succesffully updated and the error information might be contained in the response body. 
    resource isolated function post objects/batch/default/[string 'object](string authorization, CustomObjectRecordBatchRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns CustomObjectRecordsBatchUpdatePartialSuccessResponse|error {
        string resourcePath = string `/objects/batch/default/${getEncodedUri('object)}`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "Zuora-Version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CustomObjectRecordsBatchUpdatePartialSuccessResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List all custom object bulk jobs
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraVersion - API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema.
    # + pageSize - The number of records returned per page in the response.
    # + cursor - The `cursor` points to the last job of the previous result set. The cursor job is not included in this query result. The call returns the first page if `cursor` is not provided and `pageSize` is valid.
    # + status - The status of bulk jobs to be retrieved.
    # + return - OK 
    resource isolated function get objects/jobs(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = (), int pageSize = 25, string? cursor = (), "pending"|"accepted"|"in_progress"|"completed"|"failed"|"cancelled"? status = ()) returns CustomObjectBulkJobResponseCollection|error {
        string resourcePath = string `/objects/jobs`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "status": status};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "Zuora-Version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CustomObjectBulkJobResponseCollection response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Submit a custom object bulk job
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraVersion - API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema.
    # + payload - Custom Objects bulk job request
    # + return - OK 
    resource isolated function post objects/jobs(string authorization, CustomObjectBulkJobRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns CustomObjectBulkJobResponse|error {
        string resourcePath = string `/objects/jobs`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "Zuora-Version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CustomObjectBulkJobResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a custom object bulk job
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraVersion - API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema.
    # + id - The ID of the custom object bulk job to be retrieved.
    # + return - OK 
    resource isolated function get objects/jobs/[string id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns CustomObjectBulkJobResponse|error {
        string resourcePath = string `/objects/jobs/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "Zuora-Version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CustomObjectBulkJobResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Upload a file for a custom object bulk job
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraVersion - API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema.
    # + contentType - The `Content-Type` of the request must be `text/csv`.
    # + id - The ID of the custom object bulk job that the file is uploaded to.
    # + return - OK 
    resource isolated function post objects/jobs/[string id]/files(string authorization, string contentType, string payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns CustomObjectBulkJobResponse|error {
        string resourcePath = string `/objects/jobs/${getEncodedUri(id)}/files`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "Zuora-Version": zuoraVersion, "Content-Type": contentType};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        request.setPayload(payload, "text/csv");
        CustomObjectBulkJobResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List all errors for a custom object bulk job
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraVersion - API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema.
    # + id - The ID of the custom object bulk job that you retrieve errors for.
    # + return - OK 
    resource isolated function get objects/jobs/[string id]/errors(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns CustomObjectBulkJobErrorResponseCollection|error {
        string resourcePath = string `/objects/jobs/${getEncodedUri(id)}/errors`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "Zuora-Version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CustomObjectBulkJobErrorResponseCollection response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Cancel a custom object bulk job
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraVersion - API version that determines the response schema. The default version is used if this parameter is not included. Specify `Zuora-Version` in the request header if you expect a specific response schema.
    # + id - The ID of the custom object bulk job that you want to cancel.
    # + return - OK 
    resource isolated function patch objects/jobs/[string id]/cancel(string authorization, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraVersion = ()) returns CustomObjectBulkJobResponse|error {
        string resourcePath = string `/objects/jobs/${getEncodedUri(id)}/cancel`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization, "Zuora-Version": zuoraVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        CustomObjectBulkJobResponse response = check self.clientEp->patch(resourcePath, request, httpHeaders);
        return response;
    }
    # List API volume summary records
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + path - Filters the volume summary by API path name.
    # You can refer to the api listed in the [API System Health Dashboard](https://knowledgecenter.zuora.com/Zuora_Central_Platform/Zuora_System_Health/B_APIs_dashboard) for the path name. Example: `/v1/accounts/{account-key}`.
    # + httpMethod - Filters the volume summary by http method. Example: `POST`.
    # + startTime - Start time of the volume summary.
    # Format: `yyyy-MM-dd'T'HH:mmZ` Example: `2022-09-22T09:07+0800`.
    # + endTime - End time of the volume summary.
    # Format: `yyyy-MM-dd'T'HH:mmZ` Example: `2022-09-29T09:07+0800`.
    # + return - OK 
    resource isolated function get system\-health/api\-requests/volume\-summary(string authorization, string startTime, string endTime, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string? path = (), string? httpMethod = ()) returns GetApiVolumeSummaryResponse|error {
        string resourcePath = string `/system-health/api-requests/volume-summary`;
        map<anydata> queryParam = {"path": path, "httpMethod": httpMethod, "startTime": startTime, "endTime": endTime};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetApiVolumeSummaryResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List billing document volume summary records
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + startTime - Start time of the volume summary.
    # Format: `yyyy-MM-dd'T'HH:mmZ` Example: `2022-09-22T09:07+0800`.
    # + endTime - End time of the volume summary.
    # Format: `yyyy-MM-dd'T'HH:mmZ` Example: `2022-09-22T09:07+0800`.
    # + return - OK 
    resource isolated function get system\-health/billing\-documents/volume\-summary(string authorization, string startTime, string endTime, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns GetBillingDocVolumeSummaryResponse|error {
        string resourcePath = string `/system-health/billing-documents/volume-summary`;
        map<anydata> queryParam = {"startTime": startTime, "endTime": endTime};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetBillingDocVolumeSummaryResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List payment volume summary records
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + paymentGatewayType - Filters the volume summary by payment gateway type. Example: `Adyen`.
    # + paymentMethodType - Filters the volume summary by payment method type. Example: `CreditCard`.
    # + startTime - Start time of the volume summary.
    # Format: `yyyy-MM-dd'T'HH:mmZ` Example: `2022-09-22T09:07+0800`.
    # + endTime - End time of the volume summary.
    # Format: `yyyy-MM-dd'T'HH:mmZ` Example: `2022-09-22T09:07+0800`.
    # + return - OK 
    resource isolated function get system\-health/payments/volume\-summary(string authorization, string startTime, string endTime, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string? paymentGatewayType = (), string? paymentMethodType = ()) returns GetPaymentVolumeSummaryResponse|error {
        string resourcePath = string `/system-health/payments/volume-summary`;
        map<anydata> queryParam = {"paymentGatewayType": paymentGatewayType, "paymentMethodType": paymentMethodType, "startTime": startTime, "endTime": endTime};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetPaymentVolumeSummaryResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Delete a workflow version
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + version_id - The unique id of the workflow version.
    # + return - OK 
    resource isolated function delete versions/[int version_id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = ()) returns DeleteWorkflowSuccess|error {
        string resourcePath = string `/versions/${getEncodedUri(version_id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        DeleteWorkflowSuccess response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # List workflows
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + callout_trigger - If set to true, the operation retrieves workflows that have the callout trigger enabled. If set to false, the operation retrieves workflows that have the callout trigger disabled. If not specified, the operation will not use this filter.
    # + interval - A CRON expession that specifies a schedule (for example, `0 0 * * *`). If specified, the operation retrieves the workflow that is run based on the specified schedule.
    # + name - If specified, the operation retrieves the workflow that is in the specified name.
    # + ondemand_trigger - If set to true, the operation retrieves workflows that have the ondemand trigger enabled. If set to false, the operation retrieves workflows that have the ondemand trigger disabled. If not specified, the operation will not use this filter.
    # + scheduled_trigger - If set to true, the operation retrieves workflows that have the scheduled trigger enabled. If set to false, the operation retrieves workflows that have the scheduled trigger disabled. If not specfied, the operation will not use this filter.
    # + page - If you want to retrieve only the workflows on a specific page, you can specify the `page` number in the query.
    # + page_length - The number of workflows shown in a single call. If the `page` parameter is not specified, the operation will return only the first page of results. If there are multiple pages of results, use it with the `page` parameter to get the results on subsequent pages. The maximum value is 50.
    # + return - OK 
    resource isolated function get workflows(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), boolean? callout_trigger = (), string? interval = (), string? name = (), boolean? ondemand_trigger = (), boolean? scheduled_trigger = (), int page = 1, int page_length = 20) returns GetWorkflowsResponse|error {
        string resourcePath = string `/workflows`;
        map<anydata> queryParam = {"callout_trigger": callout_trigger, "interval": interval, "name": name, "ondemand_trigger": ondemand_trigger, "scheduled_trigger": scheduled_trigger, "page": page, "page_length": page_length};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetWorkflowsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Import a workflow
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + workflow_definition_id - The unique id of the workflow definition to import a workflow version under.
    # + version - The version number of the new workflow version to import. Must be greater than any existing version numbers.
    # + activate - Indicates whether the imported version is an active version. Default to be false.
    # + return - OK 
    resource isolated function post workflows/'import(string authorization, POSTWorkflowDefinitionImportRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), int? workflow_definition_id = (), string? version = (), boolean? activate = ()) returns Workflow|error {
        string resourcePath = string `/workflows/import`;
        map<anydata> queryParam = {"workflow_definition_id": workflow_definition_id, "version": version, "activate": activate};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        Workflow response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve workflow task usage
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + startDate - The start date of the usage data that you want to get. For example, 2019-01-01.
    # + endDate - The end date of the usage data that you want to get. For example, 2019-12-31.
    # + metrics - The type of metric that you want to get. Currently, only `taskCount` is supported. `taskCount` is the amount of task runs.
    # + return - OK 
    resource isolated function get workflows/metrics\.json(string authorization, string startDate, string endDate, string metrics, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns UsagesResponse|error {
        string resourcePath = string `/workflows/metrics.json`;
        map<anydata> queryParam = {"startDate": startDate, "endDate": endDate, "metrics": metrics};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        UsagesResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List workflow tasks
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + id - If specified, the operation retrieves the task that is with specified id.
    # + name - If specified, the operation retrieves tasks that is in the specified name.
    # + instance - If set to true, the operation retrieves workflows that have the scheduled trigger enabled. If set to false, the operation retrieves workflows that have the scheduled trigger disabled. If not specfied, the operation will not use this filter.
    # + action_type - If specified, the operation retrieves tasks that is the specified type.
    # + 'object - If specified, the operation retrieves tasks with the specified object.
    # + object_id - If specified, the operation retrieves tasks with the specified object id.
    # + call_type - If specified, the operation retrieves tasks with the specified api call type used.
    # + workflow_id - If specified, the operation retrieves tasks that for the specified workflow id.
    # + tags - If specified, the operation retrieves tasks that with the specified filter tags. Use the following syntax to specify multiple tags: `tags[]=tag_value_1&tags[]=tag_value_2`.
    # **Note:** All the workflow tasks that have any of the specified tags will be listed in the response body.
    # + page - If you want to retrieve only the workflows on a specific page, you can specify the `page` number in the query.
    # + page_length - The number of workflow tasks shown in a single call. If the `page` parameter is not specified, the operation will return only the first page of results. If there are multiple pages of results, use it with the `page` parameter to get the results on subsequent pages. The maximum value is 100.
    # + return - OK 
    resource isolated function get workflows/tasks(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string? id = (), string? name = (), boolean? instance = (), string? action_type = (), string? 'object = (), string? object_id = (), string? call_type = (), string? workflow_id = (), string[]? tags = (), int page = 1, int page_length = 20) returns TasksResponse|error {
        string resourcePath = string `/workflows/tasks`;
        map<anydata> queryParam = {"id": id, "name": name, "instance": instance, "action_type": action_type, "object": 'object, "object_id": object_id, "call_type": call_type, "workflow_id": workflow_id, "tags": tags, "page": page, "page_length": page_length};
        map<Encoding> queryParamEncoding = {"tags": {style: FORM, explode: false}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        TasksResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update workflow tasks
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + return - OK 
    resource isolated function put workflows/tasks/batch_update(string authorization, PutTasksRequest payload, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns TasksResponse|error {
        string resourcePath = string `/workflows/tasks/batch_update`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        TasksResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a workflow task
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + task_id - The unique ID of the task.
    # + return - OK 
    resource isolated function get workflows/tasks/[string task_id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns Task|error {
        string resourcePath = string `/workflows/tasks/${getEncodedUri(task_id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        Task response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Rerun a workflow task
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + task_id - The unique ID of the task.
    # + return - OK 
    resource isolated function post workflows/tasks/[string task_id]/rerun(string authorization, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns Task|error {
        string resourcePath = string `/workflows/tasks/${getEncodedUri(task_id)}/rerun`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        Task response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a workflow run
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + workflow_run_id - The unique ID of a workflow run. For example, 19080.
    resource isolated function get workflows/workflow_runs/[string workflow_run_id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns GetWorkflowResponse|error {
        string resourcePath = string `/workflows/workflow_runs/${getEncodedUri(workflow_run_id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetWorkflowResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a workflow
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + workflow_id - The unique ID of a workflow definition. For example, 19080.
    resource isolated function get workflows/[string workflow_id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns WorkflowDefinition|error {
        string resourcePath = string `/workflows/${getEncodedUri(workflow_id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        WorkflowDefinition response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Delete a workflow
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + workflow_id - The unique ID of a workflow definition. For example, 19080.
    resource isolated function delete workflows/[string workflow_id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns DeleteWorkflowSuccess|error {
        string resourcePath = string `/workflows/${getEncodedUri(workflow_id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        DeleteWorkflowSuccess response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Update a workflow
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + workflow_id - The unique ID of a workflow definition. For example, 19080.
    # + return - OK 
    resource isolated function patch workflows/[string workflow_id](string authorization, Workflows_workflow_id_body payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns WorkflowDefinition|error {
        string resourcePath = string `/workflows/${getEncodedUri(workflow_id)}`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        WorkflowDefinition response = check self.clientEp->patch(resourcePath, request, httpHeaders);
        return response;
    }
    # Export a workflow version
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + workflow_id - The ID of the workflow definition to export.
    # + version - Default result is the active version of the workflow definition. Version number and 'latest' can be used to export a specific version of the workflow definition. 
    # + return - OK 
    resource isolated function get workflows/[int workflow_id]/export(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? version = ()) returns ExportWorkflowVersionResponse|error {
        string resourcePath = string `/workflows/${getEncodedUri(workflow_id)}/export`;
        map<anydata> queryParam = {"version": version};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExportWorkflowVersionResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Run a workflow
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + workflow_id - The ID of the workflow definition you want to run.
    # + payload - Include parameters you want to pass to the workflow.
    # + return - OK 
    resource isolated function post workflows/[int workflow_id]/run(string authorization, record{} payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns WorkflowInstance|error {
        string resourcePath = string `/workflows/${getEncodedUri(workflow_id)}/run`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        WorkflowInstance response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List all versions of a workflow definition
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + workflow_id - The unique id of the workflow definition to import a workflow version under.
    # + return - OK 
    resource isolated function get workflows/[int workflow_id]/versions(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = ()) returns GetVersionsResponse|error {
        string resourcePath = string `/workflows/${getEncodedUri(workflow_id)}/versions`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetVersionsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Import a workflow version
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + workflow_id - The unique id of the workflow definition to import a workflow version under.
    # + version - The version number of the new workflow version to import. Must be greater than any existing version numbers.
    # + activate - Indicates whether the imported version is an active version. Default to be false.
    # + return - OK 
    resource isolated function post workflows/[int workflow_id]/versions/'import(string authorization, string version, Versions_import_body payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), boolean? activate = ()) returns WorkflowDefinition|error {
        string resourcePath = string `/workflows/${getEncodedUri(workflow_id)}/versions/import`;
        map<anydata> queryParam = {"version": version, "activate": activate};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        WorkflowDefinition response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Stop a workflow run
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response.
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have [Zuora Multi-Org](https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org) enabled,
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + workflow_run_id - The unique ID of a workflow run. For example, 19080.
    # + return - OK 
    resource isolated function put workflows/workflow_runs/[string workflow_run_id]/stop(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns StopWorkflowRunSuccess|error {
        string resourcePath = string `/workflows/workflow_runs/${getEncodedUri(workflow_run_id)}/stop`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        StopWorkflowRunSuccess response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # List accounts
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - accountnumber
    # - balance
    # - batch
    # - billcycleday
    # - billtoid
    # - communicationprofileid
    # - crmid
    # - currency
    # - defaultpaymentmethodid
    # - invoicetemplateid
    # - lastinvoicedate
    # - name
    # - parentid
    # - soldtoid
    # - status
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - accountnumber
    # - balance
    # - batch
    # - billcycleday
    # - billtoid
    # - communicationprofileid
    # - crmid
    # - currency
    # - defaultpaymentmethodid
    # - invoicetemplateid
    # - lastinvoicedate
    # - name
    # - parentid
    # - soldtoid
    # - status
    # + return - OK 
    resource isolated function get object\-query/accounts(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("billto"|"soldto"|"defaultpaymentmethod"|"subscriptions"|"payments"|"refunds"|"creditmemos"|"debitmemos"|"invoices"|"usages"|"paymentmethods"|"subscriptions.rateplans"|"subscriptions.rateplans.rateplancharges")[]? expand = (), string[]? filter = ()) returns QueryAccountsResponse|error {
        string resourcePath = string `/object-query/accounts`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryAccountsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve an account
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/accounts/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("billto"|"soldto"|"defaultpaymentmethod"|"subscriptions"|"payments"|"refunds"|"creditmemos"|"debitmemos"|"invoices"|"usages"|"paymentmethods"|"subscriptions.rateplans"|"subscriptions.rateplans.rateplancharges")[]? expand = (), string[]? filter = ()) returns ExpandedAccount|error {
        string resourcePath = string `/object-query/accounts/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedAccount response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List amendments
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - code
    # - effectivedate
    # - effectivepolicy
    # - name
    # - newrateplanid
    # - removedrateplanid
    # - status
    # - subscriptionid
    # - type
    # - subtype
    # - updateddate
    # + expand - Allows you to expand responses by including related object information in a single call.
    # The Amendment object does not support expanding any related objects.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - code
    # - effectivedate
    # - effectivepolicy
    # - name
    # - newrateplanid
    # - removedrateplanid
    # - status
    # - subscriptionid
    # - type
    # - subtype
    # - updateddate
    # + return - OK 
    resource isolated function get object\-query/amendments(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), string[]? expand = (), string[]? filter = ()) returns QueryAmendmentsResponse|error {
        string resourcePath = string `/object-query/amendments`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryAmendmentsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve an amendment
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # The Amendment object does not support expanding any related objects.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/amendments/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), string[]? expand = (), string[]? filter = ()) returns ExpandedAmendment|error {
        string resourcePath = string `/object-query/amendments/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedAmendment response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List bill runs
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - createdbyid
    # - updateddate
    # - billingrunnumber
    # - executeddate
    # - name
    # - numberofaccounts
    # - numberofinvoices
    # - numberofcreditmemos
    # - status
    # - targetdate
    # - batches
    # - repeattype
    # + expand - Allows you to expand responses by including related object information in a single call.
    # The Bill Run object does not support expanding any related objects.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - createdbyid
    # - updateddate
    # - billingrunnumber
    # - executeddate
    # - name
    # - numberofaccounts
    # - numberofinvoices
    # - numberofcreditmemos
    # - status
    # - targetdate
    # - batches
    # - repeattype
    # + return - OK 
    resource isolated function get object\-query/billing\-runs(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), string[]? expand = (), string[]? filter = ()) returns QueryBillingRunsResponse|error {
        string resourcePath = string `/object-query/billing-runs`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryBillingRunsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a bill run
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # The Bill Run object does not support expanding any related objects.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/billing\-runs/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), string[]? expand = (), string[]? filter = ()) returns ExpandedBillingRun|error {
        string resourcePath = string `/object-query/billing-runs/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedBillingRun response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List contacts
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - accountid
    # - country
    # - firstname
    # - lastname
    # - personalemail
    # - workemail
    # - workphone
    # + expand - Allows you to expand responses by including related object information in a single call.
    # The Contact object does not support expanding any related objects.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - accountid
    # - country
    # - firstname
    # - lastname
    # - personalemail
    # - workemail
    # - workphone
    # + return - OK 
    resource isolated function get object\-query/contacts(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), string[]? expand = (), string[]? filter = ()) returns QueryContactsResponse|error {
        string resourcePath = string `/object-query/contacts`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryContactsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a contact
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # The Contact object does not support expanding any related objects.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/contacts/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), string[]? expand = (), string[]? filter = ()) returns ExpandedContact|error {
        string resourcePath = string `/object-query/contacts/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedContact response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List credit memos
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - balance
    # - einvoicestatus
    # - memodate
    # - memonumber
    # - sourcetype
    # - status
    # - totalamount
    # - invoiceid
    # - accountid
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - balance
    # - einvoicestatus
    # - memodate
    # - memonumber
    # - sourcetype
    # - status
    # - totalamount
    # - invoiceid
    # - accountid
    # + return - OK 
    resource isolated function get object\-query/credit\-memos(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"billtocontact"|"creditmemoitems"|"creditmemoapplications")[]? expand = (), string[]? filter = ()) returns QueryCreditMemosResponse|error {
        string resourcePath = string `/object-query/credit-memos`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryCreditMemosResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a credit memo
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/credit\-memos/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"billtocontact"|"creditmemoitems"|"creditmemoapplications")[]? expand = (), string[]? filter = ()) returns ExpandedCreditMemo|error {
        string resourcePath = string `/object-query/credit-memos/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedCreditMemo response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List credit memo applications
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - effectivedate
    # - accountid
    # - applicationgroupid
    # - debitmemoid
    # - invoiceid
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - effectivedate
    # - accountid
    # - applicationgroupid
    # - debitmemoid
    # - invoiceid
    # + return - OK 
    resource isolated function get object\-query/credit\-memo\-applications(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("creditmemo")[]? expand = (), string[]? filter = ()) returns QueryCreditMemoApplicationsResponse|error {
        string resourcePath = string `/object-query/credit-memo-applications`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryCreditMemoApplicationsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a credit memo application
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/credit\-memo\-applications/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("creditmemo")[]? expand = (), string[]? filter = ()) returns ExpandedCreditMemoApplication|error {
        string resourcePath = string `/object-query/credit-memo-applications/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedCreditMemoApplication response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List credit memo items
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - excludeitembillingfromrevenueaccounting
    # - sourceitemtype
    # - chargenumber
    # - subscriptionid
    # - subscriptionnumber
    # - invoiceitemid
    # - rateplanchargeid
    # - creditmemoid
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - excludeitembillingfromrevenueaccounting
    # - fulfillmentid
    # - orderlineitemid
    # - sourceitemtype
    # - chargenumber
    # - subscriptionid
    # - subscriptionnumber
    # - invoiceitemid
    # - rateplanchargeid
    # - creditmemoid
    # + return - OK 
    resource isolated function get object\-query/credit\-memo\-items(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("subscription"|"rateplancharge")[]? expand = (), string[]? filter = ()) returns QueryCreditMemoItemsResponse|error {
        string resourcePath = string `/object-query/credit-memo-items`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryCreditMemoItemsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a credit memo item
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/credit\-memo\-items/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("subscription"|"rateplancharge")[]? expand = (), string[]? filter = ()) returns ExpandedCreditMemoItem|error {
        string resourcePath = string `/object-query/credit-memo-items/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedCreditMemoItem response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List debit memos
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - balance
    # - creditmemoid
    # - einvoicestatus
    # - memodate
    # - memonumber
    # - sourcetype
    # - status
    # - totalamount
    # - invoiceid
    # - accountid      
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - balance
    # - creditmemoid
    # - einvoicestatus
    # - memodate
    # - memonumber
    # - sourcetype
    # - status
    # - totalamount
    # - invoiceid
    # - accountid
    # + return - OK 
    resource isolated function get object\-query/debit\-memos(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"billtocontact"|"debitmemoitems")[]? expand = (), string[]? filter = ()) returns QueryDebitMemosResponse|error {
        string resourcePath = string `/object-query/debit-memos`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryDebitMemosResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a debit memo
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/debit\-memos/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"billtocontact"|"debitmemoitems")[]? expand = (), string[]? filter = ()) returns ExpandedDebitMemo|error {
        string resourcePath = string `/object-query/debit-memos/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedDebitMemo response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List debit memo items
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - creditmemoitemid
    # - excludeitembillingfromrevenueaccounting
    # - sourceitemtype
    # - chargenumber
    # - subscriptionid
    # - subscriptionnumber
    # - invoiceitemid
    # - productrateplanchargeid
    # - rateplanchargeid
    # - debitmemoid  
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - creditmemoitemid
    # - excludeitembillingfromrevenueaccounting
    # - sourceitemtype
    # - chargenumber
    # - subscriptionid
    # - subscriptionnumber
    # - invoiceitemid
    # - productrateplanchargeid
    # - rateplanchargeid
    # - debitmemoid
    # + return - OK 
    resource isolated function get object\-query/debit\-memo\-items(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("subscription"|"rateplancharge")[]? expand = (), string[]? filter = ()) returns QueryDebitMemoItemsResponse|error {
        string resourcePath = string `/object-query/debit-memo-items`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryDebitMemoItemsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a debit memo item
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/debit\-memo\-items/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("subscription"|"rateplancharge")[]? expand = (), string[]? filter = ()) returns ExpandedDebitMemoItem|error {
        string resourcePath = string `/object-query/debit-memo-items/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedDebitMemoItem response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List invoices
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - accountid
    # - amount
    # - balance
    # - duedate
    # - invoicedate
    # - invoicenumber
    # - reversed
    # - sourceid
    # - sourcetype
    # - status
    # - einvoicestatus     
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - accountid
    # - amount
    # - balance
    # - duedate
    # - invoicedate
    # - invoicenumber
    # - reversed
    # - sourceid
    # - sourcetype
    # - status
    # - einvoicestatus
    # + return - OK 
    resource isolated function get object\-query/invoices(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"billtocontact"|"invoiceitems")[]? expand = (), string[]? filter = ()) returns QueryInvoicesResponse|error {
        string resourcePath = string `/object-query/invoices`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryInvoicesResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve an invoice
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/invoices/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"billtocontact"|"invoiceitems")[]? expand = (), string[]? filter = ()) returns ExpandedInvoice|error {
        string resourcePath = string `/object-query/invoices/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedInvoice response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List invoice items
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - rateplanchargeid
    # - invoiceid
    # - accountingcode
    # - chargedate
    # - chargenumber
    # - excludeitembillingfromrevenueaccounting
    # - servicestartdate
    # - sourceitemtype
    # - subscriptionid
    # - subscriptionnumber
    # - productrateplanchargeid
    # - bookingreference
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - rateplanchargeid
    # - invoiceid
    # - accountingcode
    # - chargedate
    # - chargenumber
    # - excludeitembillingfromrevenueaccounting
    # - fulfillmentid
    # - servicestartdate
    # - sourceitemtype
    # - subscriptionid
    # - subscriptionnumber
    # - productrateplanchargeid
    # - bookingreference
    # + return - OK 
    resource isolated function get object\-query/invoice\-items(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("invoice"|"subscription"|"taxationitems"|"rateplancharge")[]? expand = (), string[]? filter = ()) returns QueryInvoiceItemsResponse|error {
        string resourcePath = string `/object-query/invoice-items`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryInvoiceItemsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve an invoice item
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/invoice\-items/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("invoice"|"subscription"|"taxationitems"|"rateplancharge")[]? expand = (), string[]? filter = ()) returns ExpandedInvoiceItem|error {
        string resourcePath = string `/object-query/invoice-items/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedInvoiceItem response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List order actions
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - subscriptionversionamendmentid
    # - orderid
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - subscriptionversionamendmentid
    # - orderid
    # + return - OK 
    resource isolated function get object\-query/order\-actions(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("subscription"|"order")[]? expand = (), string[]? filter = ()) returns QueryOrderActionsResponse|error {
        string resourcePath = string `/object-query/order-actions`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryOrderActionsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve an order action
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/order\-actions/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("subscription"|"order")[]? expand = (), string[]? filter = ()) returns ExpandedOrderAction|error {
        string resourcePath = string `/object-query/order-actions/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedOrderAction response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List order line items
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - itemname
    # - itemnumber
    # - itemstate
    # - itemtype
    # - orderid
    # - productcode
    # - productrateplanchargeid
    # - uom
    # - relatedsubscriptionnumber
    # - inlinediscounttype
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - itemname
    # - itemnumber
    # - itemstate
    # - itemtype
    # - orderid
    # - productcode
    # - productrateplanchargeid
    # - billtoid
    # - soldto
    # - owneraccountid
    # - invoiceowneraccountid
    # - uom
    # - relatedsubscriptionnumber
    # - originalorderid
    # - originalordernumber
    # - originalorderlineitemid
    # - inlinediscounttype
    # + return - OK 
    resource isolated function get object\-query/order\-line\-items(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("invoiceitems")[]? expand = (), string[]? filter = ()) returns QueryOrderLineItemsResponse|error {
        string resourcePath = string `/object-query/order-line-items`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryOrderLineItemsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve an order line item
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/order\-line\-items/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("invoiceitems")[]? expand = (), string[]? filter = ()) returns ExpandedOrderLineItem|error {
        string resourcePath = string `/object-query/order-line-items/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedOrderLineItem response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List orders
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - orderdate
    # - ordernumber
    # - accountid
    # - status
    # - invoicescheduleid
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - orderdate
    # - ordernumber
    # - accountid
    # - status
    # - invoicescheduleid
    # + return - OK 
    resource isolated function get object\-query/orders(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"orderlineitems"|"orderlineitems.invoiceitems"|"orderactions"|"orderactions.subscription"|"orderactions.subscription.rateplans"|"orderactions.subscription.rateplans.rateplancharges")[]? expand = (), string[]? filter = ()) returns QueryOrderssResponse|error {
        string resourcePath = string `/object-query/orders`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryOrderssResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve an order
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/orders/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"orderlineitems"|"orderlineitems.invoiceitems"|"orderactions"|"orderactions.subscription"|"orderactions.subscription.rateplans"|"orderactions.subscription.rateplans.rateplancharges")[]? expand = (), string[]? filter = ()) returns ExpandedOrders|error {
        string resourcePath = string `/object-query/orders/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedOrders response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List payments
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - accountid
    # - amount
    # - effectivedate
    # - gatewayorderid
    # - gatewaystate
    # - paymentmethodid
    # - paymentmethodsnapshotid
    # - paymentnumber
    # - referenceid
    # - source
    # - sourcename
    # - status
    # - unappliedamount
    # - createddate
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - accountid
    # - amount
    # - effectivedate
    # - gatewayorderid
    # - gatewaystate
    # - paymentmethodid
    # - paymentmethodsnapshotid
    # - paymentnumber
    # - referenceid
    # - source
    # - sourcename
    # - status
    # - unappliedamount
    # - createddate
    # + return - OK 
    resource isolated function get object\-query/payments(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"account.billto"|"account.soldto"|"paymentmethod"|"paymentapplications")[]? expand = (), string[]? filter = ()) returns QueryPaymentsResponse|error {
        string resourcePath = string `/object-query/payments`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryPaymentsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a payment
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/payments/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"account.billto"|"account.soldto"|"paymentmethod"|"paymentapplications")[]? expand = (), string[]? filter = ()) returns ExpandedPayment|error {
        string resourcePath = string `/object-query/payments/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedPayment response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List payment applications
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - effectivedate
    # - accountid
    # - paymentid
    # - applicationgroupid
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - effectivedate
    # - accountid
    # - paymentid
    # - applicationgroupid
    # + return - OK 
    resource isolated function get object\-query/payment\-applications(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("payment")[]? expand = (), string[]? filter = ()) returns QueryPaymentApplicationsResponse|error {
        string resourcePath = string `/object-query/payment-applications`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryPaymentApplicationsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a payment application
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/payment\-applications/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("payment")[]? expand = (), string[]? filter = ()) returns ExpandedPaymentApplication|error {
        string resourcePath = string `/object-query/payment-applications/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedPaymentApplication response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List payment methods
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - accountid
    # - achaccountname
    # - achbankname
    # - achcountry
    # - active
    # - issystem
    # - businessidentificationcode
    # - country
    # - creditcardexpirationmonth
    # - creditcardexpirationyear
    # - creditcardmasknumber
    # - lasttransactiondatetime
    # - paypalbaid
    # - type
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - accountid
    # - achaccountname
    # - achbankname
    # - achcountry
    # - active
    # - issystem
    # - businessidentificationcode
    # - country
    # - creditcardexpirationmonth
    # - creditcardexpirationyear
    # - creditcardmasknumber
    # - lasttransactiondatetime
    # - paypalbaid
    # - type
    # + return - OK 
    resource isolated function get object\-query/payment\-methods(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account")[]? expand = (), string[]? filter = ()) returns QueryPaymentMethodsResponse|error {
        string resourcePath = string `/object-query/payment-methods`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryPaymentMethodsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a payment method
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/payment\-methods/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account")[]? expand = (), string[]? filter = ()) returns ExpandedPaymentMethod|error {
        string resourcePath = string `/object-query/payment-methods/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedPaymentMethod response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List payment method snapshots
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - accountid
    # - country
    # - creditcardcountry
    # - paymentmethodid
    # + expand - Allows you to expand responses by including related object information in a single call.
    # The Payment Method Snapshot object does not support expanding any related objects.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - accountid
    # - country
    # - creditcardcountry
    # - paymentmethodid
    # + return - OK 
    resource isolated function get object\-query/payment\-method\-snapshots(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), string[]? expand = (), string[]? filter = ()) returns QueryPaymentMethodSnapshotsResponse|error {
        string resourcePath = string `/object-query/payment-method-snapshots`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryPaymentMethodSnapshotsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a payment method snapshot
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # The Payment Method Snapshot object does not support expanding any related objects.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/payment\-method\-snapshots/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), string[]? expand = (), string[]? filter = ()) returns ExpandedPaymentMethodSnapshot|error {
        string resourcePath = string `/object-query/payment-method-snapshots/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedPaymentMethodSnapshot response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List payment runs
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - executeddate
    # - numberofpayments
    # - paymentrunnumber
    # - status
    # - targetdate
    # + expand - Allows you to expand responses by including related object information in a single call.
    # The Payment Run object does not support expanding any related objects.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - executeddate
    # - numberofpayments
    # - paymentrunnumber
    # - status
    # - targetdate
    # + return - OK 
    resource isolated function get object\-query/payment\-runs(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), string[]? expand = (), string[]? filter = ()) returns QueryPaymentRunsResponse|error {
        string resourcePath = string `/object-query/payment-runs`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryPaymentRunsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a payment run
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # The Payment Run object does not support expanding any related objects.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/payment\-runs/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), string[]? expand = (), string[]? filter = ()) returns ExpandedPaymentRun|error {
        string resourcePath = string `/object-query/payment-runs/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedPaymentRun response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List payment schedules
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - number
    # - accountid
    # - invoiceid
    # - debitmemoid
    # - occurrences
    # - status
    # + expand - Allows you to expand responses by including related object information in a single call.
    # The Payment Schedule object does not support expanding any related objects.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - number
    # - accountid
    # - invoiceid
    # - debitmemoid
    # - occurrences
    # - status
    # + return - OK 
    resource isolated function get object\-query/payment\-schedules(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), string[]? expand = (), string[]? filter = ()) returns QueryPaymentSchedulesResponse|error {
        string resourcePath = string `/object-query/payment-schedules`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryPaymentSchedulesResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a payment schedule
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # The Payment Schedule object does not support expanding any related objects.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/payment\-schedules/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), string[]? expand = (), string[]? filter = ()) returns ExpandedPaymentSchedule|error {
        string resourcePath = string `/object-query/payment-schedules/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedPaymentSchedule response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List payment schedule items
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - number
    # - accountid
    # - invoiceid
    # - debitmemoid
    # - paymentscheduleid
    # - scheduleddate
    # - status
    # - paymentid
    # - cancellationreason
    # + expand - Allows you to expand responses by including related object information in a single call.
    # The Payment Schedule Item object does not support expanding any related objects.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - number
    # - accountid
    # - invoiceid
    # - debitmemoid
    # - paymentscheduleid
    # - scheduleddate
    # - status
    # - paymentid
    # - cancellationreason
    # + return - OK 
    resource isolated function get object\-query/payment\-schedule\-items(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), string[]? expand = (), string[]? filter = ()) returns QueryPaymentScheduleItemsResponse|error {
        string resourcePath = string `/object-query/payment-schedule-items`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryPaymentScheduleItemsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a payment schedule item
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # The Payment Schedule Item object does not support expanding any related objects.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/payment\-schedule\-items/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), string[]? expand = (), string[]? filter = ()) returns ExpandedPaymentScheduleItem|error {
        string resourcePath = string `/object-query/payment-schedule-items/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedPaymentScheduleItem response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List prepaid balances
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - startdate
    # - accountid
    # - origsubscriptionid
    # - uom
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - startdate
    # - accountid
    # - origsubscriptionid
    # - uom
    # + return - OK 
    resource isolated function get object\-query/prepaid\-balances(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"origsubscription")[]? expand = (), string[]? filter = ()) returns QueryPrepaidBalancesResponse|error {
        string resourcePath = string `/object-query/prepaid-balances`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryPrepaidBalancesResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a prepaid balance
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/prepaid\-balances/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"origsubscription")[]? expand = (), string[]? filter = ()) returns ExpandedPrepaidBalance|error {
        string resourcePath = string `/object-query/prepaid-balances/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedPrepaidBalance response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List prepaid balance funds
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - accountid
    # - enddate
    # - prepaidbalanceid
    # - sourceid
    # - startdate
    # - vpsummaryid
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - accountid
    # - enddate
    # - prepaidbalanceid
    # - sourceid
    # - startdate
    # - vpsummaryid
    # + return - OK 
    resource isolated function get object\-query/prepaid\-balance\-funds(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"prepaidbalance"|"source"|"vpsummary")[]? expand = (), string[]? filter = ()) returns QueryPrepaidBalanceFundsResponse|error {
        string resourcePath = string `/object-query/prepaid-balance-funds`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryPrepaidBalanceFundsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a prepaid balance fund
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/prepaid\-balance\-funds/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"prepaidbalance"|"source"|"vpsummary")[]? expand = (), string[]? filter = ()) returns ExpandedPrepaidBalanceFund|error {
        string resourcePath = string `/object-query/prepaid-balance-funds/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedPrepaidBalanceFund response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List prepaid balance transactions
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - accountid
    # - prepaidbalanceid
    # - fundid
    # - sourceid
    # - transactiondate
    # - prepaidbalancetransactiontype
    # - createddate
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - accountid
    # - prepaidbalanceid
    # - fundid
    # - sourceid
    # - transactiondate
    # - createddate
    # + return - OK 
    resource isolated function get object\-query/prepaid\-balance\-transactions(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"prepaidbalance"|"fund")[]? expand = (), string[]? filter = ()) returns QueryPrepaidBalanceTransactionsResponse|error {
        string resourcePath = string `/object-query/prepaid-balance-transactions`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryPrepaidBalanceTransactionsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a prepaid balance transaction
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/prepaid\-balance\-transactions/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"prepaidbalance"|"fund")[]? expand = (), string[]? filter = ()) returns ExpandedPrepaidBalanceTransaction|error {
        string resourcePath = string `/object-query/prepaid-balance-transactions/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedPrepaidBalanceTransaction response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List processed usage records
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - usageid
    # - billingperiodenddate
    # - billingperiodstartdate   
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - usageid
    # - billingperiodenddate
    # - billingperiodstartdate
    # + return - OK 
    resource isolated function get object\-query/processed\-usages(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("usage"|"invoiceitem"|"creditmemoitem")[]? expand = (), string[]? filter = ()) returns QueryProcessedUsagesResponse|error {
        string resourcePath = string `/object-query/processed-usages`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryProcessedUsagesResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a processed usage record
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/processed\-usages/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("usage"|"invoiceitem"|"creditmemoitem")[]? expand = (), string[]? filter = ()) returns ExpandedProcessedUsage|error {
        string resourcePath = string `/object-query/processed-usages/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedProcessedUsage response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List products
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - name
    # - effectiveenddate
    # - effectivestartdate
    # - sku
    # - productnumber
    # - category
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - name
    # - effectiveenddate
    # - effectivestartdate
    # - sku
    # - productnumber
    # - category
    # + return - OK 
    resource isolated function get object\-query/products(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("productrateplans"|"productrateplans.productrateplancharges")[]? expand = (), string[]? filter = ()) returns QueryProductsResponse|error {
        string resourcePath = string `/object-query/products`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryProductsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a product
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/products/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("productrateplans"|"productrateplans.productrateplancharges")[]? expand = (), string[]? filter = ()) returns ExpandedProduct|error {
        string resourcePath = string `/object-query/products/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedProduct response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List product rate plans
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - productid
    # - name
    # - effectivestartdate
    # - effectiveenddate
    # - productrateplannumber
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - productid
    # - name
    # - effectivestartdate
    # - effectiveenddate
    # - productrateplannumber
    # + return - OK 
    resource isolated function get object\-query/product\-rate\-plans(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("product"|"productrateplancharges")[]? expand = (), string[]? filter = ()) returns QueryProductRatePlansResponse|error {
        string resourcePath = string `/object-query/product-rate-plans`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryProductRatePlansResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a product rate plan
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/product\-rate\-plans/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("product"|"productrateplancharges")[]? expand = (), string[]? filter = ()) returns ExpandedProductRatePlan|error {
        string resourcePath = string `/object-query/product-rate-plans/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedProductRatePlan response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List product rate plan charges
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - billcycleday
    # - chargemodel
    # - productrateplanchargenumber
    # - productrateplanid
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - billcycleday
    # - chargemodel
    # - chargetype
    # - isprepaid
    # - productrateplanchargenumber
    # - productrateplanid
    # + return - OK 
    resource isolated function get object\-query/product\-rate\-plan\-charges(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("productrateplan")[]? expand = (), string[]? filter = ()) returns QueryProductRatePlanChargesResponse|error {
        string resourcePath = string `/object-query/product-rate-plan-charges`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryProductRatePlanChargesResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a product rate plan charge
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/product\-rate\-plan\-charges/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("productrateplan")[]? expand = (), string[]? filter = ()) returns ExpandedProductRatePlanCharge|error {
        string resourcePath = string `/object-query/product-rate-plan-charges/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedProductRatePlanCharge response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List product rate plan charge tiers
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - productrateplanchargeid
    # - productchargedefinitionid
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - productrateplanchargeid
    # - productchargedefinitionid
    # + return - OK 
    resource isolated function get object\-query/product\-rate\-plan\-charge\-tiers(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("productrateplancharge")[]? expand = (), string[]? filter = ()) returns QueryProductRatePlanChargeTiersResponse|error {
        string resourcePath = string `/object-query/product-rate-plan-charge-tiers`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryProductRatePlanChargeTiersResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a product rate plan charge tier
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/product\-rate\-plan\-charge\-tiers/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("productrateplancharge")[]? expand = (), string[]? filter = ()) returns ExpandedProductRatePlanChargeTier|error {
        string resourcePath = string `/object-query/product-rate-plan-charge-tiers/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedProductRatePlanChargeTier response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List rate plans
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - productid
    # - amendmentid
    # - subscriptionid
    # - subscriptionownerid
    # - externallymanagedplanid
    # - subscriptionrateplannumber
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - productid
    # - amendmentid
    # - subscriptionid
    # - subscriptionownerid
    # - invoiceownerid
    # - externallymanagedplanid
    # - originalrateplanid
    # - subscriptionofferid
    # - subscriptionrateplannumber
    # + return - OK 
    resource isolated function get object\-query/rate\-plans(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("subscription"|"productrateplan"|"rateplancharges")[]? expand = (), string[]? filter = ()) returns QueryRatePlansResponse|error {
        string resourcePath = string `/object-query/rate-plans`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryRatePlansResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a rate plan
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/rate\-plans/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("subscription"|"productrateplan"|"rateplancharges")[]? expand = (), string[]? filter = ()) returns ExpandedRatePlan|error {
        string resourcePath = string `/object-query/rate-plans/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedRatePlan response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List rate plan charges
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - rateplanid
    # - chargenumber
    # - invoicescheduleid
    # - isprepaid
    # - originalid
    # - productchargedefinitionid
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - rateplanid
    # - chargenumber
    # - invoicescheduleid
    # - isprepaid
    # - originalid
    # - subscriptionid
    # - subscriptionownerid
    # - invoiceownerid
    # - productchargedefinitionid
    # + return - OK 
    resource isolated function get object\-query/rate\-plan\-charges(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("rateplan"|"productrateplancharge")[]? expand = (), string[]? filter = ()) returns QueryRatePlanChargesResponse|error {
        string resourcePath = string `/object-query/rate-plan-charges`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryRatePlanChargesResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a rate plan charge
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/rate\-plan\-charges/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("rateplan"|"productrateplancharge")[]? expand = (), string[]? filter = ()) returns ExpandedRatePlanCharge|error {
        string resourcePath = string `/object-query/rate-plan-charges/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedRatePlanCharge response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List rating results
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - accountid
    # - subscriptionid
    # - rateplanchargeid
    # - servicestartdate
    # - serviceenddate
    # - status
    # - ispartial
    # - invoiceitemid
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - accountid
    # - subscriptionid
    # - rateplanchargeid
    # - servicestartdate
    # - serviceenddate
    # - status
    # - ispartial
    # - invoiceitemid
    # + return - OK 
    resource isolated function get object\-query/rating\-results(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"rateplancharge"|"subscription"|"invoiceitem")[]? expand = (), string[]? filter = ()) returns QueryRatingResultsResponse|error {
        string resourcePath = string `/object-query/rating-results`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryRatingResultsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a rating result
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/rating\-results/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"rateplancharge"|"subscription"|"invoiceitem")[]? expand = (), string[]? filter = ()) returns ExpandedRatingResult|error {
        string resourcePath = string `/object-query/rating-results/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedRatingResult response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List refunds
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - accountid
    # - paymentmethodsnapshotid
    # - amount
    # - paymentmethodid
    # - reasoncode
    # - refunddate
    # - refundnumber
    # - sourcetype
    # - status
    # - type
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - accountid
    # - paymentmethodsnapshotid
    # - amount
    # - paymentmethodid
    # - reasoncode
    # - refunddate
    # - refundnumber
    # - sourcetype
    # - status
    # - type
    # + return - OK 
    resource isolated function get object\-query/refunds(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"account.billto"|"account.soldto"|"paymentmethod"|"refundapplications"|"refundapplications.payment"|"refundapplications.refundapplicationitems")[]? expand = (), string[]? filter = ()) returns QueryRefundsResponse|error {
        string resourcePath = string `/object-query/refunds`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryRefundsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a refund
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/refunds/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"account.billto"|"account.soldto"|"paymentmethod"|"refundapplications"|"refundapplications.payment"|"refundapplications.refundapplicationitems")[]? expand = (), string[]? filter = ()) returns ExpandedRefund|error {
        string resourcePath = string `/object-query/refunds/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedRefund response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List refund applications
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - accountid
    # - applicationgroupid
    # - creditmemoid
    # - effectivedate
    # - paymentid
    # - refundid
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - accountid
    # - applicationgroupid
    # - creditmemoid
    # - effectivedate
    # - paymentid
    # - refundid
    # + return - OK 
    resource isolated function get object\-query/refund\-applications(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("refund"|"payment"|"refundapplicationitems")[]? expand = (), string[]? filter = ()) returns QueryRefundApplicationsResponse|error {
        string resourcePath = string `/object-query/refund-applications`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryRefundApplicationsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a refund application
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/refund\-applications/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("refund"|"payment"|"refundapplicationitems")[]? expand = (), string[]? filter = ()) returns ExpandedRefundApplication|error {
        string resourcePath = string `/object-query/refund-applications/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedRefundApplication response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List refund application items
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # + return - OK 
    resource isolated function get object\-query/refund\-application\-items(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("refundapplication")[]? expand = (), string[]? filter = ()) returns QueryRefundApplicationItemsResponse|error {
        string resourcePath = string `/object-query/refund-application-items`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryRefundApplicationItemsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a refund application item
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/refund\-application\-items/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("refundapplication")[]? expand = (), string[]? filter = ()) returns ExpandedRefundApplicationItem|error {
        string resourcePath = string `/object-query/refund-application-items/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedRefundApplicationItem response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List subscriptions
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - accountid
    # - contracteffectivedate
    # - creatoraccountid
    # - creatorinvoiceownerid
    # - invoiceownerid
    # - name
    # - originalid
    # - previoussubscriptionid
    # - renewalterm
    # - status
    # - islatestversion
    # - subscriptionversionamendmentid
    # - termenddate
    # - termstartdate
    # - version
    # - cmrr
    # - externallymanagedby
    # - invoicescheduleid
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - accountid
    # - contracteffectivedate
    # - creatoraccountid
    # - creatorinvoiceownerid
    # - invoiceownerid
    # - name
    # - originalid
    # - previoussubscriptionid
    # - renewalterm
    # - status
    # - islatestversion
    # - subscriptionversionamendmentid
    # - termenddate
    # - termstartdate
    # - version
    # - cmrr
    # - externallymanagedby
    # - invoicescheduleid
    # - quotenumber__qt
    # + return - OK 
    resource isolated function get object\-query/subscriptions(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"invoiceowner"|"billtocontact"|"invoiceitems"|"rateplans"|"rateplans.rateplancharges"|"account.billto"|"account.soldto"|"account.paymentmethods")[]? expand = (), string[]? filter = ()) returns QuerySubscriptionsResponse|error {
        string resourcePath = string `/object-query/subscriptions`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QuerySubscriptionsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a subscription
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/subscriptions/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"invoiceowner"|"billtocontact"|"invoiceitems"|"rateplans"|"rateplans.rateplancharges"|"account.billto"|"account.soldto"|"account.paymentmethods")[]? expand = (), string[]? filter = ()) returns ExpandedSubscription|error {
        string resourcePath = string `/object-query/subscriptions/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedSubscription response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List taxation items
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - invoiceitemid
    # + expand - Allows you to expand responses by including related object information in a single call.
    # The Taxation Item object does not support expanding related objects.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - invoiceitemid
    # + return - OK 
    resource isolated function get object\-query/taxation\-items(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), string[]? expand = (), string[]? filter = ()) returns QueryTaxationItemsResponse|error {
        string resourcePath = string `/object-query/taxation-items`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryTaxationItemsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a taxation item
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # The Taxation Item object does not support expanding related objects.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/taxation\-items/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), string[]? expand = (), string[]? filter = ()) returns ExpandedTaxationItem|error {
        string resourcePath = string `/object-query/taxation-items/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedTaxationItem response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List usage records
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - updateddate
    # - accountid
    # - accountnumber
    # - enddatetime
    # - quantity
    # - rbestatus
    # - startdatetime
    # - uom
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - updateddate
    # - accountid
    # - accountnumber
    # - enddatetime
    # - quantity
    # - rbestatus
    # - startdatetime
    # - uom
    # + return - OK 
    resource isolated function get object\-query/usages(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account")[]? expand = (), string[]? filter = ()) returns QueryUsagesResponse|error {
        string resourcePath = string `/object-query/usages`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryUsagesResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a usage record
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/usages/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account")[]? expand = (), string[]? filter = ()) returns ExpandedUsage|error {
        string resourcePath = string `/object-query/usages/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedUsage response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List validity period summaries
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # Supported sortable fields: 
    # - id
    # - prepaidbalanceid
    # - startdate
    # - subscriptionnumber
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # Supported filterable fields: 
    # - id
    # - prepaidbalanceid
    # - startdate
    # - subscriptionnumber
    # + return - OK 
    resource isolated function get object\-query/validity\-period\-summaries(string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"prepaidbalance")[]? expand = (), string[]? filter = ()) returns QueryValidityPeriodSummarysResponse|error {
        string resourcePath = string `/object-query/validity-period-summaries`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryValidityPeriodSummarysResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a validity period summary
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + 'key - Object ID or Number.
    # + pageSize - The maximum number of results to return in a single page. If the specified `pageSize` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/validity\-period\-summaries/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), ("account"|"prepaidbalance")[]? expand = (), string[]? filter = ()) returns ExpandedValidityPeriodSummary|error {
        string resourcePath = string `/object-query/validity-period-summaries/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ExpandedValidityPeriodSummary response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List custom objects
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + customObjectName - Custom Object Name with NameSpace, e.g. default__cars
    # + pageSize - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/[string customObjectName](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? pageSize = (), string? cursor = (), string[]? sort = (), string[]? expand = (), string[]? filter = ()) returns QueryCustomObjectsResponse|error {
        string resourcePath = string `/object-query/${getEncodedUri(customObjectName)}`;
        map<anydata> queryParam = {"pageSize": pageSize, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        QueryCustomObjectsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a custom object
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + customObjectName - Custom Object Name with NameSpace, e.g. default__cars
    # + 'key - Object ID.
    # + page_size - The maximum number of results to return in a single page. If the specified `page_size` is less than 1 or greater than 50, Zuora will return a 400 error.
    # + cursor - A cursor for use in pagination. A cursor defines the starting place in a list. For instance, if you make a list request and receive 100 objects, ending with `next_page=W3sib3JkZXJ=`, your subsequent call can include `cursor=W3sib3JkZXJ=` in order to fetch the next page of the list.
    # + sort - A case-sensitive query parameter that specifies the sort order of the list, which can be either ascending (e.g. `accountnumber.ASC`) or descending (e.g. `accountnumber.DESC`). You cannot sort on properties in arrays. If the array-type properties are specified for the `sort[]` parameter, they are ignored.
    # + expand - Allows you to expand responses by including related object information in a single call.
    # + filter - A case-sensitive filter on the list.
    # + return - OK 
    resource isolated function get object\-query/[string customObjectName]/[string 'key](string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? authorization = (), int? page_size = (), string? cursor = (), string[]? sort = (), string[]? expand = (), string[]? filter = ()) returns json|error {
        string resourcePath = string `/object-query/${getEncodedUri(customObjectName)}/${getEncodedUri('key)}`;
        map<anydata> queryParam = {"page_size": page_size, "cursor": cursor, "sort[]": sort, "expand[]": expand, "filter[]": filter};
        map<Encoding> queryParamEncoding = {"sort[]": {style: FORM, explode: true}, "expand[]": {style: FORM, explode: true}, "filter[]": {style: FORM, explode: true}};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam, queryParamEncoding);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Authorization": authorization};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        json response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List data query jobs
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + queryStatus - Filters the list of query jobs by status.
    # + pageSize - The number of records returned per page in the response.
    # + return - OK 
    resource isolated function get query/jobs(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), "accepted"|"in_progress"|"completed"|"failed"|"cancelled"? queryStatus = (), int pageSize = 20) returns GetDataQueryJobsResponse|error {
        string resourcePath = string `/query/jobs`;
        map<anydata> queryParam = {"queryStatus": queryStatus, "pageSize": pageSize};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetDataQueryJobsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Submit a data query
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + return - OK 
    resource isolated function post query/jobs(string authorization, SubmitDataQueryRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns SubmitDataQueryResponse|error {
        string resourcePath = string `/query/jobs`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        SubmitDataQueryResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a data query job
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + jobId - Internal identifier of the query job.
    # + return - OK 
    resource isolated function get query/jobs/[string jobId](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns GetDataQueryJobResponse|error {
        string resourcePath = string `/query/jobs/${getEncodedUri(jobId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetDataQueryJobResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Cancel a data query job
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + jobId - Internal identifier of the query job.
    # + return - OK 
    resource isolated function delete query/jobs/[string jobId](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns DeleteDataQueryJobResponse|error {
        string resourcePath = string `/query/jobs/${getEncodedUri(jobId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        DeleteDataQueryJobResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Submit an aggregate query job
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + return - OK 
    resource isolated function post v1/batch\-query(string authorization, SubmitBatchQueryRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns SubmitBatchQueryResponse|error {
        string resourcePath = string `/v1/batch-query/`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        SubmitBatchQueryResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve the last completed aggregate query job
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + partner - The unique ID of a data integration partner. 
    # + project - The unique ID of a data integration project for a particular partner.
    # + return - OK 
    resource isolated function get v1/batch\-query/jobs/partner/[string partner]/project/[string project](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns GetAggregateQueryJobResponse|error {
        string resourcePath = string `/v1/batch-query/jobs/partner/${getEncodedUri(partner)}/project/${getEncodedUri(project)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetAggregateQueryJobResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve an aggregate query job
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + jobid - Internal identifier of the query job.
    # + return - OK 
    resource isolated function get v1/batch\-query/jobs/[string jobid](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns GetAggregateQueryJobResponse|error {
        string resourcePath = string `/v1/batch-query/jobs/${getEncodedUri(jobid)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetAggregateQueryJobResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Cancel a running aggregate query job
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + jobid - Internal identifier of the query job.
    # + return - OK 
    resource isolated function delete v1/batch\-query/jobs/[string jobid](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns DeleteBatchQueryJobResponse|error {
        string resourcePath = string `/v1/batch-query/jobs/${getEncodedUri(jobid)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        DeleteBatchQueryJobResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Download a template
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + deployment_template_id - Id which template needs to be downloaded.
    # + return - Successfully downloaded the template. 
    resource isolated function get deployment\-manager/deployment_artifacts(string authorization, string deployment_template_id, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns JsonNode|error {
        string resourcePath = string `/deployment-manager/deployment_artifacts`;
        map<anydata> queryParam = {"deployment_template_id": deployment_template_id};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        JsonNode response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Compare settings between a source tenant and a target tenant
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + tenant - Customers need to specify tenant ID.
    # + return - OK 
    resource isolated function post deployment\-manager/deployment_artifacts/compare(string authorization, string tenant, Deployment_artifacts_compare_body payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns CompareSchemaInfoResponse|error {
        string resourcePath = string `/deployment-manager/deployment_artifacts/compare`;
        map<anydata> queryParam = {"tenant": tenant};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        mime:Entity[] bodyParts = check createBodyParts(payload);
        request.setBodyParts(bodyParts);
        CompareSchemaInfoResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Migrate settings from source tenant to target tenant
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + tenant - Customers need to specify tenant ID in query parameter.
    # + payload - Request Details.
    # + return - Successfully migrated from source to target. 
    resource isolated function post deployment\-manager/deployment_artifacts/deploy(string authorization, string tenant, TemplateMigrationClientRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns MigrationClientResponse|error {
        string resourcePath = string `/deployment-manager/deployment_artifacts/deploy`;
        map<anydata> queryParam = {"tenant": tenant};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        MigrationClientResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List all details of source components
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + return - Successfully retrieved the template metadata. 
    resource isolated function get deployment\-manager/deployment_artifacts/retrieve\-settings(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns SettingSourceComponentResponse|error {
        string resourcePath = string `/deployment-manager/deployment_artifacts/retrieve-settings`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        SettingSourceComponentResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List all templates
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + return - Successfully received all templates throught Template Response Object. 
    resource isolated function get deployment\-manager/deployment_templates(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns TemplateResponse|error {
        string resourcePath = string `/deployment-manager/deployment_templates`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        TemplateResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a deployment template
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + payload - CreateTemplateRequestContent JSON object which contains the details to create a template.
    # + return - Successfully created the template. 
    resource isolated function post deployment\-manager/deployment_templates(string authorization, CreateTemplateRequestContent payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns TemplateDetailResponse|error {
        string resourcePath = string `/deployment-manager/deployment_templates`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        TemplateDetailResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List all details of a template
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + id - The ID of the template that needs to be retrieved.
    # + return - Successfully received the template. 
    resource isolated function get deployment\-manager/deployment_templates/[string id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns TemplateDetailResponse|error {
        string resourcePath = string `/deployment-manager/deployment_templates/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        TemplateDetailResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Delete a template
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + id - The ID of the template that needs to be deleted.
    # + return - Successfully deleted the template. 
    resource isolated function delete deployment\-manager/deployment_templates/[string id](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns http:Response|error {
        string resourcePath = string `/deployment-manager/deployment_templates/${getEncodedUri(id)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Response response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # Compare and deploy a source tenant to a target tenant
    #
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header. 
    resource isolated function post deployment\-manager/deployments/tenants(Deployments_tenants_body payload, string? zuoraEntityIds = ()) returns DeploymentManagerResponse|error {
        string resourcePath = string `/deployment-manager/deployments/tenants`;
        map<any> headerValues = {"Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        mime:Entity[] bodyParts = check createBodyParts(payload);
        request.setBodyParts(bodyParts);
        DeploymentManagerResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Compare and deploy a template to a tenant
    #
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header. 
    resource isolated function post deployment\-manager/deployments/templates(Deployments_templates_body payload, string? zuoraEntityIds = ()) returns DeploymentManagerResponse|error {
        string resourcePath = string `/deployment-manager/deployments/templates`;
        map<any> headerValues = {"Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        mime:Entity[] bodyParts = check createBodyParts(payload);
        request.setBodyParts(bodyParts);
        DeploymentManagerResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Revert a deployment
    #
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header. 
    # + migrationId - The unique ID of a migration.
    resource isolated function post deployment\-manager/deployments/[string migrationId]/revert(string? zuoraEntityIds = ()) returns Inline_response_200_6|error {
        string resourcePath = string `/deployment-manager/deployments/${getEncodedUri(migrationId)}/revert`;
        map<any> headerValues = {"Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        Inline_response_200_6 response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a deployment log
    #
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header. 
    # + migrationId - The unique ID of a migration.
    resource isolated function get deployment\-manager/deployments/[string migrationId](string? zuoraEntityIds = ()) returns Inline_response_200_7|error {
        string resourcePath = string `/deployment-manager/deployments/${getEncodedUri(migrationId)}`;
        map<any> headerValues = {"Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        Inline_response_200_7 response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Compare and deploy the product catalog of a tenant to a target tenant
    #
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header. 
    resource isolated function post deployment\-manager/deployments/tenant/product_catalog(Tenant_product_catalog_body payload, string? zuoraEntityIds = ()) returns DeploymentManagerResponse|error {
        string resourcePath = string `/deployment-manager/deployments/tenant/product_catalog`;
        map<any> headerValues = {"Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        mime:Entity[] bodyParts = check createBodyParts(payload);
        request.setBodyParts(bodyParts);
        DeploymentManagerResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Compare and deploy a template for product catalog to a tenant
    #
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header. 
    resource isolated function post deployment\-manager/deployments/template/product_catalog(Template_product_catalog_body payload, string? zuoraEntityIds = ()) returns DeploymentManagerResponse|error {
        string resourcePath = string `/deployment-manager/deployments/template/product_catalog`;
        map<any> headerValues = {"Zuora-Entity-Ids": zuoraEntityIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        mime:Entity[] bodyParts = check createBodyParts(payload);
        request.setBodyParts(bodyParts);
        DeploymentManagerResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Submit a data labeling job
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + return - OK 
    resource isolated function post v1/multi\-organizations/data\-labeling\-job(string authorization, SubmitDataLabelingJobRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraTrackId = ()) returns SubmitDataLabelingJobResponse|error {
        string resourcePath = string `/v1/multi-organizations/data-labeling-job`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        SubmitDataLabelingJobResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a data labeling job
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + jobId - Identifier of the data labeling job.
    # + return - OK 
    resource isolated function get v1/multi\-organizations/data\-labeling\-job/[string jobId](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraTrackId = ()) returns GetDataLabelingJobResponse|error {
        string resourcePath = string `/v1/multi-organizations/data-labeling-job/${getEncodedUri(jobId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GetDataLabelingJobResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Regenerate booking transactions
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + onlyReSend - If `onlyReSend` is true, existing booking transactions in the database will not be overridden and sent into Revenue for re-collecting, i.e. regenerate_flag is Y.
    # If `onlyReSend` is false, existing booking transactions in the database will be overridden and sent into Revenue, no matter what is the value of `reMigrate`.
    # **Note:** If `onlyReSend` is true, the `reMigrate` can't be true.
    # + reMigrate - If `reMigrate` is true, existing booking transactions in the database will be overridden and sent into Revenue for re-collecting, i.e. regenerate_flag is Y.
    # If `reMigrate` is false, existing booking transactions in the database will be overridden and sent into Revenue with regenerate_flag as N.
    # **Note:** If `onlyReSend` is true, the `reMigrate` can't be true.
    resource isolated function post v1/uno\-regenerate/booking\-transaction(string authorization, RegenerateBookingRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), boolean? onlyReSend = (), boolean? reMigrate = ()) returns RegenerateTransactionObjectResponse|error {
        string resourcePath = string `/v1/uno-regenerate/booking-transaction`;
        map<anydata> queryParam = {"onlyReSend": onlyReSend, "reMigrate": reMigrate};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        RegenerateTransactionObjectResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Regenerate billing transactions
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + onlyReSend - If `onlyReSend` is true, existing booking transactions in the database will not be overridden and sent into Revenue for re-collecting, i.e. regenerate_flag is Y.
    # If `onlyReSend` is false, Whether existing booking transactions in the database will be overridden and sent into Revenue for re-collecting depends on the value of `reMigrate`.
    # **Note:** If `onlyReSend` is true, the `reMigrate` can't be true.
    # + reMigrate - If `reMigrate` is true, existing booking transactions in the database will be overridden and sent into Revenue for re-collecting, i.e. regenerate_flag is Y.
    # If `reMigrate` is false, existing booking transactions in the database will not be overridden and sent into Revenue with regenerate_flag as N.
    # **Note:** If `onlyReSend` is true, the `reMigrate` can't be true.
    resource isolated function post v1/uno\-regenerate/billing\-transaction(string authorization, RegenerateBillingRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), boolean? onlyReSend = (), boolean? reMigrate = ()) returns RegenerateTransactionObjectResponse|error {
        string resourcePath = string `/v1/uno-regenerate/billing-transaction`;
        map<anydata> queryParam = {"onlyReSend": onlyReSend, "reMigrate": reMigrate};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        RegenerateTransactionObjectResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Regenerate revenue recognition events transactions for Delivery Schedule
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + subscriptionNumber - The subcription number.
    # + mode - The generation mode.
    # + forRevenueRecollect - Indicates whether the data regenerated is for Zuora Revenue to recollect.
    resource isolated function post v1/uno\-regenerate/rev\-rec\-events(string authorization, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? subscriptionNumber = (), "Incremental"|"Full" mode = "Incremental", boolean? forRevenueRecollect = ()) returns RegenerateRevRecEventsResponse|error {
        string resourcePath = string `/v1/uno-regenerate/rev-rec-events`;
        map<anydata> queryParam = {"subscriptionNumber": subscriptionNumber, "mode": mode, "forRevenueRecollect": forRevenueRecollect};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        RegenerateRevRecEventsResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Regenerate revenue recognition events transactions for Daily Consumption
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + forRevenueRecollect - Indicates whether the data regenerated is for Zuora Revenue to recollect.
    resource isolated function post v1/uno\-regenerate/rev\-rec\-events/daily\-consumption(string authorization, DailyConsumptionRevRecRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), boolean? forRevenueRecollect = ()) returns RegenerateRevRecEventsResponse|error {
        string resourcePath = string `/v1/uno-regenerate/rev-rec-events/daily-consumption`;
        map<anydata> queryParam = {"forRevenueRecollect": forRevenueRecollect};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        RegenerateRevRecEventsResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List all booking date backfill jobs
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    resource isolated function get v1/uno/data\-backfill/bookingdate/jobs(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns Inline_response_200_8|error {
        string resourcePath = string `/v1/uno/data-backfill/bookingdate/jobs`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Authorization": authorization, "Content-Encoding": contentEncoding, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        Inline_response_200_8 response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create a booking date backfill job
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    resource isolated function post v1/uno/data\-backfill/bookingdate/jobs(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? idempotencyKey = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns Inline_response_200_9|error {
        string resourcePath = string `/v1/uno/data-backfill/bookingdate/jobs`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Authorization": authorization, "Content-Encoding": contentEncoding, "Idempotency-Key": idempotencyKey, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        Inline_response_200_9 response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve a booking date backfill job
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + jobId - ID of the job to retrieve
    resource isolated function get v1/uno/data\-backfill/bookingdate/jobs/[string jobId](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns Inline_response_200_10|error {
        string resourcePath = string `/v1/uno/data-backfill/bookingdate/jobs/${getEncodedUri(jobId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Authorization": authorization, "Content-Encoding": contentEncoding, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        Inline_response_200_10 response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Stop a booking date backfill job
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + jobId - ID of the job to stop
    resource isolated function put v1/uno/data\-backfill/bookingdate/jobs/[string jobId](string authorization, Jobs_jobId_body payload, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/uno/data-backfill/bookingdate/jobs/${getEncodedUri(jobId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Authorization": authorization, "Content-Encoding": contentEncoding, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Create a data backfill job
    #
    resource isolated function post v1/uno/data\-backfill/jobs(Databackfill_jobs_body payload) returns Inline_response_200_11|error {
        string resourcePath = string `/v1/uno/data-backfill/jobs`;
        http:Request request = new;
        mime:Entity[] bodyParts = check createBodyParts(payload);
        request.setBodyParts(bodyParts);
        Inline_response_200_11 response = check self.clientEp->post(resourcePath, request);
        return response;
    }
    # Retrieve a data backfill job
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + jobId - ID of the job to retrieve
    resource isolated function get v1/uno/data\-backfill/jobs/[string jobId](string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns Inline_response_200_12|error {
        string resourcePath = string `/v1/uno/data-backfill/jobs/${getEncodedUri(jobId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Authorization": authorization, "Content-Encoding": contentEncoding, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        Inline_response_200_12 response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Stop a data backfill job
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + jobId - ID of the job to stop
    resource isolated function put v1/uno/data\-backfill/jobs/[string jobId](string authorization, Jobs_jobId_body_1 payload, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/uno/data-backfill/jobs/${getEncodedUri(jobId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Authorization": authorization, "Content-Encoding": contentEncoding, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # List all data backfill jobs
    #
    resource isolated function get v1/uno/data\-backfill/listjobs() returns Inline_response_200_13|error {
        string resourcePath = string `/v1/uno/data-backfill/listjobs`;
        Inline_response_200_13 response = check self.clientEp->get(resourcePath);
        return response;
    }
    # Download a data backfill template file
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + 'type - Type of the template file that you want to download for data backfill
    resource isolated function get v1/uno/back\-fill/jobs/[DataBackfillJobType 'type]/template(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns string|error {
        string resourcePath = string `/v1/uno/back-fill/jobs/${getEncodedUri('type)}/template`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Authorization": authorization, "Content-Encoding": contentEncoding, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        string response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + rejectUnknownFields - Specifies whether the call fails if the request body contains unknown fields.
    # With `rejectUnknownFields` set to `true`, Zuora returns a 400 response if
    # the request body contains unknown fields. The body of the 400 response is:
    # ```json
    # {
    #     "message": "Error - unrecognised fields"
    # }
    # ```
    # By default, Zuora ignores unknown fields in the request body.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + xZuoraWsdlVersion - Zuora WSDL version number.
    resource isolated function post v1/action/create(ProxyActioncreateRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), boolean rejectUnknownFields = false, string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string xZuoraWsdlVersion = "79") returns SaveResult[]|error {
        string resourcePath = string `/v1/action/create`;
        map<anydata> queryParam = {"rejectUnknownFields": rejectUnknownFields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId, "X-Zuora-WSDL-Version": xZuoraWsdlVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        SaveResult[] response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + rejectUnknownFields - Specifies whether the call fails if the request body contains unknown fields.
    # With `rejectUnknownFields` set to `true`, Zuora returns a 400 response if
    # the request body contains unknown fields. The body of the 400 response is:
    # ```json
    # {
    #     "message": "Error - unrecognised fields"
    # }
    # ```
    # By default, Zuora ignores unknown fields in the request body.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + xZuoraWsdlVersion - Zuora WSDL version number.
    resource isolated function post v1/action/delete(ProxyActiondeleteRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), boolean rejectUnknownFields = false, string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string xZuoraWsdlVersion = "79") returns DeleteResult[]|error {
        string resourcePath = string `/v1/action/delete`;
        map<anydata> queryParam = {"rejectUnknownFields": rejectUnknownFields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId, "X-Zuora-WSDL-Version": xZuoraWsdlVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        DeleteResult[] response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Query
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + rejectUnknownFields - Specifies whether the call fails if the request body contains unknown fields.
    # With `rejectUnknownFields` set to `true`, Zuora returns a 400 response if
    # the request body contains unknown fields. The body of the 400 response is:
    # ```json
    # {
    #     "message": "Error - unrecognised fields"
    # }
    # ```
    # By default, Zuora ignores unknown fields in the request body.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + xZuoraWsdlVersion - Zuora WSDL version number.
    resource isolated function post v1/action/query(ProxyActionqueryRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), boolean rejectUnknownFields = false, string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string xZuoraWsdlVersion = "79") returns ProxyActionqueryResponse|error {
        string resourcePath = string `/v1/action/query`;
        map<anydata> queryParam = {"rejectUnknownFields": rejectUnknownFields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId, "X-Zuora-WSDL-Version": xZuoraWsdlVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        ProxyActionqueryResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # QueryMore
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + rejectUnknownFields - Specifies whether the call fails if the request body contains unknown fields.
    # With `rejectUnknownFields` set to `true`, Zuora returns a 400 response if
    # the request body contains unknown fields. The body of the 400 response is:
    # ```json
    # {
    #     "message": "Error - unrecognised fields"
    # }
    # ```
    # By default, Zuora ignores unknown fields in the request body.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + xZuoraWsdlVersion - Zuora WSDL version number.
    resource isolated function post v1/action/queryMore(ProxyActionqueryMoreRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), boolean rejectUnknownFields = false, string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string xZuoraWsdlVersion = "79") returns ProxyActionqueryMoreResponse|error {
        string resourcePath = string `/v1/action/queryMore`;
        map<anydata> queryParam = {"rejectUnknownFields": rejectUnknownFields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId, "X-Zuora-WSDL-Version": xZuoraWsdlVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        ProxyActionqueryMoreResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Update
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + rejectUnknownFields - Specifies whether the call fails if the request body contains unknown fields.
    # With `rejectUnknownFields` set to `true`, Zuora returns a 400 response if
    # the request body contains unknown fields. The body of the 400 response is:
    # ```json
    # {
    #     "message": "Error - unrecognised fields"
    # }
    # ```
    # By default, Zuora ignores unknown fields in the request body.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + xZuoraWsdlVersion - Zuora WSDL version number.
    resource isolated function post v1/action/update(ProxyActionupdateRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), boolean rejectUnknownFields = false, string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string xZuoraWsdlVersion = "79") returns SaveResult[]|error {
        string resourcePath = string `/v1/action/update`;
        map<anydata> queryParam = {"rejectUnknownFields": rejectUnknownFields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId, "X-Zuora-WSDL-Version": xZuoraWsdlVersion};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        SaveResult[] response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Submit settings requests
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + return - OK 
    resource isolated function post settings/batch\-requests(string authorization, SettingsBatchRequest payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns SettingsBatchResponse|error {
        string resourcePath = string `/settings/batch-requests`;
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        SettingsBatchResponse response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # List all settings
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + accept - Specifies response media type. If you omit the `Accept` header parameter, the response body is by default in JSON format. If you include `Accept` header parameter and set it to `application/csv`, the response body is in csv format.
    # + return - OK 
    resource isolated function get settings/listing(string authorization, string? acceptEncoding = (), string? contentEncoding = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string? accept = ()) returns ListAllSettingsResponse|error {
        string resourcePath = string `/settings/listing`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId, "Accept": accept};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ListAllSettingsResponse response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Retrieve a file
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + fileId - The Zuora ID of the file to retrieve.
    resource isolated function get v1/files/[string fileId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns error? {
        string resourcePath = string `/v1/files/${getEncodedUri(fileId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        return self.clientEp->get(resourcePath, httpHeaders);
    }
    # CRUD: Create an import
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + rejectUnknownFields - Specifies whether the call fails if the request body contains unknown fields.
    # With `rejectUnknownFields` set to `true`, Zuora returns a 400 response if
    # the request body contains unknown fields. The body of the 400 response is:
    # ```json
    # {
    #     "message": "Error - unrecognised fields"
    # }
    # ```
    # By default, Zuora ignores unknown fields in the request body.
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    resource isolated function post v1/'object/'import(Object_import_body payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), boolean rejectUnknownFields = false, string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = ()) returns ProxyPostImport|error {
        string resourcePath = string `/v1/object/import`;
        map<anydata> queryParam = {"rejectUnknownFields": rejectUnknownFields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        mime:Entity[] bodyParts = check createBodyParts(payload);
        request.setBodyParts(bodyParts);
        ProxyPostImport response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # CRUD: Retrieve an import
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + fields - Object fields to return
    # + id - Object id
    resource isolated function get v1/'object/'import/[string id](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? zuoraTrackId = (), string? fields = ()) returns ProxyGetImport|error {
        string resourcePath = string `/v1/object/import/${getEncodedUri(id)}`;
        map<anydata> queryParam = {"fields": fields};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds, "Zuora-Track-Id": zuoraTrackId};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        ProxyGetImport response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # List custom exchange rates by currency
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + currency - The target base currency of the tenant. The exchange rates in the response are calculated in relation to the target currency.
    # The value must be a three-letter currency code, for example, USD. 
    # + startDate - Start date of the date range for which you want to get exchange rates.
    # The date must be in yyyy-mm-dd format, for example, 2016-01-15. The start date cannot be later than the end date.
    # + endDate - End date of the date range for which you want to get exchange rates.
    # The date must be in yyyy-mm-dd format, for example, 2016-01-16. The end date can be a maximum of 90 days after the start date.
    resource isolated function get v1/custom\-exchange\-rates/[string currency](string startDate, string endDate, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETCustomExchangeRatesType|error {
        string resourcePath = string `/v1/custom-exchange-rates/${getEncodedUri(currency)}`;
        map<anydata> queryParam = {"startDate": startDate, "endDate": endDate};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETCustomExchangeRatesType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Create an attachment
    #
    # + idempotencyKey - Specify a unique idempotency key if you want to perform an idempotent POST or PATCH request. Do not use this header in other request types. 
    # With this header specified, the Zuora server can identify subsequent retries of the same request using this value, which prevents the same operation from being performed multiple times by accident. 
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + description - Description of the attachment document.
    # + associatedObjectType - The type of the object to add attachements for. 
    # + associatedObjectKey - For the Subscription type, specify the Subscription Number. An attachment is tied to the Subscription Number and thus viewable with every subscription version.
    # For Account, Credit Memo, and Debit Memo, specify the corresponding ID or number. For Invoice, specify the corresponding ID.
    resource isolated function post v1/attachments("Account"|"Invoice"|"Subscription"|"CreditMemo"|"DebitMemo" associatedObjectType, string associatedObjectKey, V1_attachments_body payload, string? idempotencyKey = (), string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? description = ()) returns POSTAttachmentResponseType|error {
        string resourcePath = string `/v1/attachments`;
        map<anydata> queryParam = {"description": description, "associatedObjectType": associatedObjectType, "associatedObjectKey": associatedObjectKey};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Idempotency-Key": idempotencyKey, "Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        mime:Entity[] bodyParts = check createBodyParts(payload);
        request.setBodyParts(bodyParts);
        POSTAttachmentResponseType response = check self.clientEp->post(resourcePath, request, httpHeaders);
        return response;
    }
    # Retrieve an attachment
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + attachmentId - Id of the attachment you want to view.
    resource isolated function get v1/attachments/[string attachmentId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns GETAttachmentResponseType|error {
        string resourcePath = string `/v1/attachments/${getEncodedUri(attachmentId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETAttachmentResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Update an attachment
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + attachmentId - Id of the attachment to be updated.
    resource isolated function put v1/attachments/[string attachmentId](PUTAttachmentType payload, string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/attachments/${getEncodedUri(attachmentId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        http:Request request = new;
        json jsonBody = payload.toJson();
        request.setPayload(jsonBody, "application/json");
        CommonResponse response = check self.clientEp->put(resourcePath, request, httpHeaders);
        return response;
    }
    # Delete an attachment
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + attachmentId - Id of the attachment to be deleted.
    resource isolated function delete v1/attachments/[string attachmentId](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = ()) returns CommonResponse|error {
        string resourcePath = string `/v1/attachments/${getEncodedUri(attachmentId)}`;
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        CommonResponse response = check self.clientEp->delete(resourcePath, headers = httpHeaders);
        return response;
    }
    # List attachments by object type and key
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + page - The index number of the page that you want to retrieve. This parameter is dependent on `pageSize`. You must set `pageSize` before specifying `page`. For example, if you set `pageSize` to `20` and `page` to `2`, the 21st to 40th records are returned in the response.
    # + pageSize - The number of records returned per page in the response.
    # + objectType - The type of the object to list attachements for.
    # + objectKey - ID of the object to list attachements for.
    # - If `object-type` is `account`, specify an account ID or number.
    # - If `object-type` is `invoice`, specify an invoice ID.
    # - If `object-type` is `subscription`, specify a subscription number.
    # - If `object-type` is `creditmemo`, specify a credit memo ID or number.
    # - If `object-type` is `debitmemo`, specify a debit memo ID or number.
    resource isolated function get v1/attachments/["account"|"invoice"|"subscription"|"creditmemo"|"debitmemo" objectType]/[string objectKey](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), int page = 1, int pageSize = 20) returns GETAttachmentsResponseType|error {
        string resourcePath = string `/v1/attachments/${getEncodedUri(objectType)}/${getEncodedUri(objectKey)}`;
        map<anydata> queryParam = {"page": page, "pageSize": pageSize};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        GETAttachmentsResponseType response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
    # Describe an object
    #
    # + acceptEncoding - Include the `Accept-Encoding: gzip` header to compress responses as a gzipped file. It can significantly reduce the bandwidth required for a response. 
    # If specified, Zuora automatically compresses responses that contain over 1000 bytes of data, and the response contains a `Content-Encoding` header with the compression algorithm so that your client can decompress it.
    # + contentEncoding - Include the `Content-Encoding: gzip` header to compress a request. With this header specified, you should upload a gzipped file for the request payload instead of sending the JSON payload.
    # + authorization - The value is in the `Bearer {token}` format where {token} is a valid OAuth token generated by calling [Create an OAuth token](https://developer.zuora.com/api-references/api/operation/createToken).
    # + zuoraTrackId - A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    # The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
    # + zuoraEntityIds - An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
    # + zuoraOrgIds - Comma separated IDs. If you have <a href="https://knowledgecenter.zuora.com/Zuora_Central_Platform/Multi-Org" target="_blank">Zuora Multi-Org</a> enabled, 
    # you can use this header to specify which orgs to perform the operation in. If you do not have Zuora Multi-Org enabled, you should not set this header.
    # The IDs must be a sub-set of the user's accessible orgs. If you specify an org that the user does not have access to, the operation fails.
    # If the header is not set, the operation is performed in scope of the user's accessible orgs.
    # + 'object - API name of an object in your Zuora tenant. For example, `InvoiceItem`. See [Zuora Object Model](https://developer.zuora.com/rest-api/general-concepts/object-model/) for the list of valid object names.
    # Depending on the features enabled in your Zuora tenant, you may not be able to list the fields of some objects.
    # + showCurrencyConversionInformation - Set the value to `yes` to get additional currency conversion information in the result.
    # **Notes:** 
    # - When **Automatically include additional Currency Conversion information** in currency conversion settings is checked, you can pass `yes` to get additional fields in the result. See [Configure Foreign Currency Conversion](https://knowledgecenter.zuora.com/Zuora_Payments/Zuora_Finance/D_Finance_Settings/F_Foreign_Currency_Conversion#:~:text=Automatically%20include%20additional%20Currency%20Conversion%20information%20in%20data%20source%20exports%3A%C2%A0Select%20this%20check%20box%20if%20you%20want%20to%20access%20foreign%20currency%20conversion%20data%20through%20data%20source%20exports.) to check the **Automatically include additional Currency Conversion information**.
    # - By default if you need additional Currency Conversion information, submit a request at <a href="https://support.zuora.com/hc/en-us" target="_blank">Zuora Global Support</a>. Set this parameter value to `no` to not include the additional currency conversion information in the result.
    # + return - Returns an XML document that lists the fields of the specified object 
    resource isolated function get v1/describe/[string 'object](string? acceptEncoding = (), string? contentEncoding = (), string? authorization = (), string? zuoraTrackId = (), string? zuoraEntityIds = (), string? zuoraOrgIds = (), string? showCurrencyConversionInformation = ()) returns string|error {
        string resourcePath = string `/v1/describe/${getEncodedUri('object)}`;
        map<anydata> queryParam = {"showCurrencyConversionInformation": showCurrencyConversionInformation};
        resourcePath = resourcePath + check getPathForQueryParam(queryParam);
        map<any> headerValues = {"Accept-Encoding": acceptEncoding, "Content-Encoding": contentEncoding, "Authorization": authorization, "Zuora-Track-Id": zuoraTrackId, "Zuora-Entity-Ids": zuoraEntityIds, "Zuora-Org-Ids": zuoraOrgIds};
        map<string|string[]> httpHeaders = getMapForHeaders(headerValues);
        string response = check self.clientEp->get(resourcePath, httpHeaders);
        return response;
    }
}
